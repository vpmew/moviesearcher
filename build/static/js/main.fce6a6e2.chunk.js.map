{"version":3,"sources":["img/img404.jpg","img/heart-off-light.svg","img/heart-off-dark.svg","img/heart-on.svg","img/nm-light.svg","img/nm-dark.svg","img/home-ico-light.svg","img/home-ico-dark.svg","img/default-avatar.jpg","variables.js","UI/Loading.js","UI/FilmCard.js","UI/FilmList.js","Header/Search.js","Header/SearchBlock.js","UI/ButtonsBlock.js","UI/Button.js","UI/InfoMessage.js","Header/Filters.js","UI/Avatar.js","UI/UserName.js","Header/Favorites.js","Header/Profile.js","Header/Menu.js","Header/MainHeader.js","Header/SideHeader.js","Main/BestFilms.js","Main/FilteredFilms.js","Main/Main.js","Footer/Footer.js","UI/Body.js","UI/WidthContainer.js","FilmPage/SimilarFilms.js","FilmPage/FilmPage.js","sorting.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","variables","widthS","widthM","widthL","backgroundColorLight","backgroundColorDark","fontColorLight","fontColorDark","fontSizeS","lineHeightS","fontSizeM","lineHeightM","fontSizeL","lineHeightL","Loading","styled","_ref","children","className","react_default","a","createElement","_templateObject","props","nightmode","FilmCard","year","id","title","poster_path","release_date","vote_average","vote_count","genres_ids","genres","genresFromFav","genresOfFilm","toggleFilmToFav","viewWidth","document","documentElement","clientWidth","titleSymbolRestriction","Number","parseInt","genresSymbolRestriction","Date","getFullYear","split","key","indexOf","concat","Object","toConsumableArray","String","join","length","slice","croppedTitle","src","img404","alt","react_router_dom","to","dateTime","value","JSON","stringify","onClick","FilmCard_templateObject","favorites","some","film","heartIcoActive","heartIcoLight","heartIcoDark","FilmList","matchFilms","map","UI_FilmCard","genre_ids","FilmList_templateObject","Search","input","Search_templateObject","SearchBlock","searchValue","searching","searchFilms","enableSearching","disableSearching","changeSearchValue","loading","Header_Search","placeholder","onChange","event","setTimeout","onKeyDown","e","keyCode","target","blur","type","UI_FilmList","SearchBlock_templateObject","ButtonBlock","div","ButtonsBlock_templateObject","width","justify","Button","button","Button_templateObject","name","isActive","menuIsOpen","openedMenuName","fontSize","image","nmLight","nmDark","InfoMessage","InfoMessage_templateObject","color","margin","Filters","toggleGenre","sortBy","toggleSorting","direction","toggleDirection","sortingOptions","getFilteredMovies","genreList","keys","genresIsChecked","enabled","UI_InfoMessage","replace","toLowerCase","checked","option","arr","toUpperCase","Filters_templateObject","Avatar","img","Avatar_templateObject","UserName","UserName_templateObject","Favorites","Favorites_templateObject","UserProfile","userAuthorized","userAvatar","defaultAvatar","userName","defaultName","UI_Avatar","UI_UserName","Header_Favorites","Profile_templateObject","Menu","Header_Filters","Profile","MainHeader","toggleMenu","toggleNightMode","nightModeIsOn","Header_SearchBlock","ButtonsBlock","UI_Button","Header_Menu","MainHeader_templateObject","SideHeader","as","Link","homeIcoLight","homeIcoDark","SideHeader_templateObject","BestFilms","bestMovies","getBestMovies","BestFilms_templateObject","FilteredFilms","filteredMovies","getMoreFilteredMovies","FilteredFilms_templateObject","Main","Main_FilteredFilms","Main_BestFilms","Main_templateObject","Footer","href","Footer_templateObject","Body","Body_templateObject","WidthContainer","WidthContainer_templateObject","SimilarFilms","similarFilms","loadFilmData","getMoreSimilarFilms","getSimilarFilms","SimilarFilms_templateObject","FilmPageStructure","this","location","pathname","nextProps","_this$props","filmData","convertMoney","amount","symbols","reverse","s","i","genresList","genre","releaseDate","date","day","getDay","month","getMonth","convertDate","countries","production_countries","country","companies","production_companies","comp","budget","revenue","homepage","runtime","hours","Math","floor","minutes","convertRuntime","tagline","voteAverage","voteCount","Helmet_default","overview","Boolean","FilmPage_SimilarFilms","React","Component","FilmPage","FilmPage_templateObject","sortByRelevance","_ref2","results","sort","b","App","state","filteredMoviesPage","bestMoviesPage","similarFilmsPage","getGenres","fetch","then","response","json","reducedGenres","reduce","item","_this","setState","catch","error","alert","toggledGenre","objectSpread","defineProperty","prevState","debounce","enabledGenres","enabledGenreIds","encodeURIComponent","obj","page","_ref3","query","films","getFavFilms","localStorage","parse","filmId","fav","newFav","filter","_ref4","_ref5","preventDefault","_this2","UI_Body","UI_WidthContainer","UI_Loading","react_router","path","exact","render","Header_MainHeader","assign","Header_SideHeader","Main_Main","FilmPage_FilmPage","Footer_Footer","window","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fce6a6e2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img404.b5878b22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/heart-off-light.5d17a3da.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-off-dark.e6484ba2.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-on.a8f9ebb6.svg\";","module.exports = __webpack_public_path__ + \"static/media/nm-light.53064712.svg\";","module.exports = __webpack_public_path__ + \"static/media/nm-dark.db93f0cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/home-ico-light.f5214838.svg\";","module.exports = __webpack_public_path__ + \"static/media/home-ico-dark.ffa71548.svg\";","module.exports = __webpack_public_path__ + \"static/media/default-avatar.e5bc1ca7.jpg\";","const variables = {\r\n  widthS: \"320px\",\r\n  widthM: \"768px\",\r\n  widthL: \"991px\",\r\n\r\n  backgroundColorLight: \"#E9F7F9\",\r\n  backgroundColorDark: \"#0C2427\",\r\n  fontColorLight: /* \"#E9F7F9\" */ \"#FFE4AA\",\r\n  fontColorDark: \"#0C2427\",\r\n  // elementsColor: \"#EBDDEE\",\r\n\r\n  fontSizeS: \"14px\",\r\n  // lineHeightS: \"1.4em\",\r\n  lineHeightS: \"20px\",\r\n  fontSizeM: \"22px\",\r\n  // lineHeightM: \"1.4em\",\r\n  lineHeightM: \"28px\",\r\n  fontSizeL: \"22px\",\r\n  // lineHeightL: \"1.4em\"\r\n  lineHeightL: \"28px\"\r\n};\r\n\r\nexport default variables;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport variables from \"../variables\";\r\n\r\nconst LoadingStructure = ({ children, className }) => (\r\n  <div className={className}>\r\n    <div className=\"box\">\r\n      <span>{children}</span>\r\n    </div>\r\n  </div>\r\n);\r\nconst Loading = styled(LoadingStructure)`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  z-index: 3;\r\n\r\n  & .box {\r\n    display: flex;\r\n    position: fixed;\r\n    z-index: 4;\r\n    width: 120px;\r\n    height: 40px;\r\n    left: calc(50% - 60px);\r\n    top: calc(30% - 20px);\r\n    font-size: 1.4em;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    background-color: ${props =>\r\n      props.nightmode\r\n        ? variables.backgroundColorDark\r\n        : variables.backgroundColorLight};\r\n    color: ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n    border: 2px solid\r\n      ${props =>\r\n        props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  }\r\n\r\n  & span {\r\n    margin: auto;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    & .box {\r\n      width: 160px;\r\n      height: 50px;\r\n      left: calc(50% - 80px);\r\n      top: calc(30% - 25px);\r\n      font-size: 1.2em;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Loading;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport img404 from \"../img/img404.jpg\";\r\nimport variables from \"../variables\";\r\nimport heartIcoLight from \"../img/heart-off-light.svg\";\r\nimport heartIcoDark from \"../img/heart-off-dark.svg\";\r\nimport heartIcoActive from \"../img/heart-on.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FilmCardStructure = ({\r\n  id,\r\n  title,\r\n  poster_path,\r\n  className,\r\n  release_date,\r\n  vote_average,\r\n  vote_count,\r\n  genres_ids,\r\n  genres,\r\n  genresOfFilm: genresFromFav,\r\n  toggleFilmToFav\r\n}) => {\r\n  let viewWidth = document.documentElement.clientWidth;\r\n  let releaseDate, year;\r\n  let titleSymbolRestriction =\r\n    viewWidth <= Number.parseInt(variables.widthM)\r\n      ? 35\r\n      : viewWidth <= Number.parseInt(variables.widthL)\r\n      ? 40\r\n      : 45;\r\n  let genresSymbolRestriction =\r\n    viewWidth <= Number.parseInt(variables.widthM)\r\n      ? 40\r\n      : viewWidth <= Number.parseInt(variables.widthL)\r\n      ? 60\r\n      : 65;\r\n  if (release_date) {\r\n    releaseDate = new Date(release_date);\r\n    year = releaseDate.getFullYear();\r\n  }\r\n\r\n  let genresOfFilm = [];\r\n  if (genresFromFav) {\r\n    genresOfFilm = genresFromFav.split(\", \");\r\n  } else if (genres_ids) {\r\n    for (let key in genres) {\r\n      if (~genres_ids.indexOf(genres[key].id)) {\r\n        genresOfFilm = [...genresOfFilm, String(key)];\r\n      }\r\n    }\r\n  }\r\n\r\n  if (genresOfFilm.join(\", \").length > genresSymbolRestriction) {\r\n    genresOfFilm =\r\n      genresOfFilm.join(\", \").slice(0, genresSymbolRestriction - 3) + \"...\";\r\n  } else {\r\n    genresOfFilm = genresOfFilm.join(\", \");\r\n  }\r\n\r\n  let croppedTitle = null;\r\n  if (title.length > titleSymbolRestriction) {\r\n    croppedTitle = title.slice(0, titleSymbolRestriction - 3) + \"...\";\r\n  }\r\n\r\n  return (\r\n    <li className={className}>\r\n      <div className=\"poster\">\r\n        <img\r\n          src={\r\n            poster_path\r\n              ? `https://image.tmdb.org/t/p/w400/${poster_path}`\r\n              : img404\r\n          }\r\n          alt={title}\r\n        />\r\n      </div>\r\n      <p>\r\n        {title ? (\r\n          <Link to={`/filmpages/${id}`}>\r\n            <span className=\"title\">{croppedTitle ? croppedTitle : title}</span>\r\n          </Link>\r\n        ) : (\r\n          \"No Title\"\r\n        )}\r\n        {genresOfFilm.length > 0 ? (\r\n          <span className=\"genres\">{genresOfFilm}</span>\r\n        ) : null}\r\n        {release_date ? (\r\n          <time className=\"date\" dateTime={release_date}>\r\n            {year}\r\n          </time>\r\n        ) : null}\r\n        <span className=\"wrapper\">\r\n          {vote_average ? (\r\n            <span className=\"vote-avg\">\r\n              {String(vote_average).length === 1\r\n                ? [...String(vote_average).split(\"\"), \".\", \"0\"].join(\"\")\r\n                : vote_average}\r\n            </span>\r\n          ) : null}\r\n          {vote_count ? (\r\n            <span className=\"vote-count\">({vote_count} votes)</span>\r\n          ) : null}\r\n        </span>\r\n      </p>\r\n      <button\r\n        className=\"toFav\"\r\n        value={JSON.stringify({\r\n          id,\r\n          poster_path,\r\n          title,\r\n          release_date,\r\n          vote_average,\r\n          vote_count,\r\n          genresOfFilm\r\n        })}\r\n        onClick={toggleFilmToFav}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nconst FilmCard = styled(FilmCardStructure)`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 120px;\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  border-bottom: 2px solid\r\n    ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n\r\n  & .poster {\r\n    width: 25%;\r\n    overflow: hidden;\r\n    background-image: ${props =>\r\n      props.poster_path\r\n        ? `url(https://image.tmdb.org/t/p/w400/${props.poster_path})`\r\n        : `url(${img404})`};\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n\r\n    & img {\r\n      display: none;\r\n      width: 100%;\r\n      height: auto;\r\n    }\r\n  }\r\n\r\n  & p {\r\n    position: relative;\r\n    width: 75%;\r\n    max-height: 100%;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    flex-grow: 1;\r\n    align-self: stretch;\r\n    margin: 0;\r\n\r\n    & a {\r\n      width: calc(100% - 40px);\r\n      padding-left: 10px;\r\n      padding-top: 5px;\r\n      color: inherit;\r\n      font-size: 1.2em;\r\n      font-weight: bold;\r\n      text-decoration: none;\r\n\r\n      &:hover {\r\n        text-decoration: underline;\r\n      }\r\n      max-height: 40%;\r\n    }\r\n\r\n    & .genres {\r\n      font-style: italic;\r\n      width: 80%;\r\n      padding-left: 10px;\r\n      padding-right: 10px;\r\n      font-size: 0.9em;\r\n      max-height: 40%;\r\n    }\r\n\r\n    & .date {\r\n      padding-left: 10px;\r\n      max-height: 20%;\r\n    }\r\n\r\n    & .wrapper {\r\n      position: absolute;\r\n      right: 0;\r\n      bottom: 0;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: flex-end;\r\n\r\n      & .vote-avg {\r\n        background-color: ${props =>\r\n          props.nightmode ? \"transparent\" : variables.fontColorDark};\r\n        font-size: 1.8em;\r\n        padding: 5px;\r\n        color: ${props =>\r\n          props.vote_average >= 7\r\n            ? \"mediumseagreen\"\r\n            : props.vote_average >= 5\r\n            ? \"#f3f300\"\r\n            : props.vote_average >= 3\r\n            ? \"orange\"\r\n            : \"orangered\"};\r\n      }\r\n\r\n      & .vote-count {\r\n        margin-left: 10px;\r\n        align-self: flex-end;\r\n        font-size: 0.7em;\r\n      }\r\n    }\r\n  }\r\n\r\n  & .toFav {\r\n    position: absolute;\r\n    content: \"\";\r\n    right: 0;\r\n    top: 0;\r\n    width: 40px;\r\n    height: 40px;\r\n    padding: 0;\r\n    border: none;\r\n    background-repeat: no-repeat;\r\n    background-size: 50% 50%;\r\n    background-position: 50% 50%;\r\n    background-color: transparent;\r\n    background-image: ${props =>\r\n      props.favorites.some(film => Number(film.id) === Number(props.id))\r\n        ? `url(${heartIcoActive})`\r\n        : props.nightmode\r\n        ? `url(${heartIcoLight})`\r\n        : `url(${heartIcoDark})`};\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-size: 60% 60%;\r\n      opacity: ${props =>\r\n        props.favorites.some(film => Number(film.id) === Number(props.id))\r\n          ? \"0.5\"\r\n          : \"1\"};\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    height: 120px;\r\n\r\n    & p {\r\n      & a {\r\n        width: calc(100% - 50px);\r\n        font-size: 0.9em;\r\n        line-height: 1.2em;\r\n      }\r\n\r\n      & .genres {\r\n        padding-top: 5px;\r\n        font-size: 0.7em;\r\n        line-height: 1.2em;\r\n      }\r\n\r\n      & .date {\r\n        padding-top: 5px;\r\n        font-size: 0.7em;\r\n        line-height: 1.2em;\r\n      }\r\n\r\n      & .wrapper {\r\n        & .vote-avg {\r\n          font-size: 1.6em;\r\n        }\r\n\r\n        & .vote-count {\r\n          font-size: 0.5em;\r\n        }\r\n      }\r\n    }\r\n    & .toFav {\r\n      width: 50px;\r\n      height: 50px;\r\n      background-size: 70% 70%;\r\n      background-position: 50% 50%;\r\n      &:hover {\r\n        background-size: 80% 80%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default FilmCard;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport FilmCard from \"./FilmCard\";\r\nimport variables from \"../variables\";\r\n\r\nconst FilmListStructure = ({\r\n  matchFilms,\r\n  className,\r\n  nightmode,\r\n  genres,\r\n  toggleFilmToFav,\r\n  favorites\r\n}) => {\r\n  return (\r\n    <ul className={className}>\r\n      {matchFilms.map(film => (\r\n        <FilmCard\r\n          key={film.id}\r\n          id={film.id}\r\n          title={film.title}\r\n          poster_path={film.poster_path}\r\n          nightmode={nightmode}\r\n          release_date={film.release_date}\r\n          vote_average={film.vote_average}\r\n          vote_count={film.vote_count}\r\n          genres_ids={film.genre_ids}\r\n          genres={genres}\r\n          genresOfFilm={film.genresOfFilm}\r\n          toggleFilmToFav={toggleFilmToFav}\r\n          favorites={favorites}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst FilmList = styled(FilmListStructure)`\r\n  width: 100%;\r\n  max-height: 360px;\r\n  background-color: ${props =>\r\n    props.nightmode\r\n      ? variables.backgroundColorDark\r\n      : variables.backgroundColorLight};\r\n  color: ${props =>\r\n    props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  box-shadow: -1px 2px 3px 0\r\n    ${props =>\r\n      props.nightmode ? \"rgba(255, 255, 255, 0.6)\" : \"rgba(0, 0, 0, 0.4)\"};\r\n`;\r\n\r\nexport default FilmList;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../variables\";\r\n\r\nconst Search = styled.input`\r\n  width: 100%;\r\n  height: 40px;\r\n  border: 2px solid\r\n    ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  font-size: inherit;\r\n  font-family: inherit;\r\n  background-color: ${props =>\r\n    props.nightmode\r\n      ? variables.backgroundColorDark\r\n      : variables.backgroundColorLight};\r\n  color: inherit;\r\n  padding: 0 15px;\r\n  transition: box-shadow 0.1s ease;\r\n\r\n  &::placeholder {\r\n    color: ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: inset -1px 1px 3px 0 ${props => (props.nightmode ? \"rgba(255, 255, 255, 0.6)\" : \"rgba(0, 0, 0, 0.4)\")};\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    height: 45px;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    height: 50px;\r\n  }\r\n`;\r\n\r\nexport default Search;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport FilmList from \"../UI/FilmList\";\r\nimport Search from \"./Search\";\r\nimport variables from \"../variables\";\r\n\r\nconst SearchBlockStructure = ({\r\n  searchValue,\r\n  searching,\r\n  searchFilms,\r\n  enableSearching,\r\n  disableSearching,\r\n  changeSearchValue,\r\n  matchFilms,\r\n  className,\r\n  nightmode,\r\n  genres,\r\n  toggleFilmToFav,\r\n  favorites,\r\n  loading\r\n}) => {\r\n  return (\r\n    <div className={className}>\r\n      {searching && searchValue && !loading ? (\r\n        <div className=\"overlay\" onClick={disableSearching} />\r\n      ) : null}\r\n      <div className=\"wrapper\">\r\n        <Search\r\n          placeholder=\"Find a movie...\"\r\n          value={searchValue}\r\n          onChange={event => {\r\n            changeSearchValue(event);\r\n            setTimeout(() => searchFilms(), 0);\r\n          }}\r\n          onClick={enableSearching}\r\n          onKeyDown={e => {\r\n            if (e.keyCode === 27) {\r\n              disableSearching();\r\n              e.target.blur();\r\n            }\r\n          }}\r\n          type=\"text\"\r\n          nightmode={nightmode}\r\n        />\r\n        {searching && searchValue ? (\r\n          <button\r\n            className=\"closeButton\"\r\n            type=\"button\"\r\n            onClick={disableSearching}\r\n          >\r\n            Close\r\n          </button>\r\n        ) : null}\r\n        {searching && matchFilms ? (\r\n          <FilmList\r\n            matchFilms={matchFilms}\r\n            nightmode={nightmode}\r\n            genres={genres}\r\n            toggleFilmToFav={toggleFilmToFav}\r\n            favorites={favorites}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SearchBlock = styled(SearchBlockStructure)`\r\n  position: relative;\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n  z-index: 2;\r\n\r\n  & .overlay {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    z-index: 1;\r\n    background: rgba(0, 0, 0, 0.3);\r\n  }\r\n\r\n  & .wrapper {\r\n    position: relative;\r\n    z-index: 2;\r\n  }\r\n\r\n  & .closeButton {\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 5px;\r\n    height: 30px;\r\n    width: 30px;\r\n    border: none;\r\n    background: transparent;\r\n    font-size: 0;\r\n    cursor: pointer;\r\n\r\n    &::before,\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 13px;\r\n      right: 0px;\r\n      width: 26px;\r\n      height: 5px;\r\n      border-radius: 1px;\r\n      background-color: ${props =>\r\n        props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n      transform: rotate(-45deg);\r\n    }\r\n\r\n    &::after {\r\n      transform: rotate(45deg);\r\n    }\r\n  }\r\n\r\n  & ul {\r\n    overflow-y: scroll;\r\n    position: absolute;\r\n    top: 100%;\r\n    right: 0;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: 60%;\r\n\r\n    & .closeButton {\r\n      top: 7px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    width: 45%;\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n\r\n    & .closeButton {\r\n      top: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SearchBlock;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../variables\";\r\n\r\nconst ButtonBlock = styled.div`\r\n  width: ${props => (props.width ? props.width : \"100%\")};\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  justify-content: ${props =>\r\n    props.justify ? props.justify : \"space-between\"};\r\n\r\n  & *:nth-child(n + 2) {\r\n    margin-left: -2px;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: ${props => (props.width ? props.width : \"calc(40% + 2px)\")};\r\n    margin-left: -2px;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    width: ${props => (props.width ? props.width : \"45%\")};\r\n    margin-left: 0;\r\n  }\r\n`;\r\n\r\nexport default ButtonBlock;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../variables\";\r\nimport nmLight from \"../img/nm-light.svg\";\r\nimport nmDark from \"../img/nm-dark.svg\";\r\n\r\nconst Button = styled.button`\r\n  width: ${props =>\r\n    props.width\r\n      ? props.width\r\n      : props.name === \"Night mode\"\r\n      ? \"calc(33% / 2)\"\r\n      : \"33%\"};\r\n  height: 40px;\r\n  cursor: pointer;\r\n  border: 2px solid\r\n    ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  color: ${props => {\r\n    let isActive = props.menuIsOpen && props.openedMenuName === props.name;\r\n    if (props.nightmode && isActive) {\r\n      return variables.fontColorDark;\r\n    } else if (props.nightmode && !isActive) {\r\n      return variables.fontColorLight;\r\n    } else if (!props.nightmode && isActive) {\r\n      return variables.backgroundColorLight;\r\n    } else if (!props.nightmode && !isActive) {\r\n      return variables.fontColorDark;\r\n    }\r\n  }};\r\n  font-size: ${props =>\r\n    props.fontSize\r\n      ? props.fontSize\r\n      : props.name === \"Night mode\"\r\n      ? \"0\"\r\n      : \"inherit\"};\r\n  font-family: inherit;\r\n  background-color: ${props => {\r\n    let isActive = props.menuIsOpen && props.openedMenuName === props.name;\r\n    if (props.nightmode && isActive) {\r\n      return variables.fontColorLight;\r\n    } else if (props.nightmode && !isActive) {\r\n      return \"transparent\";\r\n    } else if (!props.nightmode && isActive) {\r\n      return variables.backgroundColorDark;\r\n    } else if (!props.nightmode && !isActive) {\r\n      return \"transparent\";\r\n    }\r\n  }};\r\n  background-image: ${props =>\r\n    props.image\r\n      ? `url(${props.image})`\r\n      : props.name === \"Night mode\" && props.nightmode\r\n      ? `url(${nmLight})`\r\n      : props.name === \"Night mode\" && !props.nightmode\r\n      ? `url(${nmDark})`\r\n      : \"none\"};\r\n  background-size: 100% 70%;\r\n  background-position: 50% 50%;\r\n  background-repeat: no-repeat;\r\n  transition: box-shadow 0.1s ease;\r\n\r\n  &:hover {\r\n    box-shadow: -1px 2px 3px 0\r\n      ${props =>\r\n        props.nightmode ? \"rgba(255, 255, 255, 0.6)\" : \"rgba(0, 0, 0, 0.4)\"};\r\n  }\r\n\r\n  &:active {\r\n    color: ${props =>\r\n      props.nightmode\r\n        ? variables.fontColorDark\r\n        : variables.backgroundColorLight};\r\n    background-color: ${props =>\r\n      props.nightmode\r\n        ? variables.fontColorLight\r\n        : variables.backgroundColorDark};\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    height: 45px;\r\n    width: ${props =>\r\n      props.width\r\n        ? props.width\r\n        : props.name === \"Night mode\"\r\n        ? \"20%\"\r\n        : \"calc(40% + 2px)\"};\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    height: 50px;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nconst InfoMessage = styled.p`\r\n  color: ${props => props.color};\r\n  font-weight: bold;\r\n  border: 2px solid ${props => props.color};\r\n  width: ${props => props.width};\r\n  padding: 5px 10px;\r\n  text-align: center;\r\n  margin: ${props => props.margin || \"auto\"};\r\n`;\r\n\r\nexport default InfoMessage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport variables from \"../variables\";\r\nimport InfoMessage from \"../UI/InfoMessage\";\r\n\r\nconst FiltersStructure = ({\r\n  genres,\r\n  toggleGenre,\r\n  sortBy,\r\n  toggleSorting,\r\n  direction,\r\n  toggleDirection,\r\n  sortingOptions,\r\n  className,\r\n  getFilteredMovies\r\n}) => {\r\n  let genreList = Object.keys(genres);\r\n  let genresIsChecked = false;\r\n  for (let key in genres) {\r\n    if (genres[key].enabled === true) {\r\n      genresIsChecked = true;\r\n      break;\r\n    }\r\n  }\r\n  return (\r\n    <form className={className}>\r\n      {!genresIsChecked ? (\r\n        <InfoMessage color=\"orangered\" width=\"100%\" margin=\"0 auto 5px\">\r\n          Please, choose at least one genre to see results below.\r\n        </InfoMessage>\r\n      ) : null}\r\n      <fieldset className=\"genres\">\r\n        <legend>Genres:</legend>\r\n        <div className=\"fieldsetFlexFix\">\r\n          {genreList.map(name => (\r\n            <label\r\n              className={`${name.replace(\" \", \"-\").toLowerCase()}`}\r\n              key={genres[name].id}\r\n            >\r\n              <input\r\n                onChange={event => {\r\n                  toggleGenre(event);\r\n                  getFilteredMovies();\r\n                }}\r\n                type=\"checkbox\"\r\n                name={name}\r\n                checked={genres[name].enabled}\r\n              />\r\n              <span>{name}</span>\r\n            </label>\r\n          ))}\r\n        </div>\r\n      </fieldset>\r\n\r\n      <fieldset className=\"sort-by\">\r\n        <legend>Sort by:</legend>\r\n        <div className=\"fieldsetFlexFix\">\r\n          {sortingOptions.map(option => {\r\n            return (\r\n              <label key={option}>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"sortBy\"\r\n                  value={option}\r\n                  checked={option === sortBy}\r\n                  onChange={event => {\r\n                    toggleSorting(event);\r\n                    setTimeout(() => getFilteredMovies(), 0);\r\n                  }}\r\n                />\r\n                <span>\r\n                  {(option => {\r\n                    let arr = option.split(\"\");\r\n                    let str;\r\n                    arr[0] = arr[0].toUpperCase();\r\n                    str = arr.join(\"\");\r\n                    return str;\r\n                  })(option)}\r\n                </span>\r\n              </label>\r\n            );\r\n          })}\r\n        </div>\r\n      </fieldset>\r\n\r\n      <fieldset className=\"direction\">\r\n        <legend>Direction:</legend>\r\n        <div className=\"fieldsetFlexFix\">\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"direction\"\r\n              value=\"ascending\"\r\n              checked={direction === \"ascending\"}\r\n              onChange={event => {\r\n                toggleDirection(event);\r\n                setTimeout(() => getFilteredMovies(), 0);\r\n              }}\r\n            />\r\n            <span>Ascending</span>\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              name=\"direction\"\r\n              value=\"descending\"\r\n              checked={direction === \"descending\"}\r\n              onChange={event => {\r\n                toggleDirection(event);\r\n                setTimeout(() => getFilteredMovies(), 0);\r\n              }}\r\n            />\r\n            <span>Descending</span>\r\n          </label>\r\n        </div>\r\n      </fieldset>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst Filters = styled(FiltersStructure)`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  justify-content: space-between;\r\n  padding-top: 10px;\r\n\r\n  & input:not(:checked) ~ span:hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  & fieldset {\r\n    margin: 0;\r\n    border: 2px solid\r\n      ${props =>\r\n        props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n\r\n    & legend {\r\n      font-size: 18px;\r\n      padding: 0 10px;\r\n    }\r\n\r\n    & label {\r\n      width: 100%;\r\n      height: 35px;\r\n    }\r\n\r\n    & div {\r\n      display: flex;\r\n      flex-direction: column;\r\n      flex-wrap: wrap;\r\n      height: 100%;\r\n      align-content: space-between;\r\n    }\r\n  }\r\n\r\n  & .genres {\r\n    width: 100%;\r\n    height: 380px;\r\n\r\n    & label {\r\n      width: 45%;\r\n\r\n      & input {\r\n        display: none;\r\n      }\r\n      & span {\r\n        position: relative;\r\n        display: block;\r\n        cursor: pointer;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: left;\r\n        padding-left: 25px;\r\n        padding-top: 6px;\r\n\r\n        &::before {\r\n          content: \"\";\r\n          position: absolute;\r\n          top: 8px;\r\n          left: 0;\r\n          /* z-index: 1; */\r\n          width: 16px;\r\n          height: 16px;\r\n          border: 2px solid\r\n            ${props =>\r\n              props.nightmode\r\n                ? variables.fontColorLight\r\n                : variables.fontColorDark};\r\n          transition: transform 0.3s;\r\n        }\r\n      }\r\n      & input:checked ~ span::before {\r\n        width: 21px;\r\n        height: 10px;\r\n        border-width: 4px;\r\n        border-color: ${props =>\r\n          props.nightmode ? \"palegreen\" : \"mediumseagreen\"};\r\n        border-top: none;\r\n        border-right: none;\r\n        transform: rotate(-45deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  & .sort-by,\r\n  .direction {\r\n    width: 48%;\r\n    margin: 10px 0 0;\r\n  }\r\n\r\n  & .sort-by {\r\n    & input {\r\n      display: none;\r\n    }\r\n\r\n    & span {\r\n      position: relative;\r\n      display: block;\r\n      cursor: pointer;\r\n      width: 100%;\r\n      height: 100%;\r\n      text-align: left;\r\n      padding-left: 25px;\r\n      padding-top: 6px;\r\n\r\n      &::before,\r\n      &::after {\r\n        position: absolute;\r\n        top: 8px;\r\n        left: 0;\r\n        content: \"\";\r\n        border-radius: 50%;\r\n      }\r\n\r\n      &::before {\r\n        width: 16px;\r\n        height: 16px;\r\n        border: 2px solid\r\n          ${props =>\r\n            props.nightmode\r\n              ? variables.fontColorLight\r\n              : variables.fontColorDark};\r\n      }\r\n      &::after {\r\n        width: 16px;\r\n        height: 16px;\r\n        background: ${props =>\r\n          props.nightmode ? \"palegreen\" : \"mediumseagreen\"};\r\n        transform: scale(0);\r\n        transition: transform 0.3s;\r\n      }\r\n    }\r\n\r\n    & input[type=\"radio\"]:checked ~ span::after {\r\n      transform: scale(1.1);\r\n    }\r\n  }\r\n\r\n  & .direction {\r\n    & input {\r\n      display: none;\r\n    }\r\n\r\n    & span {\r\n      position: relative;\r\n      display: block;\r\n      cursor: pointer;\r\n      width: 100%;\r\n      height: 100%;\r\n      text-align: left;\r\n      padding-left: 25px;\r\n      padding-top: 6px;\r\n\r\n      &::before {\r\n        position: absolute;\r\n        top: 8px;\r\n        left: 0;\r\n        content: \"\";\r\n        width: 0;\r\n        height: 0;\r\n        border-top: 16px solid\r\n          ${props =>\r\n            props.direction === \"descending\" && props.nightmode\r\n              ? \"palegreen\"\r\n              : props.direction === \"descending\" && !props.nightmode\r\n              ? \"mediumseagreen\"\r\n              : props.nightmode\r\n              ? variables.fontColorLight\r\n              : !props.nightmode\r\n              ? variables.fontColorDark\r\n              : \"transparent\"};\r\n        border-bottom: 0px solid transparent;\r\n        border-right: 10px solid transparent;\r\n        border-left: 10px solid transparent;\r\n\r\n        transition: ${props =>\r\n          props.direction === \"descending\" ? \"border-top 0.3s\" : \"none\"};\r\n      }\r\n    }\r\n\r\n    & label:first-child {\r\n      & span::before {\r\n        border-bottom: 16px solid\r\n          ${props =>\r\n            props.direction === \"ascending\" && props.nightmode\r\n              ? \"palegreen\"\r\n              : props.direction === \"ascending\" && !props.nightmode\r\n              ? \"mediumseagreen\"\r\n              : props.nightmode\r\n              ? variables.fontColorLight\r\n              : !props.nightmode\r\n              ? variables.fontColorDark\r\n              : \"transparent\"};\r\n        border-top: 0px solid transparent;\r\n\r\n        transition: ${props =>\r\n          props.direction === \"ascending\" ? \"border-bottom 0.3s\" : \"none\"};\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: 100%;\r\n    .genres {\r\n      width: 60%;\r\n      height: 400px;\r\n\r\n      & label span {\r\n        padding-top: 0;\r\n        line-height: 32px;\r\n      }\r\n    }\r\n    .sort-by {\r\n      width: 35%;\r\n      height: 240px;\r\n      margin: 0;\r\n\r\n      & label span {\r\n        padding-top: 0;\r\n        line-height: 32px;\r\n      }\r\n    }\r\n\r\n    .direction {\r\n      width: 35%;\r\n      height: 160px;\r\n      margin-top: -160px;\r\n      margin-left: 65%;\r\n\r\n      & label span {\r\n        padding-top: 0;\r\n        line-height: 32px;\r\n      }\r\n    }\r\n\r\n    & fieldset {\r\n      & legend {\r\n        font-size: inherit;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    order: 3;\r\n\r\n    & .genres {\r\n      width: 65%;\r\n      height: 300px;\r\n\r\n      & label {\r\n        width: calc(100% / 3);\r\n      }\r\n    }\r\n\r\n    & .sort-by {\r\n      width: 30%;\r\n      height: 180px;\r\n    }\r\n\r\n    & .direction {\r\n      width: 30%;\r\n      height: 115px;\r\n      margin-top: -115px;\r\n      margin-left: 70%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Filters;\r\n","import styled from \"styled-components\";\r\n\r\nconst Avatar = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport default Avatar;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../variables\";\r\n\r\nconst UserName = styled.p`\r\n  width: 100%;\r\n  margin: 0 0 10px;\r\n  font-weight: bold;\r\n  font-size: 1.2em;\r\n  text-align: center;\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport default UserName;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FilmList from \"../UI/FilmList\";\r\nimport variables from \"../variables\";\r\n\r\nconst FavoritesStructure = ({\r\n  favorites,\r\n  toggleFilmToFav,\r\n  nightmode,\r\n  className\r\n}) => {\r\n  return (\r\n    <section className={className}>\r\n      <h2>Favorites</h2>\r\n      {favorites.length > 0 ? (\r\n        <FilmList\r\n          nightmode={nightmode}\r\n          matchFilms={favorites}\r\n          toggleFilmToFav={toggleFilmToFav}\r\n          favorites={favorites}\r\n        />\r\n      ) : (\r\n        <p className=\"info-message\">Favorites is empty</p>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nconst Favorites = styled(FavoritesStructure)`\r\n  width: 100%;\r\n  position: relative;\r\n\r\n  & h2 {\r\n    text-align: center;\r\n    margin: 15px 0;\r\n  }\r\n\r\n  & ul {\r\n    max-height: 360px;\r\n    overflow-y: scroll;\r\n    width: 100%;\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    flex-shrink: 0;\r\n    padding: 0;\r\n    box-shadow: none;\r\n    border: 2px solid\r\n      ${props =>\r\n        props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n\r\n    & li:last-child {\r\n      border-bottom: none;\r\n    }\r\n  }\r\n\r\n  & .info-message {\r\n    text-align: center;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    height: 2px;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    background-color: lightgrey;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: 60%;\r\n    margin: 0 auto;\r\n\r\n    &::after {\r\n      left: -${(20 / 60) * 100}%;\r\n      right: -${(20 / 60) * 100}%;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    order: 2;\r\n    width: 45%;\r\n\r\n    &::after {\r\n      top: 0;\r\n      bottom: 0;\r\n      right: auto;\r\n      left: calc(-${(5 / 45) * 100}% - 1px);\r\n      width: 2px;\r\n      height: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Avatar from \"../UI/Avatar\";\r\nimport UserName from \"../UI/UserName\";\r\nimport InfoMessage from \"../UI/InfoMessage\";\r\nimport Favorites from \"./Favorites\";\r\nimport variables from \"../variables\";\r\n\r\nconst UserProfileStructure = ({\r\n  userAuthorized,\r\n  userAvatar,\r\n  defaultAvatar,\r\n  userName,\r\n  defaultName,\r\n  nightmode,\r\n  className,\r\n  favorites,\r\n  toggleFilmToFav\r\n}) => {\r\n  return (\r\n    <div className={className}>\r\n      {!userName ? (\r\n        <InfoMessage color=\"orangered\">\r\n          Registration is unavailable at the moment, but you can add films to\r\n          favorites.\r\n        </InfoMessage>\r\n      ) : null}\r\n      <div className=\"user-info\">\r\n        <Avatar\r\n          src={userAuthorized ? userAvatar : defaultAvatar}\r\n          alt=\"Your avatar\"\r\n        />\r\n        <UserName>{userAuthorized ? userName : defaultName}</UserName>\r\n      </div>\r\n      <Favorites\r\n        favorites={favorites}\r\n        toggleFilmToFav={toggleFilmToFav}\r\n        nightmode={nightmode}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst UserProfile = styled(UserProfileStructure)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-flow: row wrap;\r\n  flex-shrink: 0;\r\n  width: 100%;\r\n  padding: 20px 0;\r\n\r\n  .user-info {\r\n    width: 30%;\r\n    margin-top: 20px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    align-self: center;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    & .user-info {\r\n      width: 15%;\r\n      margin-top: 0;\r\n      align-self: flex-start;\r\n      order: -1;\r\n      font-size: 0.7em;\r\n    }\r\n\r\n    & > p {\r\n      width: 65%;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    order: 3;\r\n    padding-bottom: 0;\r\n\r\n    & .user-info {\r\n      order: 1;\r\n      margin-bottom: auto;\r\n      margin-top: auto;\r\n    }\r\n\r\n    & > p {\r\n      width: 100%;\r\n      margin-bottom: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport Filters from \"./Filters\";\r\nimport Profile from \"./Profile\";\r\n\r\nconst Menu = ({\r\n  openedMenuName,\r\n  menuIsOpen,\r\n  genres,\r\n  toggleGenre,\r\n  sortBy,\r\n  sortingOptions,\r\n  toggleSorting,\r\n  direction,\r\n  toggleDirection,\r\n  userAuthorized,\r\n  userAvatar,\r\n  defaultAvatar,\r\n  userName,\r\n  defaultName,\r\n  nightmode,\r\n  favorites,\r\n  toggleFilmToFav,\r\n  getFilteredMovies\r\n}) => {\r\n  let Menu;\r\n  if (openedMenuName === \"Filters\" && menuIsOpen) {\r\n    Menu = (\r\n      <Filters\r\n        genres={genres}\r\n        toggleGenre={toggleGenre}\r\n        sortBy={sortBy}\r\n        sortingOptions={sortingOptions}\r\n        toggleSorting={toggleSorting}\r\n        direction={direction}\r\n        toggleDirection={toggleDirection}\r\n        nightmode={nightmode}\r\n        getFilteredMovies={getFilteredMovies}\r\n      />\r\n    );\r\n  } else if (openedMenuName === \"Profile\" && menuIsOpen) {\r\n    Menu = (\r\n      <Profile\r\n        userAuthorized={userAuthorized}\r\n        userAvatar={userAvatar}\r\n        defaultAvatar={defaultAvatar}\r\n        userName={userName}\r\n        defaultName={defaultName}\r\n        nightmode={nightmode}\r\n        favorites={favorites}\r\n        toggleFilmToFav={toggleFilmToFav}\r\n      />\r\n    );\r\n  } else {\r\n    Menu = null;\r\n  }\r\n  return Menu;\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SearchBlock from \"./SearchBlock\";\r\nimport ButtonsBlock from \"../UI/ButtonsBlock\";\r\nimport Button from \"../UI/Button\";\r\nimport Menu from \"./Menu\";\r\nimport variables from \"../variables\";\r\n\r\nconst HeaderStructure = ({\r\n  searchValue,\r\n  searching,\r\n  enableSearching,\r\n  disableSearching,\r\n  changeSearchValue,\r\n  searchFilms,\r\n  matchFilms,\r\n  menuIsOpen,\r\n  openedMenuName,\r\n  toggleMenu,\r\n  toggleNightMode,\r\n  nightModeIsOn,\r\n  genres,\r\n  toggleGenre,\r\n  sortingOptions,\r\n  sortBy,\r\n  toggleSorting,\r\n  direction,\r\n  toggleDirection,\r\n  userAuthorized,\r\n  userAvatar,\r\n  defaultAvatar,\r\n  userName,\r\n  defaultName,\r\n  className,\r\n  toggleFilmToFav,\r\n  favorites,\r\n  getFilteredMovies,\r\n  loading\r\n}) => {\r\n  return (\r\n    <header className={className}>\r\n      <h1>Moviesearcher v1.0.0</h1>\r\n      <SearchBlock\r\n        searchValue={searchValue}\r\n        searching={searching}\r\n        enableSearching={enableSearching}\r\n        disableSearching={disableSearching}\r\n        changeSearchValue={changeSearchValue}\r\n        searchFilms={searchFilms}\r\n        matchFilms={matchFilms}\r\n        nightmode={nightModeIsOn}\r\n        genres={genres}\r\n        toggleFilmToFav={toggleFilmToFav}\r\n        favorites={favorites}\r\n        loading={loading}\r\n      />\r\n      <ButtonsBlock>\r\n        <Button\r\n          name=\"Filters\"\r\n          onClick={toggleMenu}\r\n          nightmode={nightModeIsOn}\r\n          menuIsOpen={menuIsOpen}\r\n          openedMenuName={openedMenuName}\r\n        >\r\n          Filters\r\n        </Button>\r\n        <Button\r\n          name=\"Profile\"\r\n          onClick={toggleMenu}\r\n          nightmode={nightModeIsOn}\r\n          menuIsOpen={menuIsOpen}\r\n          openedMenuName={openedMenuName}\r\n        >\r\n          Profile\r\n        </Button>\r\n        <Button\r\n          name=\"Night mode\"\r\n          onClick={toggleNightMode}\r\n          nightmode={nightModeIsOn}\r\n        />\r\n      </ButtonsBlock>\r\n      <Menu\r\n        menuIsOpen={menuIsOpen}\r\n        openedMenuName={openedMenuName}\r\n        genres={genres}\r\n        toggleGenre={toggleGenre}\r\n        sortBy={sortBy}\r\n        sortingOptions={sortingOptions}\r\n        toggleSorting={toggleSorting}\r\n        direction={direction}\r\n        toggleDirection={toggleDirection}\r\n        userAuthorized={userAuthorized}\r\n        userAvatar={userAvatar}\r\n        defaultAvatar={defaultAvatar}\r\n        userName={userName}\r\n        defaultName={defaultName}\r\n        nightmode={nightModeIsOn}\r\n        favorites={favorites}\r\n        toggleFilmToFav={toggleFilmToFav}\r\n        getFilteredMovies={getFilteredMovies}\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nconst MainHeader = styled(HeaderStructure)`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  & h1 {\r\n    width: 100%;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    & h1 {\r\n      font-size: 1.6em;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    padding-bottom: 30px;\r\n    padding-top: 30px;\r\n\r\n    & h1 {\r\n      margin: 0;\r\n      font-size: 1.8em;\r\n      width: 45%;\r\n      margin-top: 30px;\r\n    }\r\n\r\n    & > div:nth-child(2) {\r\n      order: 2;\r\n      margin-top: -17px;\r\n      margin-left: auto;\r\n      /* margin-bottom: 15px; */\r\n    }\r\n\r\n    & > div:nth-child(3) {\r\n      order: 1;\r\n      margin-top: auto;\r\n      margin-bottom: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default MainHeader;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ButtonsBlock from \"../UI/ButtonsBlock\";\r\nimport Button from \"../UI/Button\";\r\nimport SearchBlock from \"./SearchBlock\";\r\nimport { Link } from \"react-router-dom\";\r\nimport homeIcoLight from \"../img/home-ico-light.svg\";\r\nimport homeIcoDark from \"../img/home-ico-dark.svg\";\r\nimport variables from \"../variables\";\r\n\r\nconst HeaderStructure = ({\r\n  searchValue,\r\n  searching,\r\n  matchFilms,\r\n  genres,\r\n  favorites,\r\n  nightModeIsOn,\r\n  toggleNightMode,\r\n  searchFilms,\r\n  changeSearchValue,\r\n  enableSearching,\r\n  disableSearching,\r\n  toggleFilmToFav,\r\n  className,\r\n  loading\r\n}) => {\r\n  return (\r\n    <header className={className}>\r\n      <h1>Moviesearcher v1.0.0</h1>\r\n      <SearchBlock\r\n        searchValue={searchValue}\r\n        searching={searching}\r\n        enableSearching={enableSearching}\r\n        disableSearching={disableSearching}\r\n        changeSearchValue={changeSearchValue}\r\n        searchFilms={searchFilms}\r\n        matchFilms={matchFilms}\r\n        nightmode={nightModeIsOn}\r\n        genres={genres}\r\n        toggleFilmToFav={toggleFilmToFav}\r\n        favorites={favorites}\r\n        loading={loading}\r\n      />\r\n      <ButtonsBlock justify=\"flex-end\">\r\n        <Button\r\n          as={Link}\r\n          name=\"Main\"\r\n          nightmode={nightModeIsOn}\r\n          to=\"/\"\r\n          width=\"calc(33% / 2)\"\r\n          image={nightModeIsOn ? homeIcoLight : homeIcoDark}\r\n        />\r\n        <Button\r\n          name=\"Night mode\"\r\n          onClick={toggleNightMode}\r\n          nightmode={nightModeIsOn}\r\n        />\r\n      </ButtonsBlock>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst SideHeader = styled(HeaderStructure)`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  & h1 {\r\n    width: 100%;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    & h1 {\r\n      font-size: 1.6em;\r\n    }\r\n\r\n    & button {\r\n      width: 50%;\r\n    }\r\n\r\n    & a {\r\n      width: 50%;\r\n    }\r\n\r\n    & > div:nth-child(3) {\r\n      width: calc(40% + 4px);\r\n      margin-left: -4px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    padding-top: 30px;\r\n\r\n    & h1 {\r\n      font-size: 1.8em;\r\n      width: 50%;\r\n      margin-top: 30px;\r\n      margin-bottom: 0;\r\n    }\r\n\r\n    & > div:nth-child(2) {\r\n      order: 2;\r\n      margin-left: auto;\r\n      margin-top: -17px;\r\n    }\r\n\r\n    & > div:nth-child(3) {\r\n      order: 1;\r\n      margin-top: auto;\r\n      width: calc(45% + 2px);\r\n      margin-left: -2px;\r\n      margin-bottom: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SideHeader;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FilmList from \"../UI/FilmList\";\r\nimport Button from \"../UI/Button\";\r\nimport variables from \"../variables\";\r\n\r\nconst BestFilmsStructure = ({\r\n  bestMovies,\r\n  toggleFilmToFav,\r\n  getBestMovies,\r\n  nightmode,\r\n  genres,\r\n  favorites,\r\n  className\r\n}) => (\r\n  <section className={className}>\r\n    <h2>Best films</h2>\r\n    <FilmList\r\n      nightmode={nightmode}\r\n      matchFilms={bestMovies}\r\n      toggleFilmToFav={toggleFilmToFav}\r\n      genres={genres}\r\n      favorites={favorites}\r\n    />\r\n    <Button nightmode={nightmode} onClick={getBestMovies}>\r\n      Load more\r\n    </Button>\r\n  </section>\r\n);\r\n\r\nconst BestFilms = styled(BestFilmsStructure)`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n\r\n  & h2 {\r\n    text-align: center;\r\n    width: 100%;\r\n  }\r\n\r\n  & ul {\r\n    max-height: 360px;\r\n    overflow-y: scroll;\r\n    border: 2px solid\r\n      ${props =>\r\n        props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n    box-shadow: none;\r\n\r\n    & li:last-child {\r\n      border-bottom: none;\r\n    }\r\n  }\r\n\r\n  & button {\r\n    margin: -2px 0 0 auto;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    height: 2px;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    background-color: lightgrey;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: 60%;\r\n    margin: 0 auto;\r\n    margin-bottom: 30px;\r\n\r\n    &::after {\r\n      left: -${(20 / 60) * 100}%;\r\n      right: -${(20 / 60) * 100}%;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    width: 45%;\r\n    margin: 0;\r\n    margin-bottom: 30px;\r\n\r\n    &::after {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default BestFilms;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FilmList from \"../UI/FilmList\";\r\nimport Button from \"../UI/Button\";\r\nimport variables from \"../variables\";\r\n\r\nconst FilteredFilmsStructure = ({\r\n  filteredMovies,\r\n  toggleFilmToFav,\r\n  getMoreFilteredMovies,\r\n  nightmode,\r\n  genres,\r\n  favorites,\r\n  className\r\n}) => (\r\n  <section className={className}>\r\n    <h2>Films by filters</h2>\r\n    <FilmList\r\n      nightmode={nightmode}\r\n      matchFilms={filteredMovies}\r\n      toggleFilmToFav={toggleFilmToFav}\r\n      genres={genres}\r\n      favorites={favorites}\r\n    />\r\n    <Button nightmode={nightmode} onClick={getMoreFilteredMovies}>\r\n      Load more\r\n    </Button>\r\n  </section>\r\n);\r\n\r\nconst FilteredFilms = styled(FilteredFilmsStructure)`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n\r\n  & h2 {\r\n    text-align: center;\r\n    width: 100%;\r\n  }\r\n\r\n  & ul {\r\n    max-height: 360px;\r\n    overflow-y: scroll;\r\n    border: 2px solid\r\n      ${props =>\r\n        props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n    box-shadow: none;\r\n\r\n    & li:last-child {\r\n      border-bottom: none;\r\n    }\r\n  }\r\n\r\n  & button {\r\n    margin: -2px 0 0 auto;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    height: 2px;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    background-color: lightgrey;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: 60%;\r\n    margin: 0 auto;\r\n    margin-bottom: 30px;\r\n\r\n    &::after {\r\n      left: -${(20 / 60) * 100}%;\r\n      right: -${(20 / 60) * 100}%;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    width: 45%;\r\n    margin: 0;\r\n    margin-bottom: 30px;\r\n\r\n    &::after {\r\n      top: 0;\r\n      bottom: 0;\r\n      left: auto;\r\n      right: calc(-${(5 / 45) * 100}% - 1px);\r\n      width: 2px;\r\n      height: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default FilteredFilms;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BestFilms from \"./BestFilms\";\r\nimport FilteredFilms from \"./FilteredFilms\";\r\nimport variables from \"../variables\";\r\n\r\nconst MainStructure = ({\r\n  bestMovies,\r\n  openedMenuName,\r\n  menuIsOpen,\r\n  toggleFilmToFav,\r\n  filteredMovies,\r\n  getMoreFilteredMovies,\r\n  nightModeIsOn,\r\n  getBestMovies,\r\n  genres,\r\n  favorites,\r\n  className\r\n}) =>\r\n  (filteredMovies.length > 0 || bestMovies.length > 0) &&\r\n  !(openedMenuName === \"Profile\" && menuIsOpen) && (\r\n    <main className={className}>\r\n      {filteredMovies.length < 1 ? null : openedMenuName === \"Profile\" &&\r\n        menuIsOpen ? null : (\r\n        <FilteredFilms\r\n          filteredMovies={filteredMovies}\r\n          toggleFilmToFav={toggleFilmToFav}\r\n          getMoreFilteredMovies={getMoreFilteredMovies}\r\n          nightmode={nightModeIsOn}\r\n          genres={genres}\r\n          favorites={favorites}\r\n        />\r\n      )}\r\n      {bestMovies.length < 1 ? null : openedMenuName === \"Profile\" &&\r\n        menuIsOpen ? null : (\r\n        <BestFilms\r\n          bestMovies={bestMovies}\r\n          toggleFilmToFav={toggleFilmToFav}\r\n          getBestMovies={getBestMovies}\r\n          nightmode={nightModeIsOn}\r\n          genres={genres}\r\n          favorites={favorites}\r\n        />\r\n      )}\r\n    </main>\r\n  );\r\n\r\nconst Main = styled(MainStructure)`\r\n  position: relative;\r\n  padding-top: 20px;\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: ${props =>\r\n      props.filteredMovies.length !== 0 ? \"space-between\" : \"center\"};\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      height: 2px;\r\n      left: 0;\r\n      right: 0;\r\n      top: 0;\r\n      background-color: lightgrey;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport variables from \"../variables\";\r\n\r\nconst FooterStructure = ({ className }) => {\r\n  return (\r\n    <footer className={className}>\r\n      <p>\r\n        <span>\r\n          App created by <a href=\"https://vpmew.github.io/usercard/\">vpmew</a>.\r\n        </span>\r\n\r\n        <span>\r\n          Database provided by <a href=\"https://www.themoviedb.org/\">TMDb</a>.\r\n        </span>\r\n\r\n        <span className=\"organisation\">\r\n          Verstka-thread technologies, 2015-2019.\r\n        </span>\r\n      </p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nconst Footer = styled(FooterStructure)`\r\n  position: relative;\r\n  padding: 20px 0;\r\n\r\n  & p {\r\n    margin: 0;\r\n  }\r\n\r\n  & span {\r\n    display: block;\r\n    text-align: center;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  & .organisation {\r\n    font-size: 0.8em;\r\n  }\r\n\r\n  & a {\r\n    position: relative;\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n    color: ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n\r\n    &::before {\r\n      display: none;\r\n      content: \"\";\r\n      position: absolute;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      height: 2px;\r\n\r\n      background-color: ${props =>\r\n        props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n    }\r\n\r\n    &:hover::before {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    height: 2px;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    background-color: lightgrey;\r\n  }\r\n`;\r\n\r\nexport default Footer;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../variables\";\r\n\r\nconst Body = styled.div`\r\n  background-color: ${props =>\r\n    props.nightmode\r\n      ? variables.backgroundColorDark\r\n      : variables.backgroundColorLight};\r\n  color: ${props =>\r\n    props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  font-family: \"Monda\", \"Arial\", sans-serif;\r\n  font-size: ${variables.fontSizeS};\r\n  line-height: ${variables.lineHeightS};\r\n\r\n  box-sizing: border-box;\r\n  & *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    font-size: ${variables.fontSizeM};\r\n    line-height: ${variables.lineHeightM};\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    font-size: ${variables.fontSizeL};\r\n    line-height: ${variables.lineHeightL};\r\n  }\r\n`;\r\n\r\nexport default Body;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../variables\";\r\n\r\nconst WidthContainer = styled.div`\r\n  width: ${variables.widthS};\r\n  margin: 0 auto;\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: ${variables.widthM};\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    width: ${variables.widthL};\r\n  }\r\n`;\r\n\r\nexport default WidthContainer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FilmList from \"../UI/FilmList\";\r\nimport Button from \"../UI/Button\";\r\nimport variables from \"../variables\";\r\n\r\nconst SimilarFilmsStructure = ({\r\n  similarFilms,\r\n  toggleFilmToFav,\r\n  nightmode,\r\n  favorites,\r\n  className,\r\n  loadFilmData,\r\n  id,\r\n  genres,\r\n  getMoreSimilarFilms,\r\n  getSimilarFilms\r\n}) => {\r\n  return (\r\n    <section className={className}>\r\n      <h2>Similar films</h2>\r\n      <FilmList\r\n        nightmode={nightmode}\r\n        matchFilms={similarFilms}\r\n        toggleFilmToFav={toggleFilmToFav}\r\n        favorites={favorites}\r\n        loadFilmData={loadFilmData}\r\n        genres={genres}\r\n        getSimilarFilms={getSimilarFilms}\r\n      />\r\n      <Button nightmode={nightmode} onClick={() => getMoreSimilarFilms(id)}>\r\n        Load more\r\n      </Button>\r\n    </section>\r\n  );\r\n};\r\n\r\nconst SimilarFilms = styled(SimilarFilmsStructure)`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n\r\n  & h2 {\r\n    text-align: center;\r\n    width: 100%;\r\n  }\r\n\r\n  & ul {\r\n    max-height: 360px;\r\n    overflow-y: scroll;\r\n    border: 2px solid\r\n      ${props =>\r\n        props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n    box-shadow: none;\r\n\r\n    & li:last-child {\r\n      border-bottom: none;\r\n    }\r\n  }\r\n\r\n  & button {\r\n    margin: -2px 0 0 auto;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    height: 2px;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    background-color: lightgrey;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: 60%;\r\n    margin: 20px auto 0;\r\n    margin-bottom: 30px;\r\n\r\n    &::after {\r\n      left: -${(20 / 60) * 100}%;\r\n      right: -${(20 / 60) * 100}%;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    width: 45%;\r\n    margin: 30px auto 30px;\r\n\r\n    &::after {\r\n      left: -${(55 / 2 / 45) * 100}%;\r\n      right: -${(55 / 2 / 45) * 100}%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SimilarFilms;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport img404 from \"../img/img404.jpg\";\r\nimport variables from \"../variables\";\r\nimport heartIcoLight from \"../img/heart-off-light.svg\";\r\nimport heartIcoDark from \"../img/heart-off-dark.svg\";\r\nimport heartIcoActive from \"../img/heart-on.svg\";\r\nimport InfoMessage from \"../UI/InfoMessage\";\r\nimport SimilarFilms from \"./SimilarFilms\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nclass FilmPageStructure extends React.Component {\r\n  componentDidMount() {\r\n    this.props.loadFilmData(Number(this.props.location.pathname.slice(11)));\r\n    this.props.getSimilarFilms(Number(this.props.location.pathname.slice(11)));\r\n  }\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   let result;\r\n  //   if (this.props.location.pathname !== nextProps.location.pathname) {\r\n  //     result = true;\r\n  //     console.log(result);\r\n  //     return result;\r\n  //   }\r\n  //   result = false;\r\n  //   console.log(result);\r\n  //   return result;\r\n  // }\r\n\r\n  componentDidUpdate(nextProps) {\r\n    if (this.props.location.pathname !== nextProps.location.pathname) {\r\n      this.props.loadFilmData(Number(this.props.location.pathname.slice(11)));\r\n      this.props.getSimilarFilms(\r\n        Number(this.props.location.pathname.slice(11))\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      toggleFilmToFav,\r\n      nightmode,\r\n      favorites,\r\n      genres,\r\n      className,\r\n      similarFilms,\r\n      getMoreSimilarFilms,\r\n      filmData\r\n    } = this.props;\r\n    let convertRuntime = runtime => {\r\n      if (runtime < 60) {\r\n        let str = runtime + \" minutes.\";\r\n        return str;\r\n      } else {\r\n        let hours = Math.floor(runtime / 60);\r\n        let minutes = runtime % 60;\r\n        let str = `${hours} ${\r\n          hours > 1 ? \"hours\" : \"hour\"\r\n        } ${minutes} minutes.`;\r\n        return str;\r\n      }\r\n    };\r\n\r\n    let convertDate = date => {\r\n      let day = date.getDay();\r\n      let months = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\"\r\n      ];\r\n      let month = months[date.getMonth()];\r\n      let year = date.getFullYear();\r\n      let str = `${month} ${day}, ${year}`;\r\n      return str;\r\n    };\r\n\r\n    let convertMoney = amount => {\r\n      let symbols = String(amount)\r\n        .split(\"\")\r\n        .reverse();\r\n      symbols = symbols.map((s, i, arr) => {\r\n        if (!((i + 1) % 3) && i + 1 !== arr.length) {\r\n          return \" \" + s;\r\n        } else return s;\r\n      });\r\n      let str = symbols.reverse().join(\"\");\r\n      return str;\r\n    };\r\n\r\n    let genresList =\r\n      filmData.genres && filmData.genres.map(genre => genre.name).join(\", \");\r\n    let releaseDate =\r\n      filmData.release_date && convertDate(new Date(filmData.release_date));\r\n    let countries =\r\n      filmData.production_countries &&\r\n      filmData.production_countries.map(country => country.name).join(\", \");\r\n    let companies =\r\n      filmData.production_companies &&\r\n      filmData.production_companies.map(comp => comp.name).join(\", \");\r\n    let budget = filmData.budget && convertMoney(filmData.budget);\r\n    let revenue = filmData.revenue && convertMoney(filmData.revenue);\r\n    let homepage = filmData.homepage;\r\n    let runtime = filmData.runtime && convertRuntime(filmData.runtime);\r\n    let tagline = filmData.tagline;\r\n    let voteAverage =\r\n      String(filmData.vote_average).length === 1\r\n        ? [...String(filmData.vote_average).split(\"\"), \".\", \"0\"].join(\"\")\r\n        : filmData.vote_average;\r\n    let voteCount = filmData.vote_count;\r\n\r\n    return filmData ? (\r\n      <main className={className}>\r\n        <Helmet title={this.props.filmData.title} />\r\n        <h2 className=\"title\">{filmData.title || \"No title.\"}</h2>\r\n        {tagline && <p className=\"tagline\">{tagline}</p>}\r\n        <div className=\"poster-block\">\r\n          <img\r\n            className=\"image\"\r\n            src={\r\n              filmData.poster_path\r\n                ? `https://image.tmdb.org/t/p/w400/${filmData.poster_path}`\r\n                : img404\r\n            }\r\n            alt={filmData.title || \"No title.\"}\r\n          />\r\n          <div className=\"wrapper\">\r\n            {voteAverage && <p className=\"vote-avg\">{voteAverage}</p>}\r\n            {voteCount && <p className=\"vote-count\">{voteCount} votes</p>}\r\n          </div>\r\n          <div className=\"widgets\">\r\n            <button\r\n              className=\"toFav\"\r\n              value={JSON.stringify({\r\n                id: filmData.id,\r\n                poster_path: filmData.poster_path,\r\n                title: filmData.title,\r\n                release_date: filmData.release_date,\r\n                vote_average: filmData.vote_average,\r\n                vote_count: filmData.vote_count,\r\n                genresOfFilm: genresList\r\n              })}\r\n              onClick={toggleFilmToFav}\r\n            />\r\n            <InfoMessage color=\"orangered\" width=\"75%\">\r\n              Estimating is unavailable at the moment.\r\n            </InfoMessage>\r\n          </div>\r\n        </div>\r\n        <div className=\"additional-info\">\r\n          {filmData.overview && <p className=\"overview\">{filmData.overview}</p>}\r\n          {genresList && (\r\n            <p className=\"genres\">\r\n              <span className=\"option-name\">Genres:</span> {genresList}.\r\n            </p>\r\n          )}\r\n          {runtime && (\r\n            <p className=\"runtime\">\r\n              <span className=\"option-name\">Runtime:</span> {runtime}\r\n            </p>\r\n          )}\r\n          {releaseDate && (\r\n            <time className=\"date\" dateTime={filmData.release_date}>\r\n              <span className=\"option-name\">Release date:</span> {releaseDate}.\r\n            </time>\r\n          )}\r\n          {countries && (\r\n            <p className=\"counries\">\r\n              <span className=\"option-name\">Counries:</span> {countries}.\r\n            </p>\r\n          )}\r\n          {companies && (\r\n            <p className=\"companies\">\r\n              <span className=\"option-name\">Companies:</span> {companies}.\r\n            </p>\r\n          )}\r\n          {Boolean(budget) && (\r\n            <p className=\"budget\">\r\n              <span className=\"option-name\">Budget:</span> ${budget}.\r\n            </p>\r\n          )}\r\n          {Boolean(revenue) && (\r\n            <p className=\"revenue\">\r\n              <span className=\"option-name\">Revenue:</span> ${revenue}.\r\n            </p>\r\n          )}\r\n          {homepage && (\r\n            <p className=\"homepage\">\r\n              <span className=\"option-name\">Homepage:</span>{\" \"}\r\n              <a href={`${homepage}`}>Link</a>\r\n            </p>\r\n          )}\r\n        </div>\r\n        {similarFilms.length > 0 && (\r\n          <SimilarFilms\r\n            id={filmData.id}\r\n            similarFilms={similarFilms}\r\n            toggleFilmToFav={toggleFilmToFav}\r\n            nightmode={nightmode}\r\n            genres={genres}\r\n            favorites={favorites}\r\n            getMoreSimilarFilms={getMoreSimilarFilms}\r\n          />\r\n        )}\r\n      </main>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nconst FilmPage = styled(FilmPageStructure)`\r\n  & .image {\r\n    display: block;\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n\r\n  & .poster-block {\r\n    position: relative;\r\n\r\n    & .wrapper {\r\n      position: absolute;\r\n      right: 0;\r\n      top: 5%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: flex-end;\r\n      padding: 5px;\r\n      background-color: ${props =>\r\n        props.nightmode\r\n          ? variables.backgroundColorDark\r\n          : variables.fontColorDark};\r\n\r\n      & .vote-avg {\r\n        margin: 0;\r\n        margin-bottom: 10px;\r\n        font-size: 2em;\r\n        color: ${props =>\r\n          props.filmData.vote_average >= 7\r\n            ? \"mediumseagreen\"\r\n            : props.filmData.vote_average >= 5\r\n            ? \"#f3f300\"\r\n            : props.filmData.vote_average >= 3\r\n            ? \"orange\"\r\n            : \"orangered\"};\r\n      }\r\n\r\n      & .vote-count {\r\n        margin: 0;\r\n        align-self: flex-end;\r\n        color: ${props =>\r\n          props.nightmode\r\n            ? variables.fontColorLight\r\n            : variables.backgroundColorLight};\r\n        font-size: 1em;\r\n      }\r\n\r\n      &:hover {\r\n        opacity: 0.2;\r\n      }\r\n    }\r\n  }\r\n\r\n  & .tagline {\r\n    margin-top: 0;\r\n    width: 100%;\r\n    position: relative;\r\n    font-style: italic;\r\n    padding-left: 10px;\r\n\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      width: 2px;\r\n      left: 0;\r\n      top: 0;\r\n      bottom: 0;\r\n      background-color: ${props =>\r\n        props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n    }\r\n  }\r\n\r\n  & .option-name {\r\n    font-weight: bold;\r\n  }\r\n\r\n  & .overview {\r\n    &::first-letter {\r\n      font-size: 1.4em;\r\n    }\r\n  }\r\n\r\n  & .homepage {\r\n    & a {\r\n      color: inherit;\r\n      &:hover {\r\n        text-decoration: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  & .widgets {\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n\r\n    & .toFav {\r\n      width: 25%;\r\n      height: auto;\r\n      padding: 0;\r\n      border: none;\r\n      background-repeat: no-repeat;\r\n      background-size: 80% 80%;\r\n      background-position: 50% 50%;\r\n      background-color: transparent;\r\n      background-image: ${props =>\r\n        props.favorites.some(\r\n          film => Number(film.id) === Number(props.filmData.id)\r\n        )\r\n          ? `url(${heartIcoActive})`\r\n          : props.nightmode\r\n          ? `url(${heartIcoLight})`\r\n          : `url(${heartIcoDark})`};\r\n      cursor: pointer;\r\n      &:hover {\r\n        background-size: 90% 90%;\r\n        opacity: ${props =>\r\n          props.favorites.some(\r\n            film => Number(film.id) === Number(props.filmData.id)\r\n          )\r\n            ? \"0.5\"\r\n            : \"1\"};\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: space-between;\r\n\r\n    & .title {\r\n      width: 100%;\r\n    }\r\n\r\n    & .poster-block {\r\n      width: 45%;\r\n    }\r\n\r\n    & .overview {\r\n      margin-top: 0;\r\n    }\r\n\r\n    & .additional-info {\r\n      width: 50%;\r\n    }\r\n\r\n    & .widgets {\r\n      & p {\r\n        font-size: 0.8em;\r\n      }\r\n\r\n      & .toFav {\r\n        background-size: 70% 70%;\r\n        &:hover {\r\n          background-size: 80% 80%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default FilmPage;\r\n","export const sortByPopularity = ({ results }) => {\r\n  let sortedMovies = [...results]\r\n    .sort((a, b) => {\r\n      return a.popularity - b.popularity;\r\n    })\r\n    .reverse();\r\n  return sortedMovies;\r\n};\r\n\r\nexport const sortByRelevance = ({ results }) => {\r\n  let sortedMovies = [...results]\r\n    .sort((a, b) => {\r\n      return (\r\n        a.vote_count / 1000 +\r\n        a.vote_average -\r\n        (b.vote_count / 1000 + b.vote_average)\r\n      );\r\n    })\r\n    .reverse();\r\n  return sortedMovies;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Loading from \"./UI/Loading\";\r\nimport MainHeader from \"./Header/MainHeader\";\r\nimport SideHeader from \"./Header/SideHeader\";\r\nimport Main from \"./Main/Main\";\r\nimport Footer from \"./Footer/Footer\";\r\nimport Body from \"./UI/Body\";\r\nimport WidthContainer from \"./UI/WidthContainer\";\r\nimport FilmPage from \"./FilmPage/FilmPage\";\r\nimport { sortByRelevance } from \"./sorting\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport defaultAvatar from \"./img/default-avatar.jpg\";\r\nimport { debounce } from \"lodash\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    loading: true,\r\n\r\n    userAuthorized: false,\r\n    userAvatar: null,\r\n    defaultAvatar: defaultAvatar,\r\n    userName: null,\r\n    defaultName: \"The Guest\",\r\n\r\n    genres: null,\r\n    sortingOptions: [\"popularity\", \"votes\", \"rating\", \"date\"],\r\n    sortBy: \"popularity\",\r\n    direction: \"descending\",\r\n    filteredMovies: [],\r\n    filteredMoviesPage: 1,\r\n\r\n    bestMovies: [],\r\n    bestMoviesPage: 1,\r\n\r\n    searchValue: \"\",\r\n    searching: false,\r\n    matchFilms: null,\r\n\r\n    favorites: [],\r\n\r\n    openedMenuName: \"\",\r\n    menuIsOpen: false,\r\n\r\n    nightModeIsOn: false,\r\n\r\n    filmData: {},\r\n    similarFilms: [],\r\n    similarFilmsPage: 1\r\n  };\r\n\r\n  getGenres = () => {\r\n    fetch(\r\n      \"https://api.themoviedb.org/3/genre/movie/list?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=en-US\"\r\n    )\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(({ genres }) => {\r\n        let reducedGenres = genres.reduce((value, item) => {\r\n          value[item.name] = { id: item.id, enabled: false };\r\n          return value;\r\n        }, {});\r\n        this.setState({ genres: reducedGenres });\r\n      })\r\n      .catch(error => {\r\n        alert(`Error on fetching genres: ${error}`);\r\n      });\r\n  };\r\n\r\n  toggleGenre = event => {\r\n    let toggledGenre = event.target.name;\r\n    this.setState({\r\n      genres: {\r\n        ...this.state.genres,\r\n        [toggledGenre]: {\r\n          ...this.state.genres[toggledGenre],\r\n          enabled: !this.state.genres[toggledGenre].enabled\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  toggleSorting = event => {\r\n    this.setState({ sortBy: event.target.value });\r\n  };\r\n\r\n  toggleDirection = event => {\r\n    this.setState({ direction: event.target.value });\r\n  };\r\n\r\n  getBestMovies = () => {\r\n    this.setState({ loading: true });\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/top_rated?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=en-US&page=${\r\n        this.state.bestMoviesPage\r\n      }`\r\n    )\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(({ results }) => {\r\n        this.setState(prevState => ({\r\n          bestMovies: [...prevState.bestMovies].concat(results),\r\n          bestMoviesPage: ++prevState.bestMoviesPage,\r\n          loading: false\r\n        }));\r\n      })\r\n      .catch(error => {\r\n        alert(`Error on fetching best films: ${error}`);\r\n      });\r\n  };\r\n\r\n  getFilteredMovies = debounce(() => {\r\n    this.setState({ loading: true });\r\n    let enabledGenres = [];\r\n    for (let key in this.state.genres) {\r\n      if (this.state.genres[key].enabled === true) {\r\n        enabledGenres = [...enabledGenres, this.state.genres[key].id];\r\n      }\r\n    }\r\n    if (enabledGenres.length > 0) {\r\n      let page = 1;\r\n      let enabledGenreIds = encodeURIComponent(enabledGenres.join(\",\"));\r\n\r\n      let sortBy;\r\n      if (this.state.sortBy === \"popularity\") {\r\n        sortBy =\r\n          this.state.direction === \"descending\"\r\n            ? \"popularity.desc\"\r\n            : \"popularity.asc\";\r\n      }\r\n      if (this.state.sortBy === \"date\") {\r\n        sortBy =\r\n          this.state.direction === \"descending\"\r\n            ? \"release_date.desc\"\r\n            : \"release_date.asc\";\r\n      }\r\n      if (this.state.sortBy === \"rating\") {\r\n        sortBy =\r\n          this.state.direction === \"descending\"\r\n            ? \"vote_average.desc\"\r\n            : \"vote_average.asc\";\r\n      }\r\n      if (this.state.sortBy === \"votes\") {\r\n        sortBy =\r\n          this.state.direction === \"descending\"\r\n            ? \"vote_count.desc\"\r\n            : \"vote_count.asc\";\r\n      }\r\n      fetch(\r\n        `https://api.themoviedb.org/3/discover/movie?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=en-US&sort_by=${sortBy}&include_adult=false&include_video=false&page=${page}&with_genres=${enabledGenreIds}`\r\n      )\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(obj => {\r\n          let filteredMovies = obj.results;\r\n          this.setState({\r\n            filteredMovies: filteredMovies,\r\n            filteredMoviesPage: page,\r\n            loading: false\r\n          });\r\n        })\r\n        .catch(error => {\r\n          alert(`Error on getting films by filters: ${error}`);\r\n        });\r\n    } else if (enabledGenres.length < 1) {\r\n      this.setState({\r\n        filteredMovies: [],\r\n        filteredMoviesPage: 1,\r\n        loading: false\r\n      });\r\n    } else return;\r\n  }, 1500);\r\n\r\n  getMoreFilteredMovies = () => {\r\n    this.setState({ loading: true });\r\n    let enabledGenres = [];\r\n    for (let key in this.state.genres) {\r\n      if (this.state.genres[key].enabled === true) {\r\n        enabledGenres = [...enabledGenres, this.state.genres[key].id];\r\n      }\r\n    }\r\n    let enabledGenreIds = encodeURIComponent(enabledGenres.join(\",\")),\r\n      sortBy = this.state.sortBy,\r\n      page = this.state.filteredMoviesPage;\r\n    fetch(\r\n      `https://api.themoviedb.org/3/discover/movie?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=en-US&sort_by=${sortBy}&include_adult=false&include_video=false&page=${page}&with_genres=${enabledGenreIds}`\r\n    )\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(({ results }) => {\r\n        this.setState((prevState, props) => ({\r\n          filteredMovies: [...prevState.filteredMovies].concat(results),\r\n          filteredMoviesPage: prevState.filteredMoviesPage++,\r\n          loading: false\r\n        }));\r\n      })\r\n      .catch(error => {\r\n        alert(`Error on getting additional films by filters: ${error}`);\r\n      });\r\n  };\r\n\r\n  searchFilms = debounce(() => {\r\n    if (this.state.searchValue) {\r\n      this.setState({ loading: true });\r\n      let query = encodeURIComponent(this.state.searchValue);\r\n      let lang = \"en-US\";\r\n      fetch(\r\n        `https://api.themoviedb.org/3/search/movie?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=${lang}&query=${query}&page=1&include_adult=false`\r\n      )\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(obj => {\r\n          let films = sortByRelevance(obj);\r\n          this.setState({\r\n            matchFilms: films,\r\n            loading: false\r\n          });\r\n        })\r\n        .catch(error => {\r\n          alert(`Error on searching films: ${error}`);\r\n        });\r\n    }\r\n    if (!this.state.searchValue) {\r\n      this.setState({\r\n        matchFilms: [],\r\n        loading: false\r\n      });\r\n    }\r\n  }, 1500);\r\n\r\n  getFavFilms = () => {\r\n    if (localStorage[\"favorites\"]) {\r\n      this.setState({ favorites: [...JSON.parse(localStorage[\"favorites\"])] });\r\n    } else return;\r\n  };\r\n\r\n  toggleFilmToFav = event => {\r\n    let filmData = JSON.parse(event.target.value),\r\n      filmId = filmData.id,\r\n      fav = this.state.favorites;\r\n    if (!fav.some(film => film.id === filmId)) {\r\n      let newFav = [{ ...filmData }, ...this.state.favorites];\r\n      this.setState({ favorites: newFav });\r\n      localStorage[\"favorites\"] = JSON.stringify(newFav);\r\n    } else {\r\n      let newFav = fav.filter(film => film.id !== filmId);\r\n      this.setState({ favorites: newFav });\r\n      localStorage[\"favorites\"] = JSON.stringify(newFav);\r\n    }\r\n  };\r\n\r\n  /* getFilmById = (event, id) => {\r\n    if (id !== this.state.filmPage.id) {\r\n      this.setState({ loading: true });\r\n      fetch(\r\n        `https://api.themoviedb.org/3/movie/${id}?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=en-US`\r\n      )\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(obj => {\r\n          this.setState({\r\n            filmPage: obj,\r\n            loading: false\r\n          });\r\n        })\r\n        .catch(error => {\r\n          alert(`Error on routing: ${error}`);\r\n        });\r\n    } else return;\r\n  }; */\r\n\r\n  loadFilmData = filmId => {\r\n    let stateFilmId = this.state.filmData.id;\r\n    if (filmId !== stateFilmId) {\r\n      this.setState({ loading: true, searching: false });\r\n      fetch(\r\n        `https://api.themoviedb.org/3/movie/${filmId}?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=en-US`\r\n      )\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(obj => {\r\n          this.setState({ filmData: obj, loading: false });\r\n        })\r\n        .catch(error => {\r\n          alert(`Error on loading film data: ${error}`);\r\n        });\r\n    } else return;\r\n  };\r\n\r\n  getSimilarFilms = filmId => {\r\n    this.setState({ loading: true });\r\n    let page = this.state.similarFilmsPage;\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${filmId}/similar?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=en-US&page=${page}`\r\n    )\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(({ results }) => {\r\n        this.setState({ similarFilms: results, loading: false });\r\n      })\r\n      .catch(error => {\r\n        alert(`Error on fetching similar films: ${error}`);\r\n      });\r\n  };\r\n\r\n  getMoreSimilarFilms = filmId => {\r\n    this.setState({ loading: true });\r\n    let page = this.state.similarFilmsPage;\r\n    fetch(\r\n      `https://api.themoviedb.org/3/movie/${filmId}/similar?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=en-US&page=${++page}`\r\n    )\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(({ results }) => {\r\n        this.setState(prevState => ({\r\n          similarFilms: [...prevState.similarFilms].concat(results),\r\n          similarFilmsPage: ++prevState.similarFilmsPage,\r\n          loading: false\r\n        }));\r\n      })\r\n      .catch(error => {\r\n        alert(`Error on fetching similar films: ${error}`);\r\n      });\r\n  };\r\n\r\n  // toggleLoading = () => {\r\n  //   this.setState(prevState => ({ loading: !prevState }));\r\n  // };\r\n\r\n  changeSearchValue = event => {\r\n    event.preventDefault();\r\n    const value = event.target.value;\r\n    this.setState({ searchValue: value });\r\n  };\r\n\r\n  enableSearching = () => {\r\n    if (!this.state.searching) this.setState({ searching: true });\r\n  };\r\n\r\n  disableSearching = () => {\r\n    if (this.state.searching) this.setState({ searching: false });\r\n  };\r\n\r\n  toggleMenu = event => {\r\n    event.preventDefault();\r\n    event.target.name === this.state.openedMenuName\r\n      ? this.setState({\r\n          menuIsOpen: !this.state.menuIsOpen\r\n        })\r\n      : this.setState({\r\n          openedMenuName: event.target.name,\r\n          menuIsOpen: true\r\n        });\r\n  };\r\n\r\n  toggleNightMode = event => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      nightModeIsOn: !this.state.nightModeIsOn\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getGenres();\r\n    this.getFavFilms();\r\n    this.getBestMovies();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Body nightmode={this.state.nightModeIsOn}>\r\n        <Helmet\r\n          title={\r\n            this.state.openedMenuName === \"Profile\"\r\n              ? \"Profile\"\r\n              : \"Moviesearcher\"\r\n          }\r\n        />\r\n        <WidthContainer>\r\n          {this.state.loading && (\r\n            <Loading nightmode={this.state.nightModeIsOn}>Loading...</Loading>\r\n          )}\r\n          <Switch>\r\n            <Route\r\n              path=\"/\"\r\n              exact\r\n              render={props => (\r\n                <MainHeader\r\n                  {...props}\r\n                  {...this.state}\r\n                  toggleGenre={this.toggleGenre}\r\n                  toggleSorting={this.toggleSorting}\r\n                  toggleDirection={this.toggleDirection}\r\n                  searchFilms={this.searchFilms}\r\n                  changeSearchValue={this.changeSearchValue}\r\n                  enableSearching={this.enableSearching}\r\n                  disableSearching={this.disableSearching}\r\n                  toggleMenu={this.toggleMenu}\r\n                  toggleNightMode={this.toggleNightMode}\r\n                  toggleFilmToFav={this.toggleFilmToFav}\r\n                  getFilteredMovies={this.getFilteredMovies}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/filmpages/\"\r\n              render={props => (\r\n                <SideHeader\r\n                  {...props}\r\n                  {...this.state}\r\n                  searchFilms={this.searchFilms}\r\n                  changeSearchValue={this.changeSearchValue}\r\n                  enableSearching={this.enableSearching}\r\n                  disableSearching={this.disableSearching}\r\n                  toggleFilmToFav={this.toggleFilmToFav}\r\n                  toggleNightMode={this.toggleNightMode}\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n          <Switch>\r\n            <Route\r\n              path=\"/\"\r\n              exact\r\n              render={props => (\r\n                <Main\r\n                  {...props}\r\n                  {...this.state}\r\n                  toggleFilmToFav={this.toggleFilmToFav}\r\n                  getMoreFilteredMovies={this.getMoreFilteredMovies}\r\n                  getBestMovies={this.getBestMovies}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/filmpages/\"\r\n              render={props => (\r\n                <FilmPage\r\n                  {...props}\r\n                  favorites={this.state.favorites}\r\n                  nightmode={this.state.nightModeIsOn}\r\n                  genres={this.state.genres}\r\n                  filmData={this.state.filmData}\r\n                  similarFilms={this.state.similarFilms}\r\n                  toggleFilmToFav={this.toggleFilmToFav}\r\n                  loadFilmData={this.loadFilmData}\r\n                  getSimilarFilms={this.getSimilarFilms}\r\n                  getMoreSimilarFilms={this.getMoreSimilarFilms}\r\n                />\r\n              )}\r\n            />\r\n          </Switch>\r\n          <Footer nightmode={this.state.nightModeIsOn} />\r\n        </WidthContainer>\r\n      </Body>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}