{"version":3,"sources":["utilities/variables.js","UI/Button.js","img/img404.jpg","img/heart-off-light.svg","img/heart-off-dark.svg","img/heart-on.svg","img/default-avatar.jpg","StateContext.js","img/nm-light.svg","img/nm-dark.svg","img/home-ico-light.svg","img/home-ico-dark.svg","UI/Loading.js","Footer/Footer.js","UI/Body.js","UI/WidthContainer.js","utilities/sorting.js","utilities/apiQueries.js","UI/FilmCard.js","UI/FilmList.js","Header/Search.js","Header/SearchBlock.js","UI/ButtonsBlock.js","UI/InfoMessage.js","Header/Filters.js","UI/Avatar.js","UI/UserName.js","Header/Favorites.js","Header/Profile.js","Header/Menu.js","Header/MainHeader.js","Header/SideHeader.js","Main/BestFilms.js","Main/FilteredFilms.js","Main/Main.js","FilmPage/SimilarFilms.js","FilmPage/Rating.js","FilmPage/Tagline.js","FilmPage/FavButton.js","FilmPage/FilmPage.js","RoutingComponent.js","App.js","index.js"],"names":["variables","version","widthS","widthM","widthL","backgroundColorLight","backgroundColorDark","fontColorLight","fontColorDark","fontSizeS","lineHeightS","fontSizeM","lineHeightM","fontSizeL","lineHeightL","Button","styled","button","_templateObject","props","width","name","nightmode","isActive","menuIsOpen","openedMenuName","fontSize","image","concat","nmLight","nmDark","module","exports","__webpack_require__","p","react__WEBPACK_IMPORTED_MODULE_0__","StateContext","n","React","createContext","Loading","_ref","children","className","react_default","a","createElement","Footer","href","Footer_templateObject","Body","div","Body_templateObject","WidthContainer","WidthContainer_templateObject","sortByRelevance","_ref2","results","Object","toConsumableArray","sort","b","vote_count","vote_average","reverse","queries","getGenresQuery","getBestFilmsQuery","pageNumber","getFilteredFilmsQuery","sortBy","genresIds","getSearchByStringQuery","lang","string","getFilmDataQuery","filmId","getSimilarFilmsQuery","page","FilmCard","year","id","title","poster_path","release_date","genres_ids","genres","genresFromFav","genresOfFilm","toggleFilmToFav","viewWidth","document","documentElement","clientWidth","titleSymbolRestriction","Number","parseInt","genresSymbolRestriction","Date","getFullYear","split","key","indexOf","String","join","length","slice","croppedTitle","src","img404","alt","react_router_dom","to","dateTime","onClick","FilmCard_templateObject","favorites","some","film","heartIcoActive","heartIcoLight","heartIcoDark","FilmListStructure","forwardRef","ref","matchFilms","autoLoading","autoLoadingFunction","debouncedAutoLoading","debounce","onScroll","event","persist","target","map","UI_FilmCard","genre_ids","FilmList","FilmList_templateObject","Search","input","Search_templateObject","SearchBlock","_input","searching","searchValue","loading","methods","disableSearching","Header_Search","placeholder","value","onChange","changeSearchValue","setTimeout","searchFilms","enableSearching","onKeyDown","e","keyCode","blur","type","clearSearchValue","UI_FilmList","SearchBlock_templateObject","ButtonBlock","ButtonsBlock_templateObject","justify","InfoMessage","InfoMessage_templateObject","color","margin","Filters","Consumer","sortingOptions","direction","genreList","keys","genresIsChecked","enabled","getFilteredMoviesWithDebounce","getFilteredMovies","UI_InfoMessage","replace","toLowerCase","toggleGenre","checked","option","toggleSorting","arr","toUpperCase","toggleDirection","Filters_templateObject","Avatar","img","Avatar_templateObject","UserName","UserName_templateObject","Favorites","Favorites_templateObject","UserProfile","userName","userAuthorized","userAvatar","defaultAvatar","defaultName","nightModeIsOn","UI_Avatar","UI_UserName","Header_Favorites","Profile_templateObject","Menu","Header_Filters","Profile","MainHeader","Header_SearchBlock","ButtonsBlock","toggleMenu","toggleNightMode","Header_Menu","MainHeader_templateObject","SideHeader","as","Link","deleteFilmData","homeIcoLight","homeIcoDark","SideHeader_templateObject","BestFilms","bestMovies","getBestMovies","BestFilms_templateObject","FilteredFilms","filteredMovies","getMoreFilteredMovies","FilteredFilms_templateObject","Main","Main_FilteredFilms","Main_BestFilms","Main_templateObject","SimilarFilmsStructure","similarFilms","prevId","getSimilarFilms","SimilarFilms","SimilarFilms_templateObject","Rating","voteAverage","voteCount","Rating_templateObject","Tagline","Tagline_templateObject","FavButton","FavButton_templateObject","filmData","FilmPageStructure","createRef","window","scrollTo","this","context","loadFilmData","location","pathname","prevProps","current","scrollTop","_this$context","convertMoney","amount","symbols","s","i","genresList","genre","releaseDate","date","day","getDay","month","getMonth","convertDate","countries","production_countries","country","companies","production_companies","comp","budget","revenue","homepage","runtime","hours","Math","floor","minutes","convertRuntime","tagline","FilmPage_Tagline","FilmPage_Rating","FilmPage_FavButton","overview","Boolean","FilmPage_SimilarFilms","Component","contextType","FilmPage","FilmPage_templateObject","RoutingComponent","Fragment","react_router","path","exact","component","render","Main_Main","FilmPage_FilmPage","Error","lazy","then","bind","App","state","error","isErrorHappened","details","message","filteredMoviesPage","bestMoviesPage","similarFilmsPage","func","_this","getSortingOption","prevFilmId","getGenres","fetch","apiQueries","response","json","reducedGenres","reduce","item","setState","catch","console","log","toggledGenre","objectSpread","defineProperty","prevState","enabledGenres","encodeURIComponent","obj","_ref3","films","getFavFilms","localStorage","JSON","parse","fav","newFav","filter","stringify","_ref4","preventDefault","focus","scrollHeight","offsetHeight","Helmet_default","Provider","UI_Body","UI_WidthContainer","UI_Loading","src_RoutingComponent","Footer_Footer","ReactDOM","basename","process","src_App","getElementById"],"mappings":"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","file":"static/js/main.c9e8ab57.chunk.js","sourcesContent":["const variables = {\r\n  version: \"2.1.1\",\r\n\r\n  widthS: \"320px\",\r\n  widthM: \"768px\",\r\n  widthL: \"991px\",\r\n\r\n  backgroundColorLight: \"#E9F7F9\",\r\n  backgroundColorDark: \"#0C2427\",\r\n  fontColorLight: \"#FFE4AA\",\r\n  fontColorDark: \"#0C2427\",\r\n\r\n  fontSizeS: \"14px\",\r\n  lineHeightS: \"20px\",\r\n  fontSizeM: \"22px\",\r\n  lineHeightM: \"28px\",\r\n  fontSizeL: \"22px\",\r\n  lineHeightL: \"28px\"\r\n};\r\n\r\nexport default variables;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\nimport nmLight from \"../img/nm-light.svg\";\r\nimport nmDark from \"../img/nm-dark.svg\";\r\n\r\nconst Button = styled.button`\r\n  width: ${props =>\r\n    props.width\r\n      ? props.width\r\n      : props.name === \"Night mode\"\r\n      ? \"calc(33% / 2)\"\r\n      : \"33%\"};\r\n  height: 40px;\r\n  cursor: pointer;\r\n  border: 2px solid\r\n    ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  color: ${props => {\r\n    let isActive = props.menuIsOpen && props.openedMenuName === props.name;\r\n    if (props.nightmode && isActive) {\r\n      return variables.fontColorDark;\r\n    } else if (props.nightmode && !isActive) {\r\n      return variables.fontColorLight;\r\n    } else if (!props.nightmode && isActive) {\r\n      return variables.backgroundColorLight;\r\n    } else if (!props.nightmode && !isActive) {\r\n      return variables.fontColorDark;\r\n    }\r\n  }};\r\n  font-size: ${props =>\r\n    props.fontSize\r\n      ? props.fontSize\r\n      : props.name === \"Night mode\"\r\n      ? \"0\"\r\n      : \"inherit\"};\r\n  font-family: inherit;\r\n  background-color: ${props => {\r\n    let isActive = props.menuIsOpen && props.openedMenuName === props.name;\r\n    if (props.nightmode && isActive) {\r\n      return variables.fontColorLight;\r\n    } else if (props.nightmode && !isActive) {\r\n      return \"transparent\";\r\n    } else if (!props.nightmode && isActive) {\r\n      return variables.backgroundColorDark;\r\n    } else if (!props.nightmode && !isActive) {\r\n      return \"transparent\";\r\n    }\r\n  }};\r\n  background-image: ${props =>\r\n    props.image\r\n      ? `url(${props.image})`\r\n      : props.name === \"Night mode\" && props.nightmode\r\n      ? `url(${nmLight})`\r\n      : props.name === \"Night mode\" && !props.nightmode\r\n      ? `url(${nmDark})`\r\n      : \"none\"};\r\n  background-size: 100% 70%;\r\n  background-position: 50% 50%;\r\n  background-repeat: no-repeat;\r\n  transition: box-shadow 0.1s ease;\r\n\r\n  &:hover {\r\n    box-shadow: -1px 2px 3px 0\r\n      ${props =>\r\n        props.nightmode ? \"rgba(255, 255, 255, 0.6)\" : \"rgba(0, 0, 0, 0.4)\"};\r\n  }\r\n\r\n  &:active {\r\n    color: ${props =>\r\n      props.nightmode\r\n        ? variables.fontColorDark\r\n        : variables.backgroundColorLight};\r\n    background-color: ${props =>\r\n      props.nightmode\r\n        ? variables.fontColorLight\r\n        : variables.backgroundColorDark};\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    height: 45px;\r\n    width: ${props =>\r\n      props.width\r\n        ? props.width\r\n        : props.name === \"Night mode\"\r\n        ? \"20%\"\r\n        : \"calc(40% + 2px)\"};\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    height: 50px;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","module.exports = __webpack_public_path__ + \"static/media/img404.b5878b22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/heart-off-light.5d17a3da.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-off-dark.e6484ba2.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-on.a8f9ebb6.svg\";","module.exports = __webpack_public_path__ + \"static/media/default-avatar.e5bc1ca7.jpg\";","import React from \"react\";\r\n\r\nconst StateContext = React.createContext();\r\nexport default StateContext;\r\n","module.exports = __webpack_public_path__ + \"static/media/nm-light.53064712.svg\";","module.exports = __webpack_public_path__ + \"static/media/nm-dark.db93f0cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/home-ico-light.f5214838.svg\";","module.exports = __webpack_public_path__ + \"static/media/home-ico-dark.ffa71548.svg\";","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst LoadingStructure = ({ children, className }) => (\r\n  <div className={className}>\r\n    <div className=\"box\">\r\n      <span>{children}</span>\r\n    </div>\r\n  </div>\r\n);\r\nconst Loading = styled(LoadingStructure)`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  z-index: 3;\r\n\r\n  & .box {\r\n    display: flex;\r\n    position: fixed;\r\n    z-index: 4;\r\n    width: 120px;\r\n    height: 40px;\r\n    left: calc(50% - 60px);\r\n    top: calc(30% - 20px);\r\n    font-size: 1.4em;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    background-color: ${props =>\r\n      props.nightmode\r\n        ? variables.backgroundColorDark\r\n        : variables.backgroundColorLight};\r\n    color: ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n    border: 2px solid\r\n      ${props =>\r\n        props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  }\r\n\r\n  & span {\r\n    margin: auto;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    & .box {\r\n      width: 160px;\r\n      height: 50px;\r\n      left: calc(50% - 80px);\r\n      top: calc(30% - 25px);\r\n      font-size: 1.2em;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst FooterStructure = ({ className }) => {\r\n  return (\r\n    <footer className={className}>\r\n      <p>\r\n        <span>\r\n          App created by <a href=\"https://vpmew.github.io/usercard/\">vpmew</a>.\r\n        </span>\r\n        <span>\r\n          Database provided by <a href=\"https://www.themoviedb.org/\">TMDb</a>.\r\n        </span>\r\n        <span className=\"version\">{`Version: ${variables.version}`}</span>\r\n      </p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nconst Footer = styled(FooterStructure)`\r\n  position: relative;\r\n  padding: 20px 0;\r\n  margin-top: auto;\r\n\r\n  & p {\r\n    margin: 0;\r\n  }\r\n\r\n  & span {\r\n    display: block;\r\n    text-align: center;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  & .version {\r\n    font-size: 0.8em;\r\n  }\r\n\r\n  & a {\r\n    position: relative;\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n    color: ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n\r\n    &::before {\r\n      display: none;\r\n      content: \"\";\r\n      position: absolute;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      height: 2px;\r\n\r\n      background-color: ${props =>\r\n        props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n    }\r\n\r\n    &:hover::before {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    height: 2px;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    background-color: lightgrey;\r\n  }\r\n`;\r\n\r\nexport default Footer;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst Body = styled.div`\r\n  background-color: ${props =>\r\n    props.nightmode\r\n      ? variables.backgroundColorDark\r\n      : variables.backgroundColorLight};\r\n  color: ${props =>\r\n    props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  font-family: \"Monda\", \"Arial\", sans-serif;\r\n  font-size: ${variables.fontSizeS};\r\n  line-height: ${variables.lineHeightS};\r\n\r\n  box-sizing: border-box;\r\n  & *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    font-size: ${variables.fontSizeM};\r\n    line-height: ${variables.lineHeightM};\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    font-size: ${variables.fontSizeL};\r\n    line-height: ${variables.lineHeightL};\r\n  }\r\n`;\r\n\r\nexport default Body;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst WidthContainer = styled.div`\r\n  width: ${variables.widthS};\r\n  margin: 0 auto;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-flow: column;\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: ${variables.widthM};\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    width: ${variables.widthL};\r\n  }\r\n`;\r\n\r\nexport default WidthContainer;\r\n","export const sortByPopularity = ({ results }) => {\r\n  let sortedMovies = [...results]\r\n    .sort((a, b) => {\r\n      return a.popularity - b.popularity;\r\n    })\r\n    .reverse();\r\n  return sortedMovies;\r\n};\r\n\r\nexport const sortByRelevance = ({ results }) => {\r\n  let sortedMovies = [...results]\r\n    .sort((a, b) => {\r\n      return (\r\n        a.vote_count / 1000 +\r\n        a.vote_average -\r\n        (b.vote_count / 1000 + b.vote_average)\r\n      );\r\n    })\r\n    .reverse();\r\n  return sortedMovies;\r\n};\r\n","const queries = {\r\n  getGenresQuery() {\r\n    return `https://api.themoviedb.org/3/genre/movie/list?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=en-US`;\r\n  },\r\n  getBestFilmsQuery(pageNumber) {\r\n    return `https://api.themoviedb.org/3/movie/top_rated?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=en-US&page=${pageNumber}`;\r\n  },\r\n  getFilteredFilmsQuery(sortBy, pageNumber, genresIds) {\r\n    return `https://api.themoviedb.org/3/discover/movie?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=en-US&sort_by=${sortBy}&include_adult=false&include_video=false&page=${pageNumber}&with_genres=${genresIds}`;\r\n  },\r\n  getSearchByStringQuery(lang, string) {\r\n    return `https://api.themoviedb.org/3/search/movie?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=${lang}&query=${string}&page=1&include_adult=false`;\r\n  },\r\n  getFilmDataQuery(filmId) {\r\n    return `https://api.themoviedb.org/3/movie/${filmId}?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=en-US`;\r\n  },\r\n  getSimilarFilmsQuery(filmId, page) {\r\n    return `https://api.themoviedb.org/3/movie/${filmId}/similar?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=en-US&page=${page}`;\r\n  }\r\n};\r\n\r\nexport default queries;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport img404 from \"../img/img404.jpg\";\r\nimport variables from \"../utilities/variables\";\r\nimport heartIcoLight from \"../img/heart-off-light.svg\";\r\nimport heartIcoDark from \"../img/heart-off-dark.svg\";\r\nimport heartIcoActive from \"../img/heart-on.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FilmCardStructure = ({\r\n  id,\r\n  title,\r\n  poster_path,\r\n  className,\r\n  release_date,\r\n  vote_average,\r\n  vote_count,\r\n  genres_ids,\r\n  genres,\r\n  genresOfFilm: genresFromFav,\r\n  toggleFilmToFav\r\n}) => {\r\n  let viewWidth = document.documentElement.clientWidth;\r\n  let releaseDate, year;\r\n  let titleSymbolRestriction =\r\n    viewWidth <= Number.parseInt(variables.widthM)\r\n      ? 35\r\n      : viewWidth <= Number.parseInt(variables.widthL)\r\n      ? 40\r\n      : 45;\r\n  let genresSymbolRestriction =\r\n    viewWidth <= Number.parseInt(variables.widthM)\r\n      ? 40\r\n      : viewWidth <= Number.parseInt(variables.widthL)\r\n      ? 60\r\n      : 65;\r\n  if (release_date) {\r\n    releaseDate = new Date(release_date);\r\n    year = releaseDate.getFullYear();\r\n  }\r\n\r\n  let genresOfFilm = [];\r\n  if (genresFromFav) {\r\n    genresOfFilm = genresFromFav.split(\", \");\r\n  } else if (genres_ids) {\r\n    for (let key in genres) {\r\n      if (~genres_ids.indexOf(genres[key].id)) {\r\n        genresOfFilm = [...genresOfFilm, String(key)];\r\n      }\r\n    }\r\n  }\r\n\r\n  if (genresOfFilm.join(\", \").length > genresSymbolRestriction) {\r\n    genresOfFilm =\r\n      genresOfFilm.join(\", \").slice(0, genresSymbolRestriction - 3) + \"...\";\r\n  } else {\r\n    genresOfFilm = genresOfFilm.join(\", \");\r\n  }\r\n\r\n  let croppedTitle = null;\r\n  if (title.length > titleSymbolRestriction) {\r\n    croppedTitle = title.slice(0, titleSymbolRestriction - 3) + \"...\";\r\n  }\r\n\r\n  return (\r\n    <li className={className}>\r\n      <div className=\"poster\">\r\n        <img\r\n          src={\r\n            poster_path\r\n              ? `https://image.tmdb.org/t/p/w400/${poster_path}`\r\n              : img404\r\n          }\r\n          alt={title}\r\n        />\r\n      </div>\r\n      <p>\r\n        {title ? (\r\n          <Link to={`/filmpage/${id}`}>\r\n            <span className=\"title\">{croppedTitle ? croppedTitle : title}</span>\r\n          </Link>\r\n        ) : (\r\n          \"No Title\"\r\n        )}\r\n        {genresOfFilm.length > 0 ? (\r\n          <span className=\"genres\">{genresOfFilm}</span>\r\n        ) : null}\r\n        {release_date ? (\r\n          <time className=\"date\" dateTime={release_date}>\r\n            {year}\r\n          </time>\r\n        ) : null}\r\n        <span className=\"wrapper\">\r\n          {vote_average ? (\r\n            <span className=\"vote-avg\">\r\n              {String(vote_average).length === 1\r\n                ? [...String(vote_average).split(\"\"), \".\", \"0\"].join(\"\")\r\n                : vote_average}\r\n            </span>\r\n          ) : null}\r\n          {vote_count ? (\r\n            <span className=\"vote-count\">({vote_count} votes)</span>\r\n          ) : null}\r\n        </span>\r\n      </p>\r\n      <button\r\n        className=\"toFav\"\r\n        onClick={() => {\r\n          toggleFilmToFav({\r\n            id,\r\n            poster_path,\r\n            title,\r\n            release_date,\r\n            vote_average,\r\n            vote_count,\r\n            genresOfFilm\r\n          });\r\n        }}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nconst FilmCard = styled(FilmCardStructure)`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 120px;\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  border-bottom: 2px solid\r\n    ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n\r\n  & .poster {\r\n    width: 25%;\r\n    overflow: hidden;\r\n    background-image: ${props =>\r\n      props.poster_path\r\n        ? `url(https://image.tmdb.org/t/p/w400/${props.poster_path})`\r\n        : `url(${img404})`};\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n\r\n    & img {\r\n      display: none;\r\n      width: 100%;\r\n      height: auto;\r\n    }\r\n  }\r\n\r\n  & p {\r\n    position: relative;\r\n    width: 75%;\r\n    max-height: 100%;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    flex-grow: 1;\r\n    align-self: stretch;\r\n    margin: 0;\r\n\r\n    & a {\r\n      width: calc(100% - 40px);\r\n      padding-left: 10px;\r\n      padding-top: 5px;\r\n      color: inherit;\r\n      font-size: 1.2em;\r\n      font-weight: bold;\r\n      text-decoration: none;\r\n\r\n      &:hover {\r\n        text-decoration: underline;\r\n      }\r\n      max-height: 40%;\r\n    }\r\n\r\n    & .genres {\r\n      font-style: italic;\r\n      width: 80%;\r\n      padding-left: 10px;\r\n      padding-right: 10px;\r\n      font-size: 0.9em;\r\n      max-height: 40%;\r\n    }\r\n\r\n    & .date {\r\n      padding-left: 10px;\r\n      max-height: 20%;\r\n    }\r\n\r\n    & .wrapper {\r\n      position: absolute;\r\n      right: 0;\r\n      bottom: 0;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: flex-end;\r\n\r\n      & .vote-avg {\r\n        background-color: ${props =>\r\n          props.nightmode ? \"transparent\" : variables.fontColorDark};\r\n        font-size: 1.8em;\r\n        padding: 5px;\r\n        color: ${props =>\r\n          props.vote_average >= 7\r\n            ? \"mediumseagreen\"\r\n            : props.vote_average >= 5\r\n            ? \"#f3f300\"\r\n            : props.vote_average >= 3\r\n            ? \"orange\"\r\n            : \"orangered\"};\r\n      }\r\n\r\n      & .vote-count {\r\n        margin-left: 10px;\r\n        align-self: flex-end;\r\n        font-size: 0.7em;\r\n      }\r\n    }\r\n  }\r\n\r\n  & .toFav {\r\n    position: absolute;\r\n    content: \"\";\r\n    right: 0;\r\n    top: 0;\r\n    width: 40px;\r\n    height: 40px;\r\n    padding: 0;\r\n    border: none;\r\n    background-repeat: no-repeat;\r\n    background-size: 50% 50%;\r\n    background-position: 50% 50%;\r\n    background-color: transparent;\r\n    background-image: ${props =>\r\n      props.favorites.some(film => Number(film.id) === Number(props.id))\r\n        ? `url(${heartIcoActive})`\r\n        : props.nightmode\r\n        ? `url(${heartIcoLight})`\r\n        : `url(${heartIcoDark})`};\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-size: 60% 60%;\r\n      opacity: ${props =>\r\n        props.favorites.some(film => Number(film.id) === Number(props.id))\r\n          ? \"0.5\"\r\n          : \"1\"};\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    height: 120px;\r\n\r\n    & p {\r\n      & a {\r\n        width: calc(100% - 50px);\r\n        font-size: 0.9em;\r\n        line-height: 1.2em;\r\n      }\r\n\r\n      & .genres {\r\n        padding-top: 5px;\r\n        font-size: 0.7em;\r\n        line-height: 1.2em;\r\n      }\r\n\r\n      & .date {\r\n        padding-top: 5px;\r\n        font-size: 0.7em;\r\n        line-height: 1.2em;\r\n      }\r\n\r\n      & .wrapper {\r\n        & .vote-avg {\r\n          font-size: 1.6em;\r\n        }\r\n\r\n        & .vote-count {\r\n          font-size: 0.5em;\r\n        }\r\n      }\r\n    }\r\n    & .toFav {\r\n      width: 50px;\r\n      height: 50px;\r\n      background-size: 70% 70%;\r\n      background-position: 50% 50%;\r\n      &:hover {\r\n        background-size: 80% 80%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default FilmCard;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport FilmCard from \"./FilmCard\";\r\nimport variables from \"../utilities/variables\";\r\nimport { debounce } from \"lodash\";\r\n\r\nconst FilmListStructure = React.forwardRef(\r\n  (\r\n    {\r\n      matchFilms,\r\n      className,\r\n      nightmode,\r\n      genres,\r\n      toggleFilmToFav,\r\n      favorites,\r\n      autoLoading,\r\n      autoLoadingFunction\r\n    },\r\n    ref\r\n  ) => {\r\n    const debouncedAutoLoading = autoLoading\r\n      ? debounce(autoLoading, 500)\r\n      : null;\r\n    return (\r\n      <ul\r\n        ref={ref}\r\n        className={className}\r\n        onScroll={event => {\r\n          event.persist();\r\n          if (autoLoading)\r\n            debouncedAutoLoading(event.target, autoLoadingFunction);\r\n        }}\r\n      >\r\n        {matchFilms.map(film => (\r\n          <FilmCard\r\n            key={film.id}\r\n            id={film.id}\r\n            title={film.title}\r\n            poster_path={film.poster_path}\r\n            nightmode={nightmode}\r\n            release_date={film.release_date}\r\n            vote_average={film.vote_average}\r\n            vote_count={film.vote_count}\r\n            genres_ids={film.genre_ids}\r\n            genres={genres}\r\n            genresOfFilm={film.genresOfFilm}\r\n            toggleFilmToFav={toggleFilmToFav}\r\n            favorites={favorites}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n);\r\n\r\nconst FilmList = styled(FilmListStructure)`\r\n  width: 100%;\r\n  overflow-y: scroll;\r\n  box-shadow: none;\r\n  border: 2px solid\r\n    ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  max-height: 600px;\r\n  background-color: ${props =>\r\n    props.nightmode\r\n      ? variables.backgroundColorDark\r\n      : variables.backgroundColorLight};\r\n  color: ${props =>\r\n    props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  box-shadow: -1px 2px 3px 0\r\n    ${props =>\r\n      props.nightmode ? \"rgba(255, 255, 255, 0.6)\" : \"rgba(0, 0, 0, 0.4)\"};\r\n\r\n  & li:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nexport default FilmList;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst Search = styled.input`\r\n  width: 100%;\r\n  height: 40px;\r\n  border: 2px solid\r\n    ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  font-size: inherit;\r\n  font-family: inherit;\r\n  background-color: ${props =>\r\n    props.nightmode\r\n      ? variables.backgroundColorDark\r\n      : variables.backgroundColorLight};\r\n  color: inherit;\r\n  padding: 0 15px;\r\n  transition: box-shadow 0.1s ease;\r\n\r\n  &::placeholder {\r\n    color: ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: inset -1px 1px 3px 0 ${props => (props.nightmode ? \"rgba(255, 255, 255, 0.6)\" : \"rgba(0, 0, 0, 0.4)\")};\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    height: 45px;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    height: 50px;\r\n  }\r\n`;\r\n\r\nexport default Search;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport FilmList from \"../UI/FilmList\";\r\nimport Search from \"./Search\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst SearchBlockStructure = ({\r\n  className,\r\n  searching,\r\n  searchValue,\r\n  loading,\r\n  nightmode,\r\n  matchFilms,\r\n  genres,\r\n  favorites,\r\n  methods\r\n}) => {\r\n  let _input;\r\n  return (\r\n    <div className={className}>\r\n      {searching && searchValue && !loading ? (\r\n        <div className=\"overlay\" onClick={methods.disableSearching} />\r\n      ) : null}\r\n      <div className=\"wrapper\">\r\n        <Search\r\n          placeholder=\"Find a movie...\"\r\n          value={searchValue}\r\n          ref={input => (_input = input)}\r\n          onChange={event => {\r\n            methods.changeSearchValue(event);\r\n            setTimeout(() => methods.searchFilms(), 0);\r\n          }}\r\n          onClick={methods.enableSearching}\r\n          onKeyDown={e => {\r\n            if (e.keyCode === 27) {\r\n              methods.disableSearching();\r\n              e.target.blur();\r\n            }\r\n          }}\r\n          type=\"text\"\r\n          nightmode={nightmode}\r\n        />\r\n        {searching && searchValue ? (\r\n          <button\r\n            className=\"clearButton\"\r\n            type=\"button\"\r\n            onClick={() => methods.clearSearchValue(_input)}\r\n          >\r\n            Clear\r\n          </button>\r\n        ) : null}\r\n        {searching && matchFilms ? (\r\n          <FilmList\r\n            matchFilms={matchFilms}\r\n            nightmode={nightmode}\r\n            genres={genres}\r\n            toggleFilmToFav={methods.toggleFilmToFav}\r\n            favorites={favorites}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SearchBlock = styled(SearchBlockStructure)`\r\n  position: relative;\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n  z-index: 2;\r\n\r\n  & .overlay {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    z-index: 1;\r\n    background: rgba(0, 0, 0, 0.3);\r\n  }\r\n\r\n  & .wrapper {\r\n    position: relative;\r\n    z-index: 2;\r\n  }\r\n\r\n  & .clearButton {\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 5px;\r\n    height: 30px;\r\n    width: 50px;\r\n    border: none;\r\n    background: transparent;\r\n    font-size: inherit;\r\n    color: inherit;\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n  }\r\n\r\n  & ul {\r\n    overflow-y: scroll;\r\n    position: absolute;\r\n    top: 100%;\r\n    right: 0;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: 60%;\r\n\r\n    & .clearButton {\r\n      top: 7px;\r\n      width: 70px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    width: 45%;\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n\r\n    & .clearButton {\r\n      top: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SearchBlock;\r\n\r\n/* <button\r\n    className=\"closeButton\"\r\n    type=\"button\"\r\n    onClick={toggleSearching}\r\n  >\r\n    Close\r\n  </button> */\r\n\r\n/* & .closeButton {\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 5px;\r\n    height: 30px;\r\n    width: 30px;\r\n    border: none;\r\n    background: transparent;\r\n    font-size: 0;\r\n    cursor: pointer;\r\n\r\n    &::before,\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 13px;\r\n      right: 0px;\r\n      width: 26px;\r\n      height: 5px;\r\n      border-radius: 1px;\r\n      background-color: ${props =>\r\n        props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n      transform: rotate(-45deg);\r\n    }\r\n\r\n    &::after {\r\n      transform: rotate(45deg);\r\n    }\r\n  } */\r\n","import styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst ButtonBlock = styled.div`\r\n  width: ${props => (props.width ? props.width : \"100%\")};\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  justify-content: ${props =>\r\n    props.justify ? props.justify : \"space-between\"};\r\n\r\n  & *:nth-child(n + 2) {\r\n    margin-left: -2px;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: ${props => (props.width ? props.width : \"calc(40% + 2px)\")};\r\n    margin-left: -2px;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    width: ${props => (props.width ? props.width : \"45%\")};\r\n    margin-left: 0;\r\n  }\r\n`;\r\n\r\nexport default ButtonBlock;\r\n","import styled from \"styled-components\";\r\n\r\nconst InfoMessage = styled.p`\r\n  color: ${props => props.color};\r\n  font-weight: bold;\r\n  border: 2px solid ${props => props.color};\r\n  width: ${props => props.width};\r\n  padding: 5px 10px;\r\n  text-align: center;\r\n  margin: ${props => props.margin || \"auto\"};\r\n`;\r\n\r\nexport default InfoMessage;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\nimport InfoMessage from \"../UI/InfoMessage\";\r\nimport { debounce } from \"lodash\";\r\nimport StateContext from \"../StateContext\";\r\n\r\nconst FiltersStructure = ({ className }) => (\r\n  <StateContext.Consumer>\r\n    {({ genres, sortingOptions, sortBy, direction, methods }) => {\r\n      let genreList = Object.keys(genres);\r\n      let genresIsChecked = false;\r\n      for (let key in genres) {\r\n        if (genres[key].enabled === true) {\r\n          genresIsChecked = true;\r\n          break;\r\n        }\r\n      }\r\n      let getFilteredMoviesWithDebounce = debounce(\r\n        methods.getFilteredMovies,\r\n        1500\r\n      );\r\n      return (\r\n        <form className={className}>\r\n          {!genresIsChecked ? (\r\n            <InfoMessage color=\"orangered\" width=\"100%\" margin=\"0 auto 5px\">\r\n              Please, choose at least one genre to see results below.\r\n            </InfoMessage>\r\n          ) : null}\r\n          <fieldset className=\"genres\">\r\n            <legend>Genres:</legend>\r\n            <div className=\"fieldsetFlexFix\">\r\n              {genreList.map(name => (\r\n                <label\r\n                  className={`${name.replace(\" \", \"-\").toLowerCase()}`}\r\n                  key={genres[name].id}\r\n                >\r\n                  <input\r\n                    onChange={event => {\r\n                      methods.toggleGenre(event);\r\n                      getFilteredMoviesWithDebounce();\r\n                    }}\r\n                    type=\"checkbox\"\r\n                    name={name}\r\n                    checked={genres[name].enabled}\r\n                  />\r\n                  <span>{name}</span>\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </fieldset>\r\n\r\n          <fieldset className=\"sort-by\">\r\n            <legend>Sort by:</legend>\r\n            <div className=\"fieldsetFlexFix\">\r\n              {sortingOptions.map(option => {\r\n                return (\r\n                  <label key={option}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"sortBy\"\r\n                      value={option}\r\n                      checked={option === sortBy}\r\n                      onChange={event => {\r\n                        methods.toggleSorting(event);\r\n                        setTimeout(() => methods.getFilteredMovies(), 0);\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      {(option => {\r\n                        let arr = option.split(\"\");\r\n                        let str;\r\n                        arr[0] = arr[0].toUpperCase();\r\n                        str = arr.join(\"\");\r\n                        return str;\r\n                      })(option)}\r\n                    </span>\r\n                  </label>\r\n                );\r\n              })}\r\n            </div>\r\n          </fieldset>\r\n\r\n          <fieldset className=\"direction\">\r\n            <legend>Direction:</legend>\r\n            <div className=\"fieldsetFlexFix\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"direction\"\r\n                  value=\"ascending\"\r\n                  checked={direction === \"ascending\"}\r\n                  onChange={event => {\r\n                    methods.toggleDirection(event);\r\n                    setTimeout(() => methods.getFilteredMovies(), 0);\r\n                  }}\r\n                />\r\n                <span>Ascending</span>\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"direction\"\r\n                  value=\"descending\"\r\n                  checked={direction === \"descending\"}\r\n                  onChange={event => {\r\n                    methods.toggleDirection(event);\r\n                    setTimeout(() => methods.getFilteredMovies(), 0);\r\n                  }}\r\n                />\r\n                <span>Descending</span>\r\n              </label>\r\n            </div>\r\n          </fieldset>\r\n        </form>\r\n      );\r\n    }}\r\n  </StateContext.Consumer>\r\n);\r\n\r\nconst Filters = styled(FiltersStructure)`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  justify-content: space-between;\r\n  padding-top: 10px;\r\n\r\n  & input:not(:checked) ~ span:hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  & fieldset {\r\n    margin: 0;\r\n    border: 2px solid\r\n      ${props =>\r\n        props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n\r\n    & legend {\r\n      font-size: 18px;\r\n      padding: 0 10px;\r\n    }\r\n\r\n    & label {\r\n      width: 100%;\r\n      height: 35px;\r\n    }\r\n\r\n    & div {\r\n      display: flex;\r\n      flex-direction: column;\r\n      flex-wrap: wrap;\r\n      height: 100%;\r\n      align-content: space-between;\r\n    }\r\n  }\r\n\r\n  & .genres {\r\n    width: 100%;\r\n    height: 380px;\r\n\r\n    & label {\r\n      width: 45%;\r\n\r\n      & input {\r\n        display: none;\r\n      }\r\n      & span {\r\n        position: relative;\r\n        display: block;\r\n        cursor: pointer;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: left;\r\n        padding-left: 25px;\r\n        padding-top: 6px;\r\n\r\n        &::before {\r\n          content: \"\";\r\n          position: absolute;\r\n          top: 8px;\r\n          left: 0;\r\n          width: 16px;\r\n          height: 16px;\r\n          border: 2px solid\r\n            ${props =>\r\n              props.nightmode\r\n                ? variables.fontColorLight\r\n                : variables.fontColorDark};\r\n          transition: transform 0.3s;\r\n        }\r\n      }\r\n      & input:checked ~ span::before {\r\n        width: 21px;\r\n        height: 10px;\r\n        border-width: 4px;\r\n        border-color: ${props =>\r\n          props.nightmode ? \"palegreen\" : \"mediumseagreen\"};\r\n        border-top: none;\r\n        border-right: none;\r\n        transform: rotate(-45deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  & .sort-by,\r\n  .direction {\r\n    width: 48%;\r\n    margin: 10px 0 0;\r\n  }\r\n\r\n  & .sort-by {\r\n    & input {\r\n      display: none;\r\n    }\r\n\r\n    & span {\r\n      position: relative;\r\n      display: block;\r\n      cursor: pointer;\r\n      width: 100%;\r\n      height: 100%;\r\n      text-align: left;\r\n      padding-left: 25px;\r\n      padding-top: 6px;\r\n\r\n      &::before,\r\n      &::after {\r\n        position: absolute;\r\n        top: 8px;\r\n        left: 0;\r\n        content: \"\";\r\n        border-radius: 50%;\r\n      }\r\n\r\n      &::before {\r\n        width: 16px;\r\n        height: 16px;\r\n        border: 2px solid\r\n          ${props =>\r\n            props.nightmode\r\n              ? variables.fontColorLight\r\n              : variables.fontColorDark};\r\n      }\r\n      &::after {\r\n        width: 16px;\r\n        height: 16px;\r\n        background: ${props =>\r\n          props.nightmode ? \"palegreen\" : \"mediumseagreen\"};\r\n        transform: scale(0);\r\n        transition: transform 0.3s;\r\n      }\r\n    }\r\n\r\n    & input[type=\"radio\"]:checked ~ span::after {\r\n      transform: scale(1.1);\r\n    }\r\n  }\r\n\r\n  & .direction {\r\n    & input {\r\n      display: none;\r\n    }\r\n\r\n    & span {\r\n      position: relative;\r\n      display: block;\r\n      cursor: pointer;\r\n      width: 100%;\r\n      height: 100%;\r\n      text-align: left;\r\n      padding-left: 25px;\r\n      padding-top: 6px;\r\n\r\n      &::before {\r\n        position: absolute;\r\n        top: 8px;\r\n        left: 0;\r\n        content: \"\";\r\n        width: 0;\r\n        height: 0;\r\n        border-top: 16px solid\r\n          ${props =>\r\n            props.direction === \"descending\" && props.nightmode\r\n              ? \"palegreen\"\r\n              : props.direction === \"descending\" && !props.nightmode\r\n              ? \"mediumseagreen\"\r\n              : props.nightmode\r\n              ? variables.fontColorLight\r\n              : !props.nightmode\r\n              ? variables.fontColorDark\r\n              : \"transparent\"};\r\n        border-bottom: 0px solid transparent;\r\n        border-right: 10px solid transparent;\r\n        border-left: 10px solid transparent;\r\n\r\n        transition: ${props =>\r\n          props.direction === \"descending\" ? \"border-top 0.3s\" : \"none\"};\r\n      }\r\n    }\r\n\r\n    & label:first-child {\r\n      & span::before {\r\n        border-bottom: 16px solid\r\n          ${props =>\r\n            props.direction === \"ascending\" && props.nightmode\r\n              ? \"palegreen\"\r\n              : props.direction === \"ascending\" && !props.nightmode\r\n              ? \"mediumseagreen\"\r\n              : props.nightmode\r\n              ? variables.fontColorLight\r\n              : !props.nightmode\r\n              ? variables.fontColorDark\r\n              : \"transparent\"};\r\n        border-top: 0px solid transparent;\r\n\r\n        transition: ${props =>\r\n          props.direction === \"ascending\" ? \"border-bottom 0.3s\" : \"none\"};\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: 100%;\r\n    .genres {\r\n      width: 60%;\r\n      height: 400px;\r\n\r\n      & label span {\r\n        padding-top: 0;\r\n        line-height: 32px;\r\n      }\r\n    }\r\n    .sort-by {\r\n      width: 35%;\r\n      height: 240px;\r\n      margin: 0;\r\n\r\n      & label span {\r\n        padding-top: 0;\r\n        line-height: 32px;\r\n      }\r\n    }\r\n\r\n    .direction {\r\n      width: 35%;\r\n      height: 160px;\r\n      margin-top: -160px;\r\n      margin-left: 65%;\r\n\r\n      & label span {\r\n        padding-top: 0;\r\n        line-height: 32px;\r\n      }\r\n    }\r\n\r\n    & fieldset {\r\n      & legend {\r\n        font-size: inherit;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    order: 3;\r\n\r\n    & .genres {\r\n      width: 65%;\r\n      height: 300px;\r\n\r\n      & label {\r\n        width: calc(100% / 3);\r\n      }\r\n    }\r\n\r\n    & .sort-by {\r\n      width: 30%;\r\n      height: 180px;\r\n    }\r\n\r\n    & .direction {\r\n      width: 30%;\r\n      height: 115px;\r\n      margin-top: -115px;\r\n      margin-left: 70%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Filters;\r\n","import styled from \"styled-components\";\r\n\r\nconst Avatar = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport default Avatar;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst UserName = styled.p`\r\n  width: 100%;\r\n  margin: 0 0 10px;\r\n  font-weight: bold;\r\n  font-size: 1.2em;\r\n  text-align: center;\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport default UserName;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FilmList from \"../UI/FilmList\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst FavoritesStructure = ({\r\n  favorites,\r\n  toggleFilmToFav,\r\n  nightmode,\r\n  className\r\n}) => {\r\n  return (\r\n    <section className={className}>\r\n      <h2>Favorites</h2>\r\n      {favorites.length > 0 ? (\r\n        <FilmList\r\n          nightmode={nightmode}\r\n          matchFilms={favorites}\r\n          toggleFilmToFav={toggleFilmToFav}\r\n          favorites={favorites}\r\n        />\r\n      ) : (\r\n        <p className=\"info-message\">Favorites is empty</p>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nconst Favorites = styled(FavoritesStructure)`\r\n  width: 100%;\r\n  position: relative;\r\n\r\n  & h2 {\r\n    text-align: center;\r\n    margin: 15px 0;\r\n  }\r\n\r\n  & .info-message {\r\n    text-align: center;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    height: 2px;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    background-color: lightgrey;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: 60%;\r\n    margin: 0 auto;\r\n\r\n    &::after {\r\n      left: -${(20 / 60) * 100}%;\r\n      right: -${(20 / 60) * 100}%;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    order: 2;\r\n    width: 45%;\r\n    margin: 0;\r\n\r\n    &::after {\r\n      top: 0;\r\n      bottom: 0;\r\n      right: auto;\r\n      left: calc(-${(5 / 45) * 100}% - 1px);\r\n      width: 2px;\r\n      height: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Avatar from \"../UI/Avatar\";\r\nimport UserName from \"../UI/UserName\";\r\nimport InfoMessage from \"../UI/InfoMessage\";\r\nimport Favorites from \"./Favorites\";\r\nimport variables from \"../utilities/variables\";\r\nimport StateContext from \"../StateContext\";\r\n\r\nconst UserProfileStructure = ({ className }) => {\r\n  return (\r\n    <StateContext.Consumer>\r\n      {({\r\n        userName,\r\n        userAuthorized,\r\n        userAvatar,\r\n        defaultAvatar,\r\n        defaultName,\r\n        favorites,\r\n        nightModeIsOn,\r\n        methods\r\n      }) => (\r\n        <div className={className}>\r\n          <div className=\"wrapper\">\r\n            {!userName ? (\r\n              <InfoMessage color=\"orangered\">\r\n                Registration is unavailable at the moment, but you can add films\r\n                to favorites.\r\n              </InfoMessage>\r\n            ) : null}\r\n            <div className=\"user-info\">\r\n              <Avatar\r\n                src={userAuthorized ? userAvatar : defaultAvatar}\r\n                alt=\"Your avatar\"\r\n              />\r\n              <UserName>{userAuthorized ? userName : defaultName}</UserName>\r\n            </div>\r\n          </div>\r\n          <Favorites\r\n            favorites={favorites}\r\n            toggleFilmToFav={methods.toggleFilmToFav}\r\n            nightmode={nightModeIsOn}\r\n          />\r\n        </div>\r\n      )}\r\n    </StateContext.Consumer>\r\n  );\r\n};\r\n\r\nconst UserProfile = styled(UserProfileStructure)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-flow: row wrap;\r\n  flex-shrink: 0;\r\n  width: 100%;\r\n  padding: 20px 0;\r\n\r\n  .user-info {\r\n    width: 30%;\r\n    margin-top: 20px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    align-self: center;\r\n  }\r\n\r\n  .wrapper {\r\n    display: flex;\r\n    flex-flow: column;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    & .wrapper {\r\n      flex-flow: row;\r\n      justify-content: space-around;\r\n    }\r\n\r\n    & .user-info {\r\n      width: 15%;\r\n      margin-top: 0;\r\n      align-self: flex-start;\r\n      order: -1;\r\n      font-size: 0.7em;\r\n      margin-left: 0;\r\n      margin-right: 0;\r\n    }\r\n\r\n    & .wrapper > p {\r\n      width: 65%;\r\n      margin-right: 0;\r\n      margin-left: 0;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    order: 3;\r\n    padding-bottom: 0;\r\n    padding-top: 40px;\r\n\r\n    & > .wrapper {\r\n      width: 45%;\r\n      align-content: flex-start;\r\n      align-items: flex-start;\r\n      flex-flow: row wrap;\r\n    }\r\n\r\n    .user-info {\r\n      width: 30%;\r\n      margin-bottom: 50px;\r\n      margin-top: 50px;\r\n    }\r\n\r\n    & .wrapper > p {\r\n      width: 75%;\r\n      margin: 0;\r\n      margin-bottom: 50px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport Filters from \"./Filters\";\r\nimport Profile from \"./Profile\";\r\n\r\nconst Menu = ({ openedMenuName, menuIsOpen, direction, nightmode }) => {\r\n  let Menu;\r\n  if (openedMenuName === \"Filters\" && menuIsOpen) {\r\n    Menu = <Filters nightmode={nightmode} direction={direction} />;\r\n  } else if (openedMenuName === \"Profile\" && menuIsOpen) {\r\n    Menu = <Profile />;\r\n  } else {\r\n    Menu = null;\r\n  }\r\n  return Menu;\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SearchBlock from \"./SearchBlock\";\r\nimport ButtonsBlock from \"../UI/ButtonsBlock\";\r\nimport Button from \"../UI/Button\";\r\nimport Menu from \"./Menu\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nimport StateContext from \"../StateContext\";\r\n\r\nconst HeaderStructure = ({ className }) => (\r\n  <StateContext.Consumer>\r\n    {({\r\n      nightModeIsOn,\r\n      menuIsOpen,\r\n      openedMenuName,\r\n      searching,\r\n      searchValue,\r\n      loading,\r\n      matchFilms,\r\n      direction,\r\n      genres,\r\n      favorites,\r\n      methods\r\n    }) => (\r\n      <header className={className}>\r\n        <h1>Moviesearcher</h1>\r\n        <SearchBlock\r\n          searching={searching}\r\n          searchValue={searchValue}\r\n          loading={loading}\r\n          nightmode={nightModeIsOn}\r\n          matchFilms={matchFilms}\r\n          genres={genres}\r\n          favorites={favorites}\r\n          methods={methods}\r\n        />\r\n        <ButtonsBlock>\r\n          <Button\r\n            name=\"Filters\"\r\n            onClick={methods.toggleMenu}\r\n            nightmode={nightModeIsOn}\r\n            menuIsOpen={menuIsOpen}\r\n            openedMenuName={openedMenuName}\r\n          >\r\n            Filters\r\n          </Button>\r\n          <Button\r\n            name=\"Profile\"\r\n            onClick={methods.toggleMenu}\r\n            nightmode={nightModeIsOn}\r\n            menuIsOpen={menuIsOpen}\r\n            openedMenuName={openedMenuName}\r\n          >\r\n            Profile\r\n          </Button>\r\n          <Button\r\n            name=\"Night mode\"\r\n            onClick={methods.toggleNightMode}\r\n            nightmode={nightModeIsOn}\r\n          />\r\n        </ButtonsBlock>\r\n        <Menu\r\n          menuIsOpen={menuIsOpen}\r\n          openedMenuName={openedMenuName}\r\n          nightmode={nightModeIsOn}\r\n          direction={direction}\r\n        />\r\n      </header>\r\n    )}\r\n  </StateContext.Consumer>\r\n);\r\n\r\nconst MainHeader = styled(HeaderStructure)`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  & h1 {\r\n    width: 100%;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    & h1 {\r\n      font-size: 1.6em;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    padding-bottom: 30px;\r\n    padding-top: 30px;\r\n\r\n    & h1 {\r\n      margin: 0;\r\n      font-size: 1.8em;\r\n      width: 45%;\r\n      margin-top: 30px;\r\n    }\r\n\r\n    & > div:nth-child(2) {\r\n      order: 2;\r\n      margin-top: -17px;\r\n      margin-left: auto;\r\n    }\r\n\r\n    & > div:nth-child(3) {\r\n      order: 1;\r\n      margin-top: auto;\r\n      margin-bottom: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default MainHeader;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ButtonsBlock from \"../UI/ButtonsBlock\";\r\nimport Button from \"../UI/Button\";\r\nimport SearchBlock from \"./SearchBlock\";\r\nimport { Link } from \"react-router-dom\";\r\nimport homeIcoLight from \"../img/home-ico-light.svg\";\r\nimport homeIcoDark from \"../img/home-ico-dark.svg\";\r\nimport variables from \"../utilities/variables\";\r\nimport StateContext from \"../StateContext\";\r\n\r\nconst HeaderStructure = ({ className }) => {\r\n  return (\r\n    <StateContext.Consumer>\r\n      {({\r\n        nightModeIsOn,\r\n        searching,\r\n        searchValue,\r\n        loading,\r\n        matchFilms,\r\n        genres,\r\n        favorites,\r\n        methods\r\n      }) => (\r\n        <header className={className}>\r\n          <h1>Moviesearcher</h1>\r\n          <SearchBlock\r\n            searchValue={searchValue}\r\n            searching={searching}\r\n            matchFilms={matchFilms}\r\n            nightmode={nightModeIsOn}\r\n            loading={loading}\r\n            genres={genres}\r\n            favorites={favorites}\r\n            methods={methods}\r\n          />\r\n          <ButtonsBlock justify=\"flex-end\">\r\n            <Button\r\n              as={Link}\r\n              name=\"Main\"\r\n              nightmode={nightModeIsOn}\r\n              to=\"/\"\r\n              width=\"calc(33% / 2)\"\r\n              onClick={methods.deleteFilmData}\r\n              image={nightModeIsOn ? homeIcoLight : homeIcoDark}\r\n            />\r\n            <Button\r\n              name=\"Night mode\"\r\n              onClick={methods.toggleNightMode}\r\n              nightmode={nightModeIsOn}\r\n            />\r\n          </ButtonsBlock>\r\n        </header>\r\n      )}\r\n    </StateContext.Consumer>\r\n  );\r\n};\r\n\r\nconst SideHeader = styled(HeaderStructure)`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  & h1 {\r\n    width: 100%;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    & h1 {\r\n      font-size: 1.6em;\r\n    }\r\n\r\n    & button {\r\n      width: 50%;\r\n    }\r\n\r\n    & a {\r\n      width: 50%;\r\n    }\r\n\r\n    & > div:nth-child(3) {\r\n      width: calc(40% + 4px);\r\n      margin-left: -4px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    padding-top: 30px;\r\n\r\n    & h1 {\r\n      font-size: 1.8em;\r\n      width: 50%;\r\n      margin-top: 30px;\r\n      margin-bottom: 0;\r\n    }\r\n\r\n    & > div:nth-child(2) {\r\n      order: 2;\r\n      margin-left: auto;\r\n      margin-top: -17px;\r\n    }\r\n\r\n    & > div:nth-child(3) {\r\n      order: 1;\r\n      margin-top: auto;\r\n      width: calc(45% + 2px);\r\n      margin-left: -2px;\r\n      margin-bottom: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SideHeader;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FilmList from \"../UI/FilmList\";\r\nimport variables from \"../utilities/variables\";\r\nimport StateContext from \"../StateContext\";\r\n\r\nconst BestFilmsStructure = ({ className }) => (\r\n  <StateContext.Consumer>\r\n    {({ nightModeIsOn, bestMovies, genres, favorites, methods }) => {\r\n      return (\r\n        <section className={className}>\r\n          <h2>Best films</h2>\r\n          <FilmList\r\n            nightmode={nightModeIsOn}\r\n            matchFilms={bestMovies}\r\n            toggleFilmToFav={methods.toggleFilmToFav}\r\n            genres={genres}\r\n            favorites={favorites}\r\n            autoLoading={methods.autoLoading}\r\n            autoLoadingFunction={methods.getBestMovies}\r\n          />\r\n        </section>\r\n      );\r\n    }}\r\n  </StateContext.Consumer>\r\n);\r\n\r\nconst BestFilms = styled(BestFilmsStructure)`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n\r\n  & h2 {\r\n    text-align: center;\r\n    width: 100%;\r\n  }\r\n\r\n  & button {\r\n    margin: -2px 0 0 auto;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    height: 2px;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    background-color: lightgrey;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: 60%;\r\n    margin: 0 auto;\r\n    margin-bottom: 30px;\r\n\r\n    &::after {\r\n      left: -${(20 / 60) * 100}%;\r\n      right: -${(20 / 60) * 100}%;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    width: 45%;\r\n    margin: 0;\r\n    margin-bottom: 30px;\r\n\r\n    &::after {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default BestFilms;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FilmList from \"../UI/FilmList\";\r\nimport variables from \"../utilities/variables\";\r\nimport StateContext from \"../StateContext\";\r\n\r\nconst FilteredFilmsStructure = ({ className }) => (\r\n  <StateContext.Consumer>\r\n    {({ nightModeIsOn, filteredMovies, genres, favorites, methods }) => (\r\n      <section className={className}>\r\n        <h2>Films by filters</h2>\r\n        <FilmList\r\n          nightmode={nightModeIsOn}\r\n          matchFilms={filteredMovies}\r\n          toggleFilmToFav={methods.toggleFilmToFav}\r\n          genres={genres}\r\n          favorites={favorites}\r\n          autoLoading={methods.autoLoading}\r\n          autoLoadingFunction={methods.getMoreFilteredMovies}\r\n        />\r\n      </section>\r\n    )}\r\n  </StateContext.Consumer>\r\n);\r\n\r\nconst FilteredFilms = styled(FilteredFilmsStructure)`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n\r\n  & h2 {\r\n    text-align: center;\r\n    width: 100%;\r\n  }\r\n\r\n  & button {\r\n    margin: -2px 0 0 auto;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    height: 2px;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    background-color: lightgrey;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: 60%;\r\n    margin: 0 auto;\r\n    margin-bottom: 30px;\r\n\r\n    &::after {\r\n      left: -${(20 / 60) * 100}%;\r\n      right: -${(20 / 60) * 100}%;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    width: 45%;\r\n    margin: 0;\r\n    margin-bottom: 30px;\r\n\r\n    &::after {\r\n      top: 0;\r\n      bottom: 0;\r\n      left: auto;\r\n      right: calc(-${(5 / 45) * 100}% - 1px);\r\n      width: 2px;\r\n      height: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default FilteredFilms;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BestFilms from \"./BestFilms\";\r\nimport FilteredFilms from \"./FilteredFilms\";\r\nimport variables from \"../utilities/variables\";\r\nimport StateContext from \"../StateContext\";\r\n\r\nconst MainStructure = ({ className }) => (\r\n  <StateContext.Consumer>\r\n    {({\r\n      filteredMovies,\r\n      bestMovies,\r\n      openedMenuName,\r\n      menuIsOpen,\r\n      nightModeIsOn\r\n    }) =>\r\n      (filteredMovies.length > 0 || bestMovies.length > 0) &&\r\n      !(openedMenuName === \"Profile\" && menuIsOpen) && (\r\n        <main className={className}>\r\n          {filteredMovies.length < 1 ? null : openedMenuName === \"Profile\" &&\r\n            menuIsOpen ? null : (\r\n            <FilteredFilms nightmode={nightModeIsOn} />\r\n          )}\r\n          {bestMovies.length < 1 ? null : openedMenuName === \"Profile\" &&\r\n            menuIsOpen ? null : (\r\n            <BestFilms nightmode={nightModeIsOn} />\r\n          )}\r\n        </main>\r\n      )\r\n    }\r\n  </StateContext.Consumer>\r\n);\r\n\r\nconst Main = styled(MainStructure)`\r\n  position: relative;\r\n  padding-top: 20px;\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: ${props =>\r\n      props.filteredMovies.length !== 0 ? \"space-between\" : \"center\"};\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      height: 2px;\r\n      left: 0;\r\n      right: 0;\r\n      top: 0;\r\n      background-color: lightgrey;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FilmList from \"../UI/FilmList\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst SimilarFilmsStructure = React.forwardRef(\r\n  (\r\n    {\r\n      similarFilms,\r\n      toggleFilmToFav,\r\n      nightmode,\r\n      favorites,\r\n      className,\r\n      id,\r\n      prevId,\r\n      genres,\r\n      getSimilarFilms,\r\n      autoLoading\r\n    },\r\n    ref\r\n  ) => {\r\n    return (\r\n      <section className={className}>\r\n        <h2>Similar films</h2>\r\n        <FilmList\r\n          ref={ref}\r\n          nightmode={nightmode}\r\n          matchFilms={similarFilms}\r\n          toggleFilmToFav={toggleFilmToFav}\r\n          favorites={favorites}\r\n          genres={genres}\r\n          autoLoading={autoLoading}\r\n          autoLoadingFunction={() => getSimilarFilms(id, prevId)}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n);\r\n\r\nconst SimilarFilms = styled(SimilarFilmsStructure)`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n\r\n  & h2 {\r\n    text-align: center;\r\n    width: 100%;\r\n  }\r\n\r\n  & button {\r\n    margin: -2px 0 0 auto;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    height: 2px;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    background-color: lightgrey;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: 60%;\r\n    margin: 20px auto 0;\r\n    margin-bottom: 30px;\r\n\r\n    &::after {\r\n      left: -${(20 / 60) * 100}%;\r\n      right: -${(20 / 60) * 100}%;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    width: 45%;\r\n    margin: 30px auto 30px;\r\n\r\n    &::after {\r\n      left: -${(55 / 2 / 45) * 100}%;\r\n      right: -${(55 / 2 / 45) * 100}%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SimilarFilms;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst RatingStructure = ({ className, voteAverage, voteCount }) => (\r\n  <div className={className}>\r\n    {voteAverage && <p className=\"vote-avg\">{voteAverage}</p>}\r\n    {voteCount && <p className=\"vote-count\">{voteCount} votes</p>}\r\n  </div>\r\n);\r\n\r\nconst Rating = styled(RatingStructure)`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 5%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  padding: 5px;\r\n  background-color: ${props =>\r\n    props.nightmode ? variables.backgroundColorDark : variables.fontColorDark};\r\n\r\n  & .vote-avg {\r\n    margin: 0;\r\n    margin-bottom: 10px;\r\n    font-size: 2em;\r\n    color: ${props =>\r\n      props.voteAverage >= 7\r\n        ? \"mediumseagreen\"\r\n        : props.voteAverage >= 5\r\n        ? \"#f3f300\"\r\n        : props.voteAverage >= 3\r\n        ? \"orange\"\r\n        : \"orangered\"};\r\n  }\r\n\r\n  & .vote-count {\r\n    margin: 0;\r\n    align-self: flex-end;\r\n    color: ${props =>\r\n      props.nightmode\r\n        ? variables.fontColorLight\r\n        : variables.backgroundColorLight};\r\n    font-size: 1em;\r\n  }\r\n\r\n  &:hover {\r\n    opacity: 0.2;\r\n  }\r\n`;\r\n\r\nexport default Rating;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst Tagline = styled.p`\r\n  margin-top: 0;\r\n  width: 100%;\r\n  position: relative;\r\n  font-style: italic;\r\n  padding-left: 10px;\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 2px;\r\n    left: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    background-color: ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  }\r\n`;\r\n\r\nexport default Tagline;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\nimport heartIcoLight from \"../img/heart-off-light.svg\";\r\nimport heartIcoDark from \"../img/heart-off-dark.svg\";\r\nimport heartIcoActive from \"../img/heart-on.svg\";\r\n\r\nconst FavButton = styled.button`\r\n  width: 25%;\r\n  height: auto;\r\n  padding: 0;\r\n  border: none;\r\n  background-repeat: no-repeat;\r\n  background-size: 80% 80%;\r\n  background-position: 50% 50%;\r\n  background-color: transparent;\r\n  background-image: ${props =>\r\n    props.favorites.some(film => Number(film.id) === Number(props.filmData.id))\r\n      ? `url(${heartIcoActive})`\r\n      : props.nightmode\r\n      ? `url(${heartIcoLight})`\r\n      : `url(${heartIcoDark})`};\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-size: 90% 90%;\r\n    opacity: ${props =>\r\n      props.favorites.some(\r\n        film => Number(film.id) === Number(props.filmData.id)\r\n      )\r\n        ? \"0.5\"\r\n        : \"1\"};\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    background-size: 70% 70%;\r\n    &:hover {\r\n      background-size: 80% 80%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default FavButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport img404 from \"../img/img404.jpg\";\r\nimport variables from \"../utilities/variables\";\r\nimport InfoMessage from \"../UI/InfoMessage\";\r\nimport SimilarFilms from \"./SimilarFilms\";\r\nimport Rating from \"./Rating\";\r\nimport Tagline from \"./Tagline\";\r\nimport FavButton from \"./FavButton\";\r\nimport StateContext from \"../StateContext\";\r\n\r\n// const ref = React.createRef();\r\n\r\nclass FilmPageStructure extends React.Component {\r\n  static contextType = StateContext;\r\n\r\n  ref = React.createRef();\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    this.context.methods.loadFilmData(\r\n      Number(this.props.location.pathname.slice(10))\r\n    );\r\n    this.context.methods.getSimilarFilms(\r\n      Number(this.props.location.pathname.slice(10)),\r\n      this.context.filmData.id\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      window.scrollTo(0, 0);\r\n      // console.log(this.ref);\r\n      this.ref.current.scrollTop = 0;\r\n      this.context.methods.loadFilmData(\r\n        Number(this.props.location.pathname.slice(10))\r\n      );\r\n      this.context.methods.getSimilarFilms(\r\n        Number(this.props.location.pathname.slice(10))\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { className } = this.props;\r\n    let {\r\n      filmData,\r\n      nightModeIsOn,\r\n      favorites,\r\n      similarFilms,\r\n      genres,\r\n      methods\r\n    } = this.context;\r\n\r\n    let convertRuntime = runtime => {\r\n      if (runtime < 60) {\r\n        let str = runtime + \" minutes.\";\r\n        return str;\r\n      } else {\r\n        let hours = Math.floor(runtime / 60);\r\n        let minutes = runtime % 60;\r\n        let str = `${hours} ${\r\n          hours > 1 ? \"hours\" : \"hour\"\r\n        } ${minutes} minutes.`;\r\n        return str;\r\n      }\r\n    };\r\n\r\n    let convertDate = date => {\r\n      let day = date.getDay();\r\n      let months = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\"\r\n      ];\r\n      let month = months[date.getMonth()];\r\n      let year = date.getFullYear();\r\n      let str = `${month} ${day}, ${year}`;\r\n      return str;\r\n    };\r\n\r\n    let convertMoney = amount => {\r\n      let symbols = String(amount)\r\n        .split(\"\")\r\n        .reverse();\r\n      symbols = symbols.map((s, i, arr) => {\r\n        if (!((i + 1) % 3) && i + 1 !== arr.length) {\r\n          return \" \" + s;\r\n        } else return s;\r\n      });\r\n      let str = symbols.reverse().join(\"\");\r\n      return str;\r\n    };\r\n\r\n    let genresList =\r\n      filmData.genres && filmData.genres.map(genre => genre.name).join(\", \");\r\n    let releaseDate =\r\n      filmData.release_date && convertDate(new Date(filmData.release_date));\r\n    let countries =\r\n      filmData.production_countries &&\r\n      filmData.production_countries.map(country => country.name).join(\", \");\r\n    let companies =\r\n      filmData.production_companies &&\r\n      filmData.production_companies.map(comp => comp.name).join(\", \");\r\n    let budget = filmData.budget && convertMoney(filmData.budget);\r\n    let revenue = filmData.revenue && convertMoney(filmData.revenue);\r\n    let homepage = filmData.homepage;\r\n    let runtime = filmData.runtime && convertRuntime(filmData.runtime);\r\n    let tagline = filmData.tagline;\r\n    let voteAverage, voteCount;\r\n    if (filmData.vote_average) {\r\n      voteAverage =\r\n        String(filmData.vote_average).length === 1\r\n          ? [...String(filmData.vote_average).split(\"\"), \".\", \"0\"].join(\"\")\r\n          : filmData.vote_average;\r\n      voteCount = filmData.vote_count;\r\n    }\r\n\r\n    return filmData ? (\r\n      <main className={className}>\r\n        <h2 className=\"title\">{filmData.title || \"No title.\"}</h2>\r\n        {tagline && <Tagline nightmode={nightModeIsOn}>{tagline}</Tagline>}\r\n        <div className=\"poster-block\">\r\n          <img\r\n            className=\"image\"\r\n            src={\r\n              filmData.poster_path\r\n                ? `https://image.tmdb.org/t/p/w400/${filmData.poster_path}`\r\n                : img404\r\n            }\r\n            alt={filmData.title || \"No title.\"}\r\n          />\r\n          {voteAverage && (\r\n            <Rating\r\n              voteAverage={voteAverage}\r\n              voteCount={voteCount}\r\n              nightmode={nightModeIsOn}\r\n            />\r\n          )}\r\n          <div className=\"widgets\">\r\n            <FavButton\r\n              onClick={() => {\r\n                methods.toggleFilmToFav({\r\n                  id: filmData.id,\r\n                  poster_path: filmData.poster_path,\r\n                  title: filmData.title,\r\n                  release_date: filmData.release_date,\r\n                  vote_average: filmData.vote_average,\r\n                  vote_count: filmData.vote_count,\r\n                  genresOfFilm: genresList\r\n                });\r\n              }}\r\n              favorites={favorites}\r\n              filmData={filmData}\r\n              nightmode={nightModeIsOn}\r\n            />\r\n            <InfoMessage color=\"orangered\" width=\"75%\">\r\n              Estimating is unavailable at the moment.\r\n            </InfoMessage>\r\n          </div>\r\n        </div>\r\n        <div className=\"additional-info\">\r\n          {filmData.overview && <p className=\"overview\">{filmData.overview}</p>}\r\n          {genresList && (\r\n            <p className=\"genres\">\r\n              <span className=\"option-name\">Genres:</span> {genresList}.\r\n            </p>\r\n          )}\r\n          {runtime && (\r\n            <p className=\"runtime\">\r\n              <span className=\"option-name\">Runtime:</span> {runtime}\r\n            </p>\r\n          )}\r\n          {releaseDate && (\r\n            <time className=\"date\" dateTime={filmData.release_date}>\r\n              <span className=\"option-name\">Release date:</span> {releaseDate}.\r\n            </time>\r\n          )}\r\n          {countries && (\r\n            <p className=\"counries\">\r\n              <span className=\"option-name\">Counries:</span> {countries}.\r\n            </p>\r\n          )}\r\n          {companies && (\r\n            <p className=\"companies\">\r\n              <span className=\"option-name\">Companies:</span> {companies}.\r\n            </p>\r\n          )}\r\n          {Boolean(budget) && (\r\n            <p className=\"budget\">\r\n              <span className=\"option-name\">Budget:</span> ${budget}.\r\n            </p>\r\n          )}\r\n          {Boolean(revenue) && (\r\n            <p className=\"revenue\">\r\n              <span className=\"option-name\">Revenue:</span> ${revenue}.\r\n            </p>\r\n          )}\r\n          {homepage && (\r\n            <p className=\"homepage\">\r\n              <span className=\"option-name\">Homepage:</span>{\" \"}\r\n              <a href={`${homepage}`}>Link</a>\r\n            </p>\r\n          )}\r\n        </div>\r\n        {similarFilms.length > 0 && (\r\n          <SimilarFilms\r\n            ref={this.ref}\r\n            id={Number(this.props.location.pathname.slice(10))}\r\n            prevId={filmData.id}\r\n            similarFilms={similarFilms}\r\n            toggleFilmToFav={methods.toggleFilmToFav}\r\n            nightmode={nightModeIsOn}\r\n            genres={genres}\r\n            favorites={favorites}\r\n            getSimilarFilms={methods.getSimilarFilms}\r\n            autoLoading={methods.autoLoading}\r\n          />\r\n        )}\r\n      </main>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nconst FilmPage = styled(FilmPageStructure)`\r\n  & .image {\r\n    display: block;\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n\r\n  & .poster-block {\r\n    position: relative;\r\n  }\r\n\r\n  & .option-name {\r\n    font-weight: bold;\r\n  }\r\n\r\n  & .overview {\r\n    &::first-letter {\r\n      font-size: 1.4em;\r\n    }\r\n  }\r\n\r\n  & .homepage {\r\n    & a {\r\n      color: inherit;\r\n      &:hover {\r\n        text-decoration: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  & .widgets {\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: space-between;\r\n\r\n    & .title {\r\n      width: 100%;\r\n    }\r\n\r\n    & .poster-block {\r\n      width: 45%;\r\n    }\r\n\r\n    & .overview {\r\n      margin-top: 0;\r\n    }\r\n\r\n    & .additional-info {\r\n      width: 50%;\r\n    }\r\n\r\n    & .widgets {\r\n      & p {\r\n        font-size: 0.8em;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default FilmPage;\r\n","import React from \"react\";\r\nimport MainHeader from \"./Header/MainHeader\";\r\nimport SideHeader from \"./Header/SideHeader\";\r\nimport Main from \"./Main/Main\";\r\nimport FilmPage from \"./FilmPage/FilmPage\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport StateContext from \"./StateContext\";\r\n\r\nconst RoutingComponent = () => (\r\n  <StateContext.Consumer>\r\n    {({ filteredMovies }) => (\r\n      <>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={MainHeader} />\r\n          <Route path=\"/filmpage/\" component={SideHeader} />\r\n        </Switch>\r\n        <Switch>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            render={props => <Main filteredMovies={filteredMovies} />}\r\n          />\r\n          <Route path=\"/filmpage/\" render={props => <FilmPage {...props} />} />\r\n        </Switch>\r\n      </>\r\n    )}\r\n  </StateContext.Consumer>\r\n);\r\n\r\nexport default RoutingComponent;\r\n","import React, { Component } from \"react\";\r\nimport Loading from \"./UI/Loading\";\r\nimport Footer from \"./Footer/Footer\";\r\nimport Body from \"./UI/Body\";\r\nimport WidthContainer from \"./UI/WidthContainer\";\r\nimport { sortByRelevance } from \"./utilities/sorting\";\r\nimport defaultAvatar from \"./img/default-avatar.jpg\";\r\nimport { debounce } from \"lodash\";\r\nimport Helmet from \"react-helmet\";\r\nimport apiQueries from \"./utilities/apiQueries\";\r\nimport RoutingComponent from \"./RoutingComponent\";\r\nimport StateContext from \"./StateContext\";\r\n\r\nconst Error = React.lazy(() => import(\"./UI/Error\"));\r\n\r\nclass App extends Component {\r\n  state = {\r\n    loading: true,\r\n    error: { isErrorHappened: false, details: \"\", message: \"\" },\r\n\r\n    userAuthorized: false,\r\n    userAvatar: null,\r\n    defaultAvatar: defaultAvatar,\r\n    userName: null,\r\n    defaultName: \"The Guest\",\r\n\r\n    genres: null,\r\n    sortingOptions: [\"popularity\", \"votes\", \"rating\", \"date\"],\r\n    sortBy: \"popularity\",\r\n    direction: \"descending\",\r\n    filteredMovies: [],\r\n    filteredMoviesPage: 1,\r\n\r\n    bestMovies: [],\r\n    bestMoviesPage: 1,\r\n\r\n    searchValue: \"\",\r\n    searching: false,\r\n    matchFilms: null,\r\n\r\n    favorites: [],\r\n\r\n    openedMenuName: \"\",\r\n    menuIsOpen: false,\r\n\r\n    nightModeIsOn: false,\r\n\r\n    filmData: {},\r\n    similarFilms: [],\r\n    similarFilmsPage: 1,\r\n\r\n    methods: {\r\n      autoLoading: (target, func) => {\r\n        this.autoLoading(target, func);\r\n      },\r\n      getSortingOption: () => {\r\n        this.getSortingOption();\r\n      },\r\n      toggleGenre: event => {\r\n        this.toggleGenre(event);\r\n      },\r\n      toggleSorting: event => {\r\n        this.toggleSorting(event);\r\n      },\r\n      toggleDirection: event => {\r\n        this.toggleDirection(event);\r\n      },\r\n      getBestMovies: () => {\r\n        this.getBestMovies();\r\n      },\r\n      getFilteredMovies: () => {\r\n        this.getFilteredMovies();\r\n      },\r\n      getMoreFilteredMovies: () => {\r\n        this.getMoreFilteredMovies();\r\n      },\r\n      searchFilms: () => {\r\n        this.searchFilms();\r\n      },\r\n      toggleFilmToFav: filmData => {\r\n        this.toggleFilmToFav(filmData);\r\n      },\r\n      loadFilmData: filmId => {\r\n        this.loadFilmData(filmId);\r\n      },\r\n      getSimilarFilms: (filmId, prevFilmId) => {\r\n        this.getSimilarFilms(filmId, prevFilmId);\r\n      },\r\n      changeSearchValue: event => {\r\n        this.changeSearchValue(event);\r\n      },\r\n      clearSearchValue: input => {\r\n        this.clearSearchValue(input);\r\n      },\r\n      enableSearching: () => {\r\n        this.enableSearching();\r\n      },\r\n      disableSearching: () => {\r\n        this.disableSearching();\r\n      },\r\n      toggleMenu: event => {\r\n        this.toggleMenu(event);\r\n      },\r\n      toggleNightMode: event => {\r\n        this.toggleNightMode(event);\r\n      },\r\n      deleteFilmData: () => {\r\n        this.deleteFilmData();\r\n      }\r\n    }\r\n  };\r\n\r\n  getSortingOption = () => {\r\n    let sortBy;\r\n    if (this.state.sortBy === \"popularity\") {\r\n      sortBy =\r\n        this.state.direction === \"descending\"\r\n          ? \"popularity.desc\"\r\n          : \"popularity.asc\";\r\n    }\r\n    if (this.state.sortBy === \"date\") {\r\n      sortBy =\r\n        this.state.direction === \"descending\"\r\n          ? \"release_date.desc\"\r\n          : \"release_date.asc\";\r\n    }\r\n    if (this.state.sortBy === \"rating\") {\r\n      sortBy =\r\n        this.state.direction === \"descending\"\r\n          ? \"vote_average.desc\"\r\n          : \"vote_average.asc\";\r\n    }\r\n    if (this.state.sortBy === \"votes\") {\r\n      sortBy =\r\n        this.state.direction === \"descending\"\r\n          ? \"vote_count.desc\"\r\n          : \"vote_count.asc\";\r\n    }\r\n    return sortBy;\r\n  };\r\n\r\n  getGenres = () => {\r\n    fetch(apiQueries.getGenresQuery())\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(({ genres }) => {\r\n        let reducedGenres = genres.reduce((value, item) => {\r\n          value[item.name] = { id: item.id, enabled: false };\r\n          return value;\r\n        }, {});\r\n        this.setState({ genres: reducedGenres });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          error: {\r\n            isErrorHappened: true,\r\n            details: error,\r\n            message: \"Oops! Failed to load data :(\"\r\n          }\r\n        });\r\n        console.log(\"Error on load genres:\", error);\r\n      });\r\n  };\r\n\r\n  toggleGenre = event => {\r\n    let toggledGenre = event.target.name;\r\n    this.setState({\r\n      genres: {\r\n        ...this.state.genres,\r\n        [toggledGenre]: {\r\n          ...this.state.genres[toggledGenre],\r\n          enabled: !this.state.genres[toggledGenre].enabled\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  toggleSorting = event => {\r\n    this.setState({ sortBy: event.target.value });\r\n  };\r\n\r\n  toggleDirection = event => {\r\n    this.setState({ direction: event.target.value });\r\n  };\r\n\r\n  getBestMovies = () => {\r\n    this.setState({ loading: true });\r\n    fetch(apiQueries.getBestFilmsQuery(this.state.bestMoviesPage))\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(({ results }) => {\r\n        this.setState(prevState => ({\r\n          bestMovies: [...prevState.bestMovies].concat(results),\r\n          bestMoviesPage: ++prevState.bestMoviesPage,\r\n          loading: false\r\n        }));\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          error: {\r\n            isErrorHappened: true,\r\n            details: error,\r\n            message: \"Oops! Failed to load data :(\"\r\n          }\r\n        });\r\n        console.log(\"Error on load best movies:\", error);\r\n      });\r\n  };\r\n\r\n  getFilteredMovies = () => {\r\n    this.setState({ loading: true });\r\n    let enabledGenres = [];\r\n    for (let key in this.state.genres) {\r\n      if (this.state.genres[key].enabled === true) {\r\n        enabledGenres = [...enabledGenres, this.state.genres[key].id];\r\n      }\r\n    }\r\n    if (enabledGenres.length > 0) {\r\n      let page = 1;\r\n      let genresIds = encodeURIComponent(enabledGenres.join(\",\"));\r\n      let sortBy = this.getSortingOption();\r\n      fetch(apiQueries.getFilteredFilmsQuery(sortBy, page, genresIds))\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(obj => {\r\n          let filteredMovies = obj.results;\r\n          this.setState({\r\n            filteredMovies: filteredMovies,\r\n            filteredMoviesPage: page,\r\n            loading: false\r\n          });\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            error: {\r\n              isErrorHappened: true,\r\n              details: error,\r\n              message: \"Oops! Failed to load data :(\"\r\n            }\r\n          });\r\n          console.log(\"Error on load filtered movies:\", error);\r\n        });\r\n    } else if (enabledGenres.length < 1) {\r\n      this.setState({\r\n        filteredMovies: [],\r\n        filteredMoviesPage: 1,\r\n        loading: false\r\n      });\r\n    }\r\n  };\r\n\r\n  getMoreFilteredMovies = () => {\r\n    this.setState({ loading: true });\r\n    let enabledGenres = [];\r\n    for (let key in this.state.genres) {\r\n      if (this.state.genres[key].enabled === true) {\r\n        enabledGenres = [...enabledGenres, this.state.genres[key].id];\r\n      }\r\n    }\r\n    let genresIds = encodeURIComponent(enabledGenres.join(\",\")),\r\n      page = this.state.filteredMoviesPage,\r\n      sortBy = this.getSortingOption();\r\n    fetch(apiQueries.getFilteredFilmsQuery(sortBy, ++page, genresIds))\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(({ results }) => {\r\n        this.setState(prevState => ({\r\n          filteredMovies: [...prevState.filteredMovies].concat(results),\r\n          filteredMoviesPage: ++prevState.filteredMoviesPage,\r\n          loading: false\r\n        }));\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          error: {\r\n            isErrorHappened: true,\r\n            details: error,\r\n            message: \"Oops! Failed to load data :(\"\r\n          }\r\n        });\r\n        console.log(\"Error on load additional filtered movies:\", error);\r\n      });\r\n  };\r\n\r\n  searchFilms = debounce(() => {\r\n    if (this.state.searchValue) {\r\n      this.setState({ loading: true });\r\n      let string = encodeURIComponent(this.state.searchValue);\r\n      let lang = \"en-US\";\r\n      fetch(apiQueries.getSearchByStringQuery(lang, string))\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(obj => {\r\n          let films = sortByRelevance(obj);\r\n          this.setState({\r\n            matchFilms: films,\r\n            loading: false\r\n          });\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            error: {\r\n              isErrorHappened: true,\r\n              details: error,\r\n              message: \"Oops! Failed to load data :(\"\r\n            }\r\n          });\r\n          console.log(\"Error on search films:\", error);\r\n        });\r\n    }\r\n    if (!this.state.searchValue) {\r\n      this.setState({\r\n        matchFilms: [],\r\n        loading: false\r\n      });\r\n    }\r\n  }, 1500);\r\n\r\n  getFavFilms = () => {\r\n    if (localStorage[\"favorites\"]) {\r\n      this.setState({ favorites: [...JSON.parse(localStorage[\"favorites\"])] });\r\n    }\r\n  };\r\n\r\n  toggleFilmToFav = filmData => {\r\n    let filmId = filmData.id,\r\n      fav = this.state.favorites;\r\n    if (!fav.some(film => film.id === filmId)) {\r\n      let newFav = [{ ...filmData }, ...this.state.favorites];\r\n      this.setState({ favorites: newFav });\r\n      localStorage[\"favorites\"] = JSON.stringify(newFav);\r\n    } else {\r\n      let newFav = fav.filter(film => film.id !== filmId);\r\n      this.setState({ favorites: newFav });\r\n      localStorage[\"favorites\"] = JSON.stringify(newFav);\r\n    }\r\n  };\r\n\r\n  loadFilmData = filmId => {\r\n    let stateFilmId = this.state.filmData.id;\r\n    if (filmId !== stateFilmId) {\r\n      this.setState({ loading: true, searching: false });\r\n      fetch(apiQueries.getFilmDataQuery(filmId))\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(obj => {\r\n          this.setState({ filmData: obj, loading: false });\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            error: {\r\n              isErrorHappened: true,\r\n              details: error,\r\n              message: \"Oops! Failed to load data :(\"\r\n            }\r\n          });\r\n          console.log(\"Error on load film data:\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  deleteFilmData = () => {\r\n    this.setState({ filmData: {} });\r\n  };\r\n\r\n  getSimilarFilms = (filmId, prevFilmId) => {\r\n    this.setState({ loading: true });\r\n    let page = filmId === prevFilmId ? this.state.similarFilmsPage + 1 : 1;\r\n    fetch(apiQueries.getSimilarFilmsQuery(filmId, page))\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(({ results }) => {\r\n        if (filmId === prevFilmId) {\r\n          this.setState(prevState => ({\r\n            similarFilms: [...prevState.similarFilms].concat(results),\r\n            similarFilmsPage: ++prevState.similarFilmsPage,\r\n            loading: false\r\n          }));\r\n        } else {\r\n          this.setState({\r\n            similarFilms: results,\r\n            similarFilmsPage: 1,\r\n            loading: false\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          error: {\r\n            isErrorHappened: true,\r\n            details: error,\r\n            message: \"Oops! Failed to load data :(\"\r\n          }\r\n        });\r\n        console.log(\"Error on load similar films:\", error);\r\n      });\r\n  };\r\n\r\n  changeSearchValue = event => {\r\n    event.preventDefault();\r\n    const value = event.target.value;\r\n    this.setState({ searchValue: value });\r\n  };\r\n\r\n  clearSearchValue = input => {\r\n    input.focus();\r\n    this.setState({ searchValue: \"\", matchFilms: null });\r\n  };\r\n\r\n  enableSearching = () => {\r\n    this.setState({ searching: true });\r\n  };\r\n\r\n  disableSearching = () => {\r\n    this.setState({ searching: false });\r\n  };\r\n\r\n  toggleMenu = event => {\r\n    event.preventDefault();\r\n    event.target.name === this.state.openedMenuName\r\n      ? this.setState({\r\n          menuIsOpen: !this.state.menuIsOpen\r\n        })\r\n      : this.setState({\r\n          openedMenuName: event.target.name,\r\n          menuIsOpen: true\r\n        });\r\n  };\r\n\r\n  toggleNightMode = event => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      nightModeIsOn: !this.state.nightModeIsOn\r\n    });\r\n  };\r\n\r\n  autoLoading = (target, func) => {\r\n    if (target.scrollHeight - (target.scrollTop + target.offsetHeight) < 240)\r\n      func();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getGenres();\r\n    this.getFavFilms();\r\n    this.getBestMovies();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Helmet\r\n          title={\r\n            ~window.location.pathname.indexOf(\"filmpage\")\r\n              ? this.state.filmData.title\r\n              : this.state.openedMenuName === \"Profile\" && this.state.menuIsOpen\r\n              ? \"Profile\"\r\n              : \"Moviesearcher\"\r\n          }\r\n        />\r\n        <StateContext.Provider value={this.state}>\r\n          <Body nightmode={this.state.nightModeIsOn}>\r\n            <WidthContainer>\r\n              {this.state.loading && (\r\n                <Loading nightmode={this.state.nightModeIsOn}>\r\n                  Loading...\r\n                </Loading>\r\n              )}\r\n              {this.state.error.isErrorHappened && (\r\n                <Error message={this.state.error.message} />\r\n              )}\r\n              {!this.state.error.isErrorHappened && <RoutingComponent />}\r\n              <Footer nightmode={this.state.nightModeIsOn} />\r\n            </WidthContainer>\r\n          </Body>\r\n        </StateContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}