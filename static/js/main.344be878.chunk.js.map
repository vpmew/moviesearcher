{"version":3,"sources":["img/img404.jpg","img/heart-off-light.svg","img/heart-off-dark.svg","img/heart-on.svg","img/default-avatar.jpg","img/nm-light.svg","img/nm-dark.svg","img/home-ico-light.svg","img/home-ico-dark.svg","utilities/variables.js","UI/Loading.js","Footer/Footer.js","UI/Body.js","UI/WidthContainer.js","utilities/sorting.js","utilities/apiQueries.js","UI/FilmCard.js","UI/FilmList.js","Header/Search.js","Header/SearchBlock.js","UI/ButtonsBlock.js","UI/Button.js","UI/InfoMessage.js","StateContext.js","Header/Filters.js","UI/Avatar.js","UI/UserName.js","Header/Favorites.js","Header/Profile.js","Header/Menu.js","Header/MainHeader.js","Header/SideHeader.js","Main/BestFilms.js","Main/FilteredFilms.js","Main/Main.js","FilmPage/SimilarFilms.js","FilmPage/Rating.js","FilmPage/Tagline.js","FilmPage/FavButton.js","FilmPage/FilmPage.js","RoutingComponent.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","variables","version","widthS","widthM","widthL","backgroundColorLight","backgroundColorDark","fontColorLight","fontColorDark","fontSizeS","lineHeightS","fontSizeM","lineHeightM","fontSizeL","lineHeightL","Loading","styled","_ref","children","className","react_default","a","createElement","_templateObject","props","nightmode","Footer","href","concat","Footer_templateObject","Body","div","Body_templateObject","WidthContainer","WidthContainer_templateObject","sortByRelevance","_ref2","results","Object","toConsumableArray","sort","b","vote_count","vote_average","reverse","queries","getGenresQuery","getBestFilmsQuery","pageNumber","getFilteredFilmsQuery","sortBy","genresIds","getSearchByStringQuery","lang","string","getFilmDataQuery","filmId","getSimilarFilmsQuery","page","FilmCard","year","id","title","poster_path","release_date","genres_ids","genres","genresFromFav","genresOfFilm","toggleFilmToFav","viewWidth","document","documentElement","clientWidth","titleSymbolRestriction","Number","parseInt","genresSymbolRestriction","Date","getFullYear","split","key","indexOf","String","join","length","slice","croppedTitle","src","img404","alt","react_router_dom","to","dateTime","onClick","FilmCard_templateObject","favorites","some","film","heartIcoActive","heartIcoLight","heartIcoDark","FilmListStructure","React","forwardRef","ref","matchFilms","autoLoading","autoLoadingFunction","debouncedAutoLoading","debounce","onScroll","event","persist","target","map","UI_FilmCard","genre_ids","FilmList","FilmList_templateObject","Search","input","Search_templateObject","SearchBlock","_input","searching","searchValue","loading","methods","disableSearching","Header_Search","placeholder","value","onChange","changeSearchValue","setTimeout","searchFilms","enableSearching","onKeyDown","e","keyCode","blur","type","clearSearchValue","UI_FilmList","SearchBlock_templateObject","ButtonBlock","ButtonsBlock_templateObject","width","justify","Button","button","Button_templateObject","name","isActive","menuIsOpen","openedMenuName","fontSize","image","nmLight","nmDark","InfoMessage","InfoMessage_templateObject","color","margin","StateContext","createContext","Filters","src_StateContext","Consumer","sortingOptions","direction","genreList","keys","genresIsChecked","enabled","getFilteredMoviesWithDebounce","getFilteredMovies","UI_InfoMessage","replace","toLowerCase","toggleGenre","checked","option","toggleSorting","arr","toUpperCase","toggleDirection","Filters_templateObject","Avatar","img","Avatar_templateObject","UserName","UserName_templateObject","Favorites","Favorites_templateObject","UserProfile","userName","userAuthorized","userAvatar","defaultAvatar","defaultName","nightModeIsOn","UI_Avatar","UI_UserName","Header_Favorites","Profile_templateObject","Menu","Header_Filters","Profile","MainHeader","Header_SearchBlock","ButtonsBlock","UI_Button","toggleMenu","toggleNightMode","Header_Menu","MainHeader_templateObject","SideHeader","as","Link","homeIcoLight","homeIcoDark","SideHeader_templateObject","BestFilms","bestMovies","getBestMovies","BestFilms_templateObject","FilteredFilms","filteredMovies","getMoreFilteredMovies","FilteredFilms_templateObject","Main","Main_FilteredFilms","Main_BestFilms","Main_templateObject","SimilarFilmsStructure","similarFilms","prevId","getSimilarFilms","SimilarFilms","SimilarFilms_templateObject","Rating","voteAverage","voteCount","Rating_templateObject","Tagline","Tagline_templateObject","FavButton","FavButton_templateObject","filmData","FilmPageStructure","createRef","window","scrollTo","this","context","loadFilmData","location","pathname","prevProps","current","scrollTop","_this$context","convertMoney","amount","symbols","s","i","genresList","genre","releaseDate","date","day","getDay","month","getMonth","convertDate","countries","production_countries","country","companies","production_companies","comp","budget","revenue","homepage","runtime","hours","Math","floor","minutes","convertRuntime","tagline","FilmPage_Tagline","FilmPage_Rating","FilmPage_FavButton","overview","Boolean","FilmPage_SimilarFilms","Component","contextType","FilmPage","FilmPage_templateObject","RoutingComponent","Fragment","react_router","path","exact","component","render","Main_Main","FilmPage_FilmPage","App","state","filteredMoviesPage","bestMoviesPage","similarFilmsPage","func","_this","getSortingOption","prevFilmId","getGenres","fetch","apiQueries","then","response","json","reducedGenres","reduce","item","setState","catch","error","alert","toggledGenre","objectSpread","defineProperty","prevState","enabledGenres","encodeURIComponent","obj","_ref3","films","getFavFilms","localStorage","JSON","parse","fav","newFav","filter","stringify","_ref4","preventDefault","focus","scrollHeight","offsetHeight","Helmet_default","Provider","UI_Body","UI_WidthContainer","UI_Loading","src_RoutingComponent","Footer_Footer","ReactDOM","basename","process","src_App","getElementById"],"mappings":"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","file":"static/js/main.344be878.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img404.b5878b22.jpg\";","module.exports = __webpack_public_path__ + \"static/media/heart-off-light.5d17a3da.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-off-dark.e6484ba2.svg\";","module.exports = __webpack_public_path__ + \"static/media/heart-on.a8f9ebb6.svg\";","module.exports = __webpack_public_path__ + \"static/media/default-avatar.e5bc1ca7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nm-light.53064712.svg\";","module.exports = __webpack_public_path__ + \"static/media/nm-dark.db93f0cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/home-ico-light.f5214838.svg\";","module.exports = __webpack_public_path__ + \"static/media/home-ico-dark.ffa71548.svg\";","const variables = {\r\n  version: \"2.0.0\",\r\n\r\n  widthS: \"320px\",\r\n  widthM: \"768px\",\r\n  widthL: \"991px\",\r\n\r\n  backgroundColorLight: \"#E9F7F9\",\r\n  backgroundColorDark: \"#0C2427\",\r\n  fontColorLight: \"#FFE4AA\",\r\n  fontColorDark: \"#0C2427\",\r\n\r\n  fontSizeS: \"14px\",\r\n  lineHeightS: \"20px\",\r\n  fontSizeM: \"22px\",\r\n  lineHeightM: \"28px\",\r\n  fontSizeL: \"22px\",\r\n  lineHeightL: \"28px\"\r\n};\r\n\r\nexport default variables;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst LoadingStructure = ({ children, className }) => (\r\n  <div className={className}>\r\n    <div className=\"box\">\r\n      <span>{children}</span>\r\n    </div>\r\n  </div>\r\n);\r\nconst Loading = styled(LoadingStructure)`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgba(0, 0, 0, 0.3);\r\n  z-index: 3;\r\n\r\n  & .box {\r\n    display: flex;\r\n    position: fixed;\r\n    z-index: 4;\r\n    width: 120px;\r\n    height: 40px;\r\n    left: calc(50% - 60px);\r\n    top: calc(30% - 20px);\r\n    font-size: 1.4em;\r\n    font-weight: bold;\r\n    text-align: center;\r\n    background-color: ${props =>\r\n      props.nightmode\r\n        ? variables.backgroundColorDark\r\n        : variables.backgroundColorLight};\r\n    color: ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n    border: 2px solid\r\n      ${props =>\r\n        props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  }\r\n\r\n  & span {\r\n    margin: auto;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    & .box {\r\n      width: 160px;\r\n      height: 50px;\r\n      left: calc(50% - 80px);\r\n      top: calc(30% - 25px);\r\n      font-size: 1.2em;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst FooterStructure = ({ className }) => {\r\n  return (\r\n    <footer className={className}>\r\n      <p>\r\n        <span>\r\n          App created by <a href=\"https://vpmew.github.io/usercard/\">vpmew</a>.\r\n        </span>\r\n        <span>\r\n          Database provided by <a href=\"https://www.themoviedb.org/\">TMDb</a>.\r\n        </span>\r\n        <span className=\"version\">{`Version: ${variables.version}`}</span>\r\n      </p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nconst Footer = styled(FooterStructure)`\r\n  position: relative;\r\n  padding: 20px 0;\r\n  margin-top: auto;\r\n\r\n  & p {\r\n    margin: 0;\r\n  }\r\n\r\n  & span {\r\n    display: block;\r\n    text-align: center;\r\n    margin-bottom: 5px;\r\n  }\r\n\r\n  & .version {\r\n    font-size: 0.8em;\r\n  }\r\n\r\n  & a {\r\n    position: relative;\r\n    font-weight: bold;\r\n    text-decoration: none;\r\n    color: ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n\r\n    &::before {\r\n      display: none;\r\n      content: \"\";\r\n      position: absolute;\r\n      left: 0;\r\n      right: 0;\r\n      bottom: 0;\r\n      height: 2px;\r\n\r\n      background-color: ${props =>\r\n        props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n    }\r\n\r\n    &:hover::before {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    height: 2px;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    background-color: lightgrey;\r\n  }\r\n`;\r\n\r\nexport default Footer;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst Body = styled.div`\r\n  background-color: ${props =>\r\n    props.nightmode\r\n      ? variables.backgroundColorDark\r\n      : variables.backgroundColorLight};\r\n  color: ${props =>\r\n    props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  font-family: \"Monda\", \"Arial\", sans-serif;\r\n  font-size: ${variables.fontSizeS};\r\n  line-height: ${variables.lineHeightS};\r\n\r\n  box-sizing: border-box;\r\n  & *,\r\n  *::before,\r\n  *::after {\r\n    box-sizing: inherit;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    font-size: ${variables.fontSizeM};\r\n    line-height: ${variables.lineHeightM};\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    font-size: ${variables.fontSizeL};\r\n    line-height: ${variables.lineHeightL};\r\n  }\r\n`;\r\n\r\nexport default Body;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst WidthContainer = styled.div`\r\n  width: ${variables.widthS};\r\n  margin: 0 auto;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-flow: column;\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: ${variables.widthM};\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    width: ${variables.widthL};\r\n  }\r\n`;\r\n\r\nexport default WidthContainer;\r\n","export const sortByPopularity = ({ results }) => {\r\n  let sortedMovies = [...results]\r\n    .sort((a, b) => {\r\n      return a.popularity - b.popularity;\r\n    })\r\n    .reverse();\r\n  return sortedMovies;\r\n};\r\n\r\nexport const sortByRelevance = ({ results }) => {\r\n  let sortedMovies = [...results]\r\n    .sort((a, b) => {\r\n      return (\r\n        a.vote_count / 1000 +\r\n        a.vote_average -\r\n        (b.vote_count / 1000 + b.vote_average)\r\n      );\r\n    })\r\n    .reverse();\r\n  return sortedMovies;\r\n};\r\n","const queries = {\r\n  getGenresQuery() {\r\n    return `https://api.themoviedb.org/3/genre/movie/list?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=en-US`;\r\n  },\r\n  getBestFilmsQuery(pageNumber) {\r\n    return `https://api.themoviedb.org/3/movie/top_rated?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=en-US&page=${pageNumber}`;\r\n  },\r\n  getFilteredFilmsQuery(sortBy, pageNumber, genresIds) {\r\n    return `https://api.themoviedb.org/3/discover/movie?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=en-US&sort_by=${sortBy}&include_adult=false&include_video=false&page=${pageNumber}&with_genres=${genresIds}`;\r\n  },\r\n  getSearchByStringQuery(lang, string) {\r\n    return `https://api.themoviedb.org/3/search/movie?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=${lang}&query=${string}&page=1&include_adult=false`;\r\n  },\r\n  getFilmDataQuery(filmId) {\r\n    return `https://api.themoviedb.org/3/movie/${filmId}?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=en-US`;\r\n  },\r\n  getSimilarFilmsQuery(filmId, page) {\r\n    return `https://api.themoviedb.org/3/movie/${filmId}/similar?api_key=7eab7ddc9f76337597b66b8eae0b15a9&language=en-US&page=${page}`;\r\n  }\r\n};\r\n\r\nexport default queries;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport img404 from \"../img/img404.jpg\";\r\nimport variables from \"../utilities/variables\";\r\nimport heartIcoLight from \"../img/heart-off-light.svg\";\r\nimport heartIcoDark from \"../img/heart-off-dark.svg\";\r\nimport heartIcoActive from \"../img/heart-on.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst FilmCardStructure = ({\r\n  id,\r\n  title,\r\n  poster_path,\r\n  className,\r\n  release_date,\r\n  vote_average,\r\n  vote_count,\r\n  genres_ids,\r\n  genres,\r\n  genresOfFilm: genresFromFav,\r\n  toggleFilmToFav\r\n}) => {\r\n  let viewWidth = document.documentElement.clientWidth;\r\n  let releaseDate, year;\r\n  let titleSymbolRestriction =\r\n    viewWidth <= Number.parseInt(variables.widthM)\r\n      ? 35\r\n      : viewWidth <= Number.parseInt(variables.widthL)\r\n      ? 40\r\n      : 45;\r\n  let genresSymbolRestriction =\r\n    viewWidth <= Number.parseInt(variables.widthM)\r\n      ? 40\r\n      : viewWidth <= Number.parseInt(variables.widthL)\r\n      ? 60\r\n      : 65;\r\n  if (release_date) {\r\n    releaseDate = new Date(release_date);\r\n    year = releaseDate.getFullYear();\r\n  }\r\n\r\n  let genresOfFilm = [];\r\n  if (genresFromFav) {\r\n    genresOfFilm = genresFromFav.split(\", \");\r\n  } else if (genres_ids) {\r\n    for (let key in genres) {\r\n      if (~genres_ids.indexOf(genres[key].id)) {\r\n        genresOfFilm = [...genresOfFilm, String(key)];\r\n      }\r\n    }\r\n  }\r\n\r\n  if (genresOfFilm.join(\", \").length > genresSymbolRestriction) {\r\n    genresOfFilm =\r\n      genresOfFilm.join(\", \").slice(0, genresSymbolRestriction - 3) + \"...\";\r\n  } else {\r\n    genresOfFilm = genresOfFilm.join(\", \");\r\n  }\r\n\r\n  let croppedTitle = null;\r\n  if (title.length > titleSymbolRestriction) {\r\n    croppedTitle = title.slice(0, titleSymbolRestriction - 3) + \"...\";\r\n  }\r\n\r\n  return (\r\n    <li className={className}>\r\n      <div className=\"poster\">\r\n        <img\r\n          src={\r\n            poster_path\r\n              ? `https://image.tmdb.org/t/p/w400/${poster_path}`\r\n              : img404\r\n          }\r\n          alt={title}\r\n        />\r\n      </div>\r\n      <p>\r\n        {title ? (\r\n          <Link to={`/filmpage/${id}`}>\r\n            <span className=\"title\">{croppedTitle ? croppedTitle : title}</span>\r\n          </Link>\r\n        ) : (\r\n          \"No Title\"\r\n        )}\r\n        {genresOfFilm.length > 0 ? (\r\n          <span className=\"genres\">{genresOfFilm}</span>\r\n        ) : null}\r\n        {release_date ? (\r\n          <time className=\"date\" dateTime={release_date}>\r\n            {year}\r\n          </time>\r\n        ) : null}\r\n        <span className=\"wrapper\">\r\n          {vote_average ? (\r\n            <span className=\"vote-avg\">\r\n              {String(vote_average).length === 1\r\n                ? [...String(vote_average).split(\"\"), \".\", \"0\"].join(\"\")\r\n                : vote_average}\r\n            </span>\r\n          ) : null}\r\n          {vote_count ? (\r\n            <span className=\"vote-count\">({vote_count} votes)</span>\r\n          ) : null}\r\n        </span>\r\n      </p>\r\n      <button\r\n        className=\"toFav\"\r\n        onClick={() => {\r\n          toggleFilmToFav({\r\n            id,\r\n            poster_path,\r\n            title,\r\n            release_date,\r\n            vote_average,\r\n            vote_count,\r\n            genresOfFilm\r\n          });\r\n        }}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nconst FilmCard = styled(FilmCardStructure)`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 120px;\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  border-bottom: 2px solid\r\n    ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n\r\n  & .poster {\r\n    width: 25%;\r\n    overflow: hidden;\r\n    background-image: ${props =>\r\n      props.poster_path\r\n        ? `url(https://image.tmdb.org/t/p/w400/${props.poster_path})`\r\n        : `url(${img404})`};\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n\r\n    & img {\r\n      display: none;\r\n      width: 100%;\r\n      height: auto;\r\n    }\r\n  }\r\n\r\n  & p {\r\n    position: relative;\r\n    width: 75%;\r\n    max-height: 100%;\r\n    overflow: hidden;\r\n    display: flex;\r\n    flex-flow: column wrap;\r\n    flex-grow: 1;\r\n    align-self: stretch;\r\n    margin: 0;\r\n\r\n    & a {\r\n      width: calc(100% - 40px);\r\n      padding-left: 10px;\r\n      padding-top: 5px;\r\n      color: inherit;\r\n      font-size: 1.2em;\r\n      font-weight: bold;\r\n      text-decoration: none;\r\n\r\n      &:hover {\r\n        text-decoration: underline;\r\n      }\r\n      max-height: 40%;\r\n    }\r\n\r\n    & .genres {\r\n      font-style: italic;\r\n      width: 80%;\r\n      padding-left: 10px;\r\n      padding-right: 10px;\r\n      font-size: 0.9em;\r\n      max-height: 40%;\r\n    }\r\n\r\n    & .date {\r\n      padding-left: 10px;\r\n      max-height: 20%;\r\n    }\r\n\r\n    & .wrapper {\r\n      position: absolute;\r\n      right: 0;\r\n      bottom: 0;\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: flex-end;\r\n\r\n      & .vote-avg {\r\n        background-color: ${props =>\r\n          props.nightmode ? \"transparent\" : variables.fontColorDark};\r\n        font-size: 1.8em;\r\n        padding: 5px;\r\n        color: ${props =>\r\n          props.vote_average >= 7\r\n            ? \"mediumseagreen\"\r\n            : props.vote_average >= 5\r\n            ? \"#f3f300\"\r\n            : props.vote_average >= 3\r\n            ? \"orange\"\r\n            : \"orangered\"};\r\n      }\r\n\r\n      & .vote-count {\r\n        margin-left: 10px;\r\n        align-self: flex-end;\r\n        font-size: 0.7em;\r\n      }\r\n    }\r\n  }\r\n\r\n  & .toFav {\r\n    position: absolute;\r\n    content: \"\";\r\n    right: 0;\r\n    top: 0;\r\n    width: 40px;\r\n    height: 40px;\r\n    padding: 0;\r\n    border: none;\r\n    background-repeat: no-repeat;\r\n    background-size: 50% 50%;\r\n    background-position: 50% 50%;\r\n    background-color: transparent;\r\n    background-image: ${props =>\r\n      props.favorites.some(film => Number(film.id) === Number(props.id))\r\n        ? `url(${heartIcoActive})`\r\n        : props.nightmode\r\n        ? `url(${heartIcoLight})`\r\n        : `url(${heartIcoDark})`};\r\n    cursor: pointer;\r\n    &:hover {\r\n      background-size: 60% 60%;\r\n      opacity: ${props =>\r\n        props.favorites.some(film => Number(film.id) === Number(props.id))\r\n          ? \"0.5\"\r\n          : \"1\"};\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    height: 120px;\r\n\r\n    & p {\r\n      & a {\r\n        width: calc(100% - 50px);\r\n        font-size: 0.9em;\r\n        line-height: 1.2em;\r\n      }\r\n\r\n      & .genres {\r\n        padding-top: 5px;\r\n        font-size: 0.7em;\r\n        line-height: 1.2em;\r\n      }\r\n\r\n      & .date {\r\n        padding-top: 5px;\r\n        font-size: 0.7em;\r\n        line-height: 1.2em;\r\n      }\r\n\r\n      & .wrapper {\r\n        & .vote-avg {\r\n          font-size: 1.6em;\r\n        }\r\n\r\n        & .vote-count {\r\n          font-size: 0.5em;\r\n        }\r\n      }\r\n    }\r\n    & .toFav {\r\n      width: 50px;\r\n      height: 50px;\r\n      background-size: 70% 70%;\r\n      background-position: 50% 50%;\r\n      &:hover {\r\n        background-size: 80% 80%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default FilmCard;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport FilmCard from \"./FilmCard\";\r\nimport variables from \"../utilities/variables\";\r\nimport { debounce } from \"lodash\";\r\n\r\nconst FilmListStructure = React.forwardRef(\r\n  (\r\n    {\r\n      matchFilms,\r\n      className,\r\n      nightmode,\r\n      genres,\r\n      toggleFilmToFav,\r\n      favorites,\r\n      autoLoading,\r\n      autoLoadingFunction\r\n    },\r\n    ref\r\n  ) => {\r\n    const debouncedAutoLoading = autoLoading\r\n      ? debounce(autoLoading, 500)\r\n      : null;\r\n    return (\r\n      <ul\r\n        ref={ref}\r\n        className={className}\r\n        onScroll={event => {\r\n          event.persist();\r\n          if (autoLoading)\r\n            debouncedAutoLoading(event.target, autoLoadingFunction);\r\n        }}\r\n      >\r\n        {matchFilms.map(film => (\r\n          <FilmCard\r\n            key={film.id}\r\n            id={film.id}\r\n            title={film.title}\r\n            poster_path={film.poster_path}\r\n            nightmode={nightmode}\r\n            release_date={film.release_date}\r\n            vote_average={film.vote_average}\r\n            vote_count={film.vote_count}\r\n            genres_ids={film.genre_ids}\r\n            genres={genres}\r\n            genresOfFilm={film.genresOfFilm}\r\n            toggleFilmToFav={toggleFilmToFav}\r\n            favorites={favorites}\r\n          />\r\n        ))}\r\n      </ul>\r\n    );\r\n  }\r\n);\r\n\r\nconst FilmList = styled(FilmListStructure)`\r\n  width: 100%;\r\n  overflow-y: scroll;\r\n  box-shadow: none;\r\n  border: 2px solid\r\n    ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  max-height: 600px;\r\n  background-color: ${props =>\r\n    props.nightmode\r\n      ? variables.backgroundColorDark\r\n      : variables.backgroundColorLight};\r\n  color: ${props =>\r\n    props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n  box-shadow: -1px 2px 3px 0\r\n    ${props =>\r\n      props.nightmode ? \"rgba(255, 255, 255, 0.6)\" : \"rgba(0, 0, 0, 0.4)\"};\r\n\r\n  & li:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nexport default FilmList;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst Search = styled.input`\r\n  width: 100%;\r\n  height: 40px;\r\n  border: 2px solid\r\n    ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  font-size: inherit;\r\n  font-family: inherit;\r\n  background-color: ${props =>\r\n    props.nightmode\r\n      ? variables.backgroundColorDark\r\n      : variables.backgroundColorLight};\r\n  color: inherit;\r\n  padding: 0 15px;\r\n  transition: box-shadow 0.1s ease;\r\n\r\n  &::placeholder {\r\n    color: ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: inset -1px 1px 3px 0 ${props => (props.nightmode ? \"rgba(255, 255, 255, 0.6)\" : \"rgba(0, 0, 0, 0.4)\")};\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    height: 45px;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    height: 50px;\r\n  }\r\n`;\r\n\r\nexport default Search;\r\n","import styled from \"styled-components\";\r\nimport React from \"react\";\r\nimport FilmList from \"../UI/FilmList\";\r\nimport Search from \"./Search\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst SearchBlockStructure = ({\r\n  className,\r\n  searching,\r\n  searchValue,\r\n  loading,\r\n  nightmode,\r\n  matchFilms,\r\n  genres,\r\n  favorites,\r\n  methods\r\n}) => {\r\n  let _input;\r\n  return (\r\n    <div className={className}>\r\n      {searching && searchValue && !loading ? (\r\n        <div className=\"overlay\" onClick={methods.disableSearching} />\r\n      ) : null}\r\n      <div className=\"wrapper\">\r\n        <Search\r\n          placeholder=\"Find a movie...\"\r\n          value={searchValue}\r\n          ref={input => (_input = input)}\r\n          onChange={event => {\r\n            methods.changeSearchValue(event);\r\n            setTimeout(() => methods.searchFilms(), 0);\r\n          }}\r\n          onClick={methods.enableSearching}\r\n          onKeyDown={e => {\r\n            if (e.keyCode === 27) {\r\n              methods.disableSearching();\r\n              e.target.blur();\r\n            }\r\n          }}\r\n          type=\"text\"\r\n          nightmode={nightmode}\r\n        />\r\n        {searching && searchValue ? (\r\n          <button\r\n            className=\"clearButton\"\r\n            type=\"button\"\r\n            onClick={() => methods.clearSearchValue(_input)}\r\n          >\r\n            Clear\r\n          </button>\r\n        ) : null}\r\n        {searching && matchFilms ? (\r\n          <FilmList\r\n            matchFilms={matchFilms}\r\n            nightmode={nightmode}\r\n            genres={genres}\r\n            toggleFilmToFav={methods.toggleFilmToFav}\r\n            favorites={favorites}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SearchBlock = styled(SearchBlockStructure)`\r\n  position: relative;\r\n  width: 100%;\r\n  margin-bottom: 10px;\r\n  z-index: 2;\r\n\r\n  & .overlay {\r\n    position: fixed;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    z-index: 1;\r\n    background: rgba(0, 0, 0, 0.3);\r\n  }\r\n\r\n  & .wrapper {\r\n    position: relative;\r\n    z-index: 2;\r\n  }\r\n\r\n  & .clearButton {\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 5px;\r\n    height: 30px;\r\n    width: 50px;\r\n    border: none;\r\n    background: transparent;\r\n    font-size: inherit;\r\n    color: inherit;\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n  }\r\n\r\n  & ul {\r\n    overflow-y: scroll;\r\n    position: absolute;\r\n    top: 100%;\r\n    right: 0;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: 60%;\r\n\r\n    & .clearButton {\r\n      top: 7px;\r\n      width: 70px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    width: 45%;\r\n    margin-top: auto;\r\n    margin-bottom: auto;\r\n\r\n    & .clearButton {\r\n      top: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SearchBlock;\r\n\r\n/* <button\r\n    className=\"closeButton\"\r\n    type=\"button\"\r\n    onClick={toggleSearching}\r\n  >\r\n    Close\r\n  </button> */\r\n\r\n/* & .closeButton {\r\n    position: absolute;\r\n    right: 10px;\r\n    top: 5px;\r\n    height: 30px;\r\n    width: 30px;\r\n    border: none;\r\n    background: transparent;\r\n    font-size: 0;\r\n    cursor: pointer;\r\n\r\n    &::before,\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 13px;\r\n      right: 0px;\r\n      width: 26px;\r\n      height: 5px;\r\n      border-radius: 1px;\r\n      background-color: ${props =>\r\n        props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n      transform: rotate(-45deg);\r\n    }\r\n\r\n    &::after {\r\n      transform: rotate(45deg);\r\n    }\r\n  } */\r\n","import styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst ButtonBlock = styled.div`\r\n  width: ${props => (props.width ? props.width : \"100%\")};\r\n  display: flex;\r\n  flex-shrink: 0;\r\n  justify-content: ${props =>\r\n    props.justify ? props.justify : \"space-between\"};\r\n\r\n  & *:nth-child(n + 2) {\r\n    margin-left: -2px;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: ${props => (props.width ? props.width : \"calc(40% + 2px)\")};\r\n    margin-left: -2px;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    width: ${props => (props.width ? props.width : \"45%\")};\r\n    margin-left: 0;\r\n  }\r\n`;\r\n\r\nexport default ButtonBlock;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\nimport nmLight from \"../img/nm-light.svg\";\r\nimport nmDark from \"../img/nm-dark.svg\";\r\n\r\nconst Button = styled.button`\r\n  width: ${props =>\r\n    props.width\r\n      ? props.width\r\n      : props.name === \"Night mode\"\r\n      ? \"calc(33% / 2)\"\r\n      : \"33%\"};\r\n  height: 40px;\r\n  cursor: pointer;\r\n  border: 2px solid\r\n    ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  color: ${props => {\r\n    let isActive = props.menuIsOpen && props.openedMenuName === props.name;\r\n    if (props.nightmode && isActive) {\r\n      return variables.fontColorDark;\r\n    } else if (props.nightmode && !isActive) {\r\n      return variables.fontColorLight;\r\n    } else if (!props.nightmode && isActive) {\r\n      return variables.backgroundColorLight;\r\n    } else if (!props.nightmode && !isActive) {\r\n      return variables.fontColorDark;\r\n    }\r\n  }};\r\n  font-size: ${props =>\r\n    props.fontSize\r\n      ? props.fontSize\r\n      : props.name === \"Night mode\"\r\n      ? \"0\"\r\n      : \"inherit\"};\r\n  font-family: inherit;\r\n  background-color: ${props => {\r\n    let isActive = props.menuIsOpen && props.openedMenuName === props.name;\r\n    if (props.nightmode && isActive) {\r\n      return variables.fontColorLight;\r\n    } else if (props.nightmode && !isActive) {\r\n      return \"transparent\";\r\n    } else if (!props.nightmode && isActive) {\r\n      return variables.backgroundColorDark;\r\n    } else if (!props.nightmode && !isActive) {\r\n      return \"transparent\";\r\n    }\r\n  }};\r\n  background-image: ${props =>\r\n    props.image\r\n      ? `url(${props.image})`\r\n      : props.name === \"Night mode\" && props.nightmode\r\n      ? `url(${nmLight})`\r\n      : props.name === \"Night mode\" && !props.nightmode\r\n      ? `url(${nmDark})`\r\n      : \"none\"};\r\n  background-size: 100% 70%;\r\n  background-position: 50% 50%;\r\n  background-repeat: no-repeat;\r\n  transition: box-shadow 0.1s ease;\r\n\r\n  &:hover {\r\n    box-shadow: -1px 2px 3px 0\r\n      ${props =>\r\n        props.nightmode ? \"rgba(255, 255, 255, 0.6)\" : \"rgba(0, 0, 0, 0.4)\"};\r\n  }\r\n\r\n  &:active {\r\n    color: ${props =>\r\n      props.nightmode\r\n        ? variables.fontColorDark\r\n        : variables.backgroundColorLight};\r\n    background-color: ${props =>\r\n      props.nightmode\r\n        ? variables.fontColorLight\r\n        : variables.backgroundColorDark};\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    height: 45px;\r\n    width: ${props =>\r\n      props.width\r\n        ? props.width\r\n        : props.name === \"Night mode\"\r\n        ? \"20%\"\r\n        : \"calc(40% + 2px)\"};\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    height: 50px;\r\n  }\r\n`;\r\n\r\nexport default Button;\r\n","import styled from \"styled-components\";\r\n\r\nconst InfoMessage = styled.p`\r\n  color: ${props => props.color};\r\n  font-weight: bold;\r\n  border: 2px solid ${props => props.color};\r\n  width: ${props => props.width};\r\n  padding: 5px 10px;\r\n  text-align: center;\r\n  margin: ${props => props.margin || \"auto\"};\r\n`;\r\n\r\nexport default InfoMessage;\r\n","import React from \"react\";\r\n\r\nconst StateContext = React.createContext();\r\nexport default StateContext;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\nimport InfoMessage from \"../UI/InfoMessage\";\r\nimport { debounce } from \"lodash\";\r\nimport StateContext from \"../StateContext\";\r\n\r\nconst FiltersStructure = ({ className }) => (\r\n  <StateContext.Consumer>\r\n    {({ genres, sortingOptions, sortBy, direction, methods }) => {\r\n      let genreList = Object.keys(genres);\r\n      let genresIsChecked = false;\r\n      for (let key in genres) {\r\n        if (genres[key].enabled === true) {\r\n          genresIsChecked = true;\r\n          break;\r\n        }\r\n      }\r\n      let getFilteredMoviesWithDebounce = debounce(\r\n        methods.getFilteredMovies,\r\n        1500\r\n      );\r\n      return (\r\n        <form className={className}>\r\n          {!genresIsChecked ? (\r\n            <InfoMessage color=\"orangered\" width=\"100%\" margin=\"0 auto 5px\">\r\n              Please, choose at least one genre to see results below.\r\n            </InfoMessage>\r\n          ) : null}\r\n          <fieldset className=\"genres\">\r\n            <legend>Genres:</legend>\r\n            <div className=\"fieldsetFlexFix\">\r\n              {genreList.map(name => (\r\n                <label\r\n                  className={`${name.replace(\" \", \"-\").toLowerCase()}`}\r\n                  key={genres[name].id}\r\n                >\r\n                  <input\r\n                    onChange={event => {\r\n                      methods.toggleGenre(event);\r\n                      getFilteredMoviesWithDebounce();\r\n                    }}\r\n                    type=\"checkbox\"\r\n                    name={name}\r\n                    checked={genres[name].enabled}\r\n                  />\r\n                  <span>{name}</span>\r\n                </label>\r\n              ))}\r\n            </div>\r\n          </fieldset>\r\n\r\n          <fieldset className=\"sort-by\">\r\n            <legend>Sort by:</legend>\r\n            <div className=\"fieldsetFlexFix\">\r\n              {sortingOptions.map(option => {\r\n                return (\r\n                  <label key={option}>\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"sortBy\"\r\n                      value={option}\r\n                      checked={option === sortBy}\r\n                      onChange={event => {\r\n                        methods.toggleSorting(event);\r\n                        setTimeout(() => methods.getFilteredMovies(), 0);\r\n                      }}\r\n                    />\r\n                    <span>\r\n                      {(option => {\r\n                        let arr = option.split(\"\");\r\n                        let str;\r\n                        arr[0] = arr[0].toUpperCase();\r\n                        str = arr.join(\"\");\r\n                        return str;\r\n                      })(option)}\r\n                    </span>\r\n                  </label>\r\n                );\r\n              })}\r\n            </div>\r\n          </fieldset>\r\n\r\n          <fieldset className=\"direction\">\r\n            <legend>Direction:</legend>\r\n            <div className=\"fieldsetFlexFix\">\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"direction\"\r\n                  value=\"ascending\"\r\n                  checked={direction === \"ascending\"}\r\n                  onChange={event => {\r\n                    methods.toggleDirection(event);\r\n                    setTimeout(() => methods.getFilteredMovies(), 0);\r\n                  }}\r\n                />\r\n                <span>Ascending</span>\r\n              </label>\r\n              <label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"direction\"\r\n                  value=\"descending\"\r\n                  checked={direction === \"descending\"}\r\n                  onChange={event => {\r\n                    methods.toggleDirection(event);\r\n                    setTimeout(() => methods.getFilteredMovies(), 0);\r\n                  }}\r\n                />\r\n                <span>Descending</span>\r\n              </label>\r\n            </div>\r\n          </fieldset>\r\n        </form>\r\n      );\r\n    }}\r\n  </StateContext.Consumer>\r\n);\r\n\r\nconst Filters = styled(FiltersStructure)`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  justify-content: space-between;\r\n  padding-top: 10px;\r\n\r\n  & input:not(:checked) ~ span:hover {\r\n    text-decoration: underline;\r\n  }\r\n\r\n  & fieldset {\r\n    margin: 0;\r\n    border: 2px solid\r\n      ${props =>\r\n        props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n\r\n    & legend {\r\n      font-size: 18px;\r\n      padding: 0 10px;\r\n    }\r\n\r\n    & label {\r\n      width: 100%;\r\n      height: 35px;\r\n    }\r\n\r\n    & div {\r\n      display: flex;\r\n      flex-direction: column;\r\n      flex-wrap: wrap;\r\n      height: 100%;\r\n      align-content: space-between;\r\n    }\r\n  }\r\n\r\n  & .genres {\r\n    width: 100%;\r\n    height: 380px;\r\n\r\n    & label {\r\n      width: 45%;\r\n\r\n      & input {\r\n        display: none;\r\n      }\r\n      & span {\r\n        position: relative;\r\n        display: block;\r\n        cursor: pointer;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-align: left;\r\n        padding-left: 25px;\r\n        padding-top: 6px;\r\n\r\n        &::before {\r\n          content: \"\";\r\n          position: absolute;\r\n          top: 8px;\r\n          left: 0;\r\n          width: 16px;\r\n          height: 16px;\r\n          border: 2px solid\r\n            ${props =>\r\n              props.nightmode\r\n                ? variables.fontColorLight\r\n                : variables.fontColorDark};\r\n          transition: transform 0.3s;\r\n        }\r\n      }\r\n      & input:checked ~ span::before {\r\n        width: 21px;\r\n        height: 10px;\r\n        border-width: 4px;\r\n        border-color: ${props =>\r\n          props.nightmode ? \"palegreen\" : \"mediumseagreen\"};\r\n        border-top: none;\r\n        border-right: none;\r\n        transform: rotate(-45deg);\r\n      }\r\n    }\r\n  }\r\n\r\n  & .sort-by,\r\n  .direction {\r\n    width: 48%;\r\n    margin: 10px 0 0;\r\n  }\r\n\r\n  & .sort-by {\r\n    & input {\r\n      display: none;\r\n    }\r\n\r\n    & span {\r\n      position: relative;\r\n      display: block;\r\n      cursor: pointer;\r\n      width: 100%;\r\n      height: 100%;\r\n      text-align: left;\r\n      padding-left: 25px;\r\n      padding-top: 6px;\r\n\r\n      &::before,\r\n      &::after {\r\n        position: absolute;\r\n        top: 8px;\r\n        left: 0;\r\n        content: \"\";\r\n        border-radius: 50%;\r\n      }\r\n\r\n      &::before {\r\n        width: 16px;\r\n        height: 16px;\r\n        border: 2px solid\r\n          ${props =>\r\n            props.nightmode\r\n              ? variables.fontColorLight\r\n              : variables.fontColorDark};\r\n      }\r\n      &::after {\r\n        width: 16px;\r\n        height: 16px;\r\n        background: ${props =>\r\n          props.nightmode ? \"palegreen\" : \"mediumseagreen\"};\r\n        transform: scale(0);\r\n        transition: transform 0.3s;\r\n      }\r\n    }\r\n\r\n    & input[type=\"radio\"]:checked ~ span::after {\r\n      transform: scale(1.1);\r\n    }\r\n  }\r\n\r\n  & .direction {\r\n    & input {\r\n      display: none;\r\n    }\r\n\r\n    & span {\r\n      position: relative;\r\n      display: block;\r\n      cursor: pointer;\r\n      width: 100%;\r\n      height: 100%;\r\n      text-align: left;\r\n      padding-left: 25px;\r\n      padding-top: 6px;\r\n\r\n      &::before {\r\n        position: absolute;\r\n        top: 8px;\r\n        left: 0;\r\n        content: \"\";\r\n        width: 0;\r\n        height: 0;\r\n        border-top: 16px solid\r\n          ${props =>\r\n            props.direction === \"descending\" && props.nightmode\r\n              ? \"palegreen\"\r\n              : props.direction === \"descending\" && !props.nightmode\r\n              ? \"mediumseagreen\"\r\n              : props.nightmode\r\n              ? variables.fontColorLight\r\n              : !props.nightmode\r\n              ? variables.fontColorDark\r\n              : \"transparent\"};\r\n        border-bottom: 0px solid transparent;\r\n        border-right: 10px solid transparent;\r\n        border-left: 10px solid transparent;\r\n\r\n        transition: ${props =>\r\n          props.direction === \"descending\" ? \"border-top 0.3s\" : \"none\"};\r\n      }\r\n    }\r\n\r\n    & label:first-child {\r\n      & span::before {\r\n        border-bottom: 16px solid\r\n          ${props =>\r\n            props.direction === \"ascending\" && props.nightmode\r\n              ? \"palegreen\"\r\n              : props.direction === \"ascending\" && !props.nightmode\r\n              ? \"mediumseagreen\"\r\n              : props.nightmode\r\n              ? variables.fontColorLight\r\n              : !props.nightmode\r\n              ? variables.fontColorDark\r\n              : \"transparent\"};\r\n        border-top: 0px solid transparent;\r\n\r\n        transition: ${props =>\r\n          props.direction === \"ascending\" ? \"border-bottom 0.3s\" : \"none\"};\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: 100%;\r\n    .genres {\r\n      width: 60%;\r\n      height: 400px;\r\n\r\n      & label span {\r\n        padding-top: 0;\r\n        line-height: 32px;\r\n      }\r\n    }\r\n    .sort-by {\r\n      width: 35%;\r\n      height: 240px;\r\n      margin: 0;\r\n\r\n      & label span {\r\n        padding-top: 0;\r\n        line-height: 32px;\r\n      }\r\n    }\r\n\r\n    .direction {\r\n      width: 35%;\r\n      height: 160px;\r\n      margin-top: -160px;\r\n      margin-left: 65%;\r\n\r\n      & label span {\r\n        padding-top: 0;\r\n        line-height: 32px;\r\n      }\r\n    }\r\n\r\n    & fieldset {\r\n      & legend {\r\n        font-size: inherit;\r\n      }\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    order: 3;\r\n\r\n    & .genres {\r\n      width: 65%;\r\n      height: 300px;\r\n\r\n      & label {\r\n        width: calc(100% / 3);\r\n      }\r\n    }\r\n\r\n    & .sort-by {\r\n      width: 30%;\r\n      height: 180px;\r\n    }\r\n\r\n    & .direction {\r\n      width: 30%;\r\n      height: 115px;\r\n      margin-top: -115px;\r\n      margin-left: 70%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Filters;\r\n","import styled from \"styled-components\";\r\n\r\nconst Avatar = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport default Avatar;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst UserName = styled.p`\r\n  width: 100%;\r\n  margin: 0 0 10px;\r\n  font-weight: bold;\r\n  font-size: 1.2em;\r\n  text-align: center;\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport default UserName;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FilmList from \"../UI/FilmList\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst FavoritesStructure = ({\r\n  favorites,\r\n  toggleFilmToFav,\r\n  nightmode,\r\n  className\r\n}) => {\r\n  return (\r\n    <section className={className}>\r\n      <h2>Favorites</h2>\r\n      {favorites.length > 0 ? (\r\n        <FilmList\r\n          nightmode={nightmode}\r\n          matchFilms={favorites}\r\n          toggleFilmToFav={toggleFilmToFav}\r\n          favorites={favorites}\r\n        />\r\n      ) : (\r\n        <p className=\"info-message\">Favorites is empty</p>\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nconst Favorites = styled(FavoritesStructure)`\r\n  width: 100%;\r\n  position: relative;\r\n\r\n  & h2 {\r\n    text-align: center;\r\n    margin: 15px 0;\r\n  }\r\n\r\n  & .info-message {\r\n    text-align: center;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    height: 2px;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    background-color: lightgrey;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: 60%;\r\n    margin: 0 auto;\r\n\r\n    &::after {\r\n      left: -${(20 / 60) * 100}%;\r\n      right: -${(20 / 60) * 100}%;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    order: 2;\r\n    width: 45%;\r\n    margin: 0;\r\n\r\n    &::after {\r\n      top: 0;\r\n      bottom: 0;\r\n      right: auto;\r\n      left: calc(-${(5 / 45) * 100}% - 1px);\r\n      width: 2px;\r\n      height: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Avatar from \"../UI/Avatar\";\r\nimport UserName from \"../UI/UserName\";\r\nimport InfoMessage from \"../UI/InfoMessage\";\r\nimport Favorites from \"./Favorites\";\r\nimport variables from \"../utilities/variables\";\r\nimport StateContext from \"../StateContext\";\r\n\r\nconst UserProfileStructure = ({ className }) => {\r\n  return (\r\n    <StateContext.Consumer>\r\n      {({\r\n        userName,\r\n        userAuthorized,\r\n        userAvatar,\r\n        defaultAvatar,\r\n        defaultName,\r\n        favorites,\r\n        nightModeIsOn,\r\n        methods\r\n      }) => (\r\n        <div className={className}>\r\n          <div className=\"wrapper\">\r\n            {!userName ? (\r\n              <InfoMessage color=\"orangered\">\r\n                Registration is unavailable at the moment, but you can add films\r\n                to favorites.\r\n              </InfoMessage>\r\n            ) : null}\r\n            <div className=\"user-info\">\r\n              <Avatar\r\n                src={userAuthorized ? userAvatar : defaultAvatar}\r\n                alt=\"Your avatar\"\r\n              />\r\n              <UserName>{userAuthorized ? userName : defaultName}</UserName>\r\n            </div>\r\n          </div>\r\n          <Favorites\r\n            favorites={favorites}\r\n            toggleFilmToFav={methods.toggleFilmToFav}\r\n            nightmode={nightModeIsOn}\r\n          />\r\n        </div>\r\n      )}\r\n    </StateContext.Consumer>\r\n  );\r\n};\r\n\r\nconst UserProfile = styled(UserProfileStructure)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-flow: row wrap;\r\n  flex-shrink: 0;\r\n  width: 100%;\r\n  padding: 20px 0;\r\n\r\n  .user-info {\r\n    width: 30%;\r\n    margin-top: 20px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    align-self: center;\r\n  }\r\n\r\n  .wrapper {\r\n    display: flex;\r\n    flex-flow: column;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    & .wrapper {\r\n      flex-flow: row;\r\n      justify-content: space-around;\r\n    }\r\n\r\n    & .user-info {\r\n      width: 15%;\r\n      margin-top: 0;\r\n      align-self: flex-start;\r\n      order: -1;\r\n      font-size: 0.7em;\r\n      margin-left: 0;\r\n      margin-right: 0;\r\n    }\r\n\r\n    & .wrapper > p {\r\n      width: 65%;\r\n      margin-right: 0;\r\n      margin-left: 0;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    order: 3;\r\n    padding-bottom: 0;\r\n    padding-top: 40px;\r\n\r\n    & > .wrapper {\r\n      width: 45%;\r\n      align-content: flex-start;\r\n      align-items: flex-start;\r\n      flex-flow: row wrap;\r\n    }\r\n\r\n    .user-info {\r\n      width: 30%;\r\n      margin-bottom: 50px;\r\n      margin-top: 50px;\r\n    }\r\n\r\n    & .wrapper > p {\r\n      width: 75%;\r\n      margin: 0;\r\n      margin-bottom: 50px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default UserProfile;\r\n","import React from \"react\";\r\nimport Filters from \"./Filters\";\r\nimport Profile from \"./Profile\";\r\n\r\nconst Menu = ({ openedMenuName, menuIsOpen, direction, nightmode }) => {\r\n  let Menu;\r\n  if (openedMenuName === \"Filters\" && menuIsOpen) {\r\n    Menu = <Filters nightmode={nightmode} direction={direction} />;\r\n  } else if (openedMenuName === \"Profile\" && menuIsOpen) {\r\n    Menu = <Profile />;\r\n  } else {\r\n    Menu = null;\r\n  }\r\n  return Menu;\r\n};\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport SearchBlock from \"./SearchBlock\";\r\nimport ButtonsBlock from \"../UI/ButtonsBlock\";\r\nimport Button from \"../UI/Button\";\r\nimport Menu from \"./Menu\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nimport StateContext from \"../StateContext\";\r\n\r\nconst HeaderStructure = ({ className }) => (\r\n  <StateContext.Consumer>\r\n    {({\r\n      nightModeIsOn,\r\n      menuIsOpen,\r\n      openedMenuName,\r\n      searching,\r\n      searchValue,\r\n      loading,\r\n      matchFilms,\r\n      direction,\r\n      genres,\r\n      favorites,\r\n      methods\r\n    }) => (\r\n      <header className={className}>\r\n        <h1>Moviesearcher</h1>\r\n        <SearchBlock\r\n          searching={searching}\r\n          searchValue={searchValue}\r\n          loading={loading}\r\n          nightmode={nightModeIsOn}\r\n          matchFilms={matchFilms}\r\n          genres={genres}\r\n          favorites={favorites}\r\n          methods={methods}\r\n        />\r\n        <ButtonsBlock>\r\n          <Button\r\n            name=\"Filters\"\r\n            onClick={methods.toggleMenu}\r\n            nightmode={nightModeIsOn}\r\n            menuIsOpen={menuIsOpen}\r\n            openedMenuName={openedMenuName}\r\n          >\r\n            Filters\r\n          </Button>\r\n          <Button\r\n            name=\"Profile\"\r\n            onClick={methods.toggleMenu}\r\n            nightmode={nightModeIsOn}\r\n            menuIsOpen={menuIsOpen}\r\n            openedMenuName={openedMenuName}\r\n          >\r\n            Profile\r\n          </Button>\r\n          <Button\r\n            name=\"Night mode\"\r\n            onClick={methods.toggleNightMode}\r\n            nightmode={nightModeIsOn}\r\n          />\r\n        </ButtonsBlock>\r\n        <Menu\r\n          menuIsOpen={menuIsOpen}\r\n          openedMenuName={openedMenuName}\r\n          nightmode={nightModeIsOn}\r\n          direction={direction}\r\n        />\r\n      </header>\r\n    )}\r\n  </StateContext.Consumer>\r\n);\r\n\r\nconst MainHeader = styled(HeaderStructure)`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  & h1 {\r\n    width: 100%;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    & h1 {\r\n      font-size: 1.6em;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    padding-bottom: 30px;\r\n    padding-top: 30px;\r\n\r\n    & h1 {\r\n      margin: 0;\r\n      font-size: 1.8em;\r\n      width: 45%;\r\n      margin-top: 30px;\r\n    }\r\n\r\n    & > div:nth-child(2) {\r\n      order: 2;\r\n      margin-top: -17px;\r\n      margin-left: auto;\r\n    }\r\n\r\n    & > div:nth-child(3) {\r\n      order: 1;\r\n      margin-top: auto;\r\n      margin-bottom: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default MainHeader;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ButtonsBlock from \"../UI/ButtonsBlock\";\r\nimport Button from \"../UI/Button\";\r\nimport SearchBlock from \"./SearchBlock\";\r\nimport { Link } from \"react-router-dom\";\r\nimport homeIcoLight from \"../img/home-ico-light.svg\";\r\nimport homeIcoDark from \"../img/home-ico-dark.svg\";\r\nimport variables from \"../utilities/variables\";\r\nimport StateContext from \"../StateContext\";\r\n\r\nconst HeaderStructure = ({ className }) => {\r\n  return (\r\n    <StateContext.Consumer>\r\n      {({\r\n        nightModeIsOn,\r\n        searching,\r\n        searchValue,\r\n        loading,\r\n        matchFilms,\r\n        genres,\r\n        favorites,\r\n        methods\r\n      }) => (\r\n        <header className={className}>\r\n          <h1>Moviesearcher</h1>\r\n          <SearchBlock\r\n            searchValue={searchValue}\r\n            searching={searching}\r\n            matchFilms={matchFilms}\r\n            nightmode={nightModeIsOn}\r\n            loading={loading}\r\n            genres={genres}\r\n            favorites={favorites}\r\n            methods={methods}\r\n          />\r\n          <ButtonsBlock justify=\"flex-end\">\r\n            <Button\r\n              as={Link}\r\n              name=\"Main\"\r\n              nightmode={nightModeIsOn}\r\n              to=\"/\"\r\n              width=\"calc(33% / 2)\"\r\n              image={nightModeIsOn ? homeIcoLight : homeIcoDark}\r\n            />\r\n            <Button\r\n              name=\"Night mode\"\r\n              onClick={methods.toggleNightMode}\r\n              nightmode={nightModeIsOn}\r\n            />\r\n          </ButtonsBlock>\r\n        </header>\r\n      )}\r\n    </StateContext.Consumer>\r\n  );\r\n};\r\n\r\nconst SideHeader = styled(HeaderStructure)`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  & h1 {\r\n    width: 100%;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    & h1 {\r\n      font-size: 1.6em;\r\n    }\r\n\r\n    & button {\r\n      width: 50%;\r\n    }\r\n\r\n    & a {\r\n      width: 50%;\r\n    }\r\n\r\n    & > div:nth-child(3) {\r\n      width: calc(40% + 4px);\r\n      margin-left: -4px;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    padding-top: 30px;\r\n\r\n    & h1 {\r\n      font-size: 1.8em;\r\n      width: 50%;\r\n      margin-top: 30px;\r\n      margin-bottom: 0;\r\n    }\r\n\r\n    & > div:nth-child(2) {\r\n      order: 2;\r\n      margin-left: auto;\r\n      margin-top: -17px;\r\n    }\r\n\r\n    & > div:nth-child(3) {\r\n      order: 1;\r\n      margin-top: auto;\r\n      width: calc(45% + 2px);\r\n      margin-left: -2px;\r\n      margin-bottom: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SideHeader;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FilmList from \"../UI/FilmList\";\r\nimport variables from \"../utilities/variables\";\r\nimport StateContext from \"../StateContext\";\r\n\r\nconst BestFilmsStructure = ({ className }) => (\r\n  <StateContext.Consumer>\r\n    {({ nightModeIsOn, bestMovies, genres, favorites, methods }) => {\r\n      return (\r\n        <section className={className}>\r\n          <h2>Best films</h2>\r\n          <FilmList\r\n            nightmode={nightModeIsOn}\r\n            matchFilms={bestMovies}\r\n            toggleFilmToFav={methods.toggleFilmToFav}\r\n            genres={genres}\r\n            favorites={favorites}\r\n            autoLoading={methods.autoLoading}\r\n            autoLoadingFunction={methods.getBestMovies}\r\n          />\r\n        </section>\r\n      );\r\n    }}\r\n  </StateContext.Consumer>\r\n);\r\n\r\nconst BestFilms = styled(BestFilmsStructure)`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n\r\n  & h2 {\r\n    text-align: center;\r\n    width: 100%;\r\n  }\r\n\r\n  & button {\r\n    margin: -2px 0 0 auto;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    height: 2px;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    background-color: lightgrey;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: 60%;\r\n    margin: 0 auto;\r\n    margin-bottom: 30px;\r\n\r\n    &::after {\r\n      left: -${(20 / 60) * 100}%;\r\n      right: -${(20 / 60) * 100}%;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    width: 45%;\r\n    margin: 0;\r\n    margin-bottom: 30px;\r\n\r\n    &::after {\r\n      display: none;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default BestFilms;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FilmList from \"../UI/FilmList\";\r\nimport variables from \"../utilities/variables\";\r\nimport StateContext from \"../StateContext\";\r\n\r\nconst FilteredFilmsStructure = ({ className }) => (\r\n  <StateContext.Consumer>\r\n    {({ nightModeIsOn, filteredMovies, genres, favorites, methods }) => (\r\n      <section className={className}>\r\n        <h2>Films by filters</h2>\r\n        <FilmList\r\n          nightmode={nightModeIsOn}\r\n          matchFilms={filteredMovies}\r\n          toggleFilmToFav={methods.toggleFilmToFav}\r\n          genres={genres}\r\n          favorites={favorites}\r\n          autoLoading={methods.autoLoading}\r\n          autoLoadingFunction={methods.getMoreFilteredMovies}\r\n        />\r\n      </section>\r\n    )}\r\n  </StateContext.Consumer>\r\n);\r\n\r\nconst FilteredFilms = styled(FilteredFilmsStructure)`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n\r\n  & h2 {\r\n    text-align: center;\r\n    width: 100%;\r\n  }\r\n\r\n  & button {\r\n    margin: -2px 0 0 auto;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    height: 2px;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    background-color: lightgrey;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: 60%;\r\n    margin: 0 auto;\r\n    margin-bottom: 30px;\r\n\r\n    &::after {\r\n      left: -${(20 / 60) * 100}%;\r\n      right: -${(20 / 60) * 100}%;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    width: 45%;\r\n    margin: 0;\r\n    margin-bottom: 30px;\r\n\r\n    &::after {\r\n      top: 0;\r\n      bottom: 0;\r\n      left: auto;\r\n      right: calc(-${(5 / 45) * 100}% - 1px);\r\n      width: 2px;\r\n      height: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default FilteredFilms;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BestFilms from \"./BestFilms\";\r\nimport FilteredFilms from \"./FilteredFilms\";\r\nimport variables from \"../utilities/variables\";\r\nimport StateContext from \"../StateContext\";\r\n\r\nconst MainStructure = ({ className }) => (\r\n  <StateContext.Consumer>\r\n    {({\r\n      filteredMovies,\r\n      bestMovies,\r\n      openedMenuName,\r\n      menuIsOpen,\r\n      nightModeIsOn\r\n    }) =>\r\n      (filteredMovies.length > 0 || bestMovies.length > 0) &&\r\n      !(openedMenuName === \"Profile\" && menuIsOpen) && (\r\n        <main className={className}>\r\n          {filteredMovies.length < 1 ? null : openedMenuName === \"Profile\" &&\r\n            menuIsOpen ? null : (\r\n            <FilteredFilms nightmode={nightModeIsOn} />\r\n          )}\r\n          {bestMovies.length < 1 ? null : openedMenuName === \"Profile\" &&\r\n            menuIsOpen ? null : (\r\n            <BestFilms nightmode={nightModeIsOn} />\r\n          )}\r\n        </main>\r\n      )\r\n    }\r\n  </StateContext.Consumer>\r\n);\r\n\r\nconst Main = styled(MainStructure)`\r\n  position: relative;\r\n  padding-top: 20px;\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: ${props =>\r\n      props.filteredMovies.length !== 0 ? \"space-between\" : \"center\"};\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      height: 2px;\r\n      left: 0;\r\n      right: 0;\r\n      top: 0;\r\n      background-color: lightgrey;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Main;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FilmList from \"../UI/FilmList\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst SimilarFilmsStructure = React.forwardRef(\r\n  (\r\n    {\r\n      similarFilms,\r\n      toggleFilmToFav,\r\n      nightmode,\r\n      favorites,\r\n      className,\r\n      id,\r\n      prevId,\r\n      genres,\r\n      getSimilarFilms,\r\n      autoLoading\r\n    },\r\n    ref\r\n  ) => {\r\n    return (\r\n      <section className={className}>\r\n        <h2>Similar films</h2>\r\n        <FilmList\r\n          ref={ref}\r\n          nightmode={nightmode}\r\n          matchFilms={similarFilms}\r\n          toggleFilmToFav={toggleFilmToFav}\r\n          favorites={favorites}\r\n          genres={genres}\r\n          autoLoading={autoLoading}\r\n          autoLoadingFunction={() => getSimilarFilms(id, prevId)}\r\n        />\r\n      </section>\r\n    );\r\n  }\r\n);\r\n\r\nconst SimilarFilms = styled(SimilarFilmsStructure)`\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  position: relative;\r\n  margin-bottom: 20px;\r\n\r\n  & h2 {\r\n    text-align: center;\r\n    width: 100%;\r\n  }\r\n\r\n  & button {\r\n    margin: -2px 0 0 auto;\r\n  }\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    height: 2px;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    background-color: lightgrey;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    width: 60%;\r\n    margin: 20px auto 0;\r\n    margin-bottom: 30px;\r\n\r\n    &::after {\r\n      left: -${(20 / 60) * 100}%;\r\n      right: -${(20 / 60) * 100}%;\r\n    }\r\n  }\r\n\r\n  @media (min-width: ${variables.widthL}) {\r\n    width: 45%;\r\n    margin: 30px auto 30px;\r\n\r\n    &::after {\r\n      left: -${(55 / 2 / 45) * 100}%;\r\n      right: -${(55 / 2 / 45) * 100}%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SimilarFilms;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst RatingStructure = ({ className, voteAverage, voteCount }) => (\r\n  <div className={className}>\r\n    {voteAverage && <p className=\"vote-avg\">{voteAverage}</p>}\r\n    {voteCount && <p className=\"vote-count\">{voteCount} votes</p>}\r\n  </div>\r\n);\r\n\r\nconst Rating = styled(RatingStructure)`\r\n  position: absolute;\r\n  right: 0;\r\n  top: 5%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  padding: 5px;\r\n  background-color: ${props =>\r\n    props.nightmode ? variables.backgroundColorDark : variables.fontColorDark};\r\n\r\n  & .vote-avg {\r\n    margin: 0;\r\n    margin-bottom: 10px;\r\n    font-size: 2em;\r\n    color: ${props =>\r\n      props.voteAverage >= 7\r\n        ? \"mediumseagreen\"\r\n        : props.voteAverage >= 5\r\n        ? \"#f3f300\"\r\n        : props.voteAverage >= 3\r\n        ? \"orange\"\r\n        : \"orangered\"};\r\n  }\r\n\r\n  & .vote-count {\r\n    margin: 0;\r\n    align-self: flex-end;\r\n    color: ${props =>\r\n      props.nightmode\r\n        ? variables.fontColorLight\r\n        : variables.backgroundColorLight};\r\n    font-size: 1em;\r\n  }\r\n\r\n  &:hover {\r\n    opacity: 0.2;\r\n  }\r\n`;\r\n\r\nexport default Rating;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\n\r\nconst Tagline = styled.p`\r\n  margin-top: 0;\r\n  width: 100%;\r\n  position: relative;\r\n  font-style: italic;\r\n  padding-left: 10px;\r\n\r\n  &::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 2px;\r\n    left: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    background-color: ${props =>\r\n      props.nightmode ? variables.fontColorLight : variables.fontColorDark};\r\n  }\r\n`;\r\n\r\nexport default Tagline;\r\n","import styled from \"styled-components\";\r\nimport variables from \"../utilities/variables\";\r\nimport heartIcoLight from \"../img/heart-off-light.svg\";\r\nimport heartIcoDark from \"../img/heart-off-dark.svg\";\r\nimport heartIcoActive from \"../img/heart-on.svg\";\r\n\r\nconst FavButton = styled.button`\r\n  width: 25%;\r\n  height: auto;\r\n  padding: 0;\r\n  border: none;\r\n  background-repeat: no-repeat;\r\n  background-size: 80% 80%;\r\n  background-position: 50% 50%;\r\n  background-color: transparent;\r\n  background-image: ${props =>\r\n    props.favorites.some(film => Number(film.id) === Number(props.filmData.id))\r\n      ? `url(${heartIcoActive})`\r\n      : props.nightmode\r\n      ? `url(${heartIcoLight})`\r\n      : `url(${heartIcoDark})`};\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-size: 90% 90%;\r\n    opacity: ${props =>\r\n      props.favorites.some(\r\n        film => Number(film.id) === Number(props.filmData.id)\r\n      )\r\n        ? \"0.5\"\r\n        : \"1\"};\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    background-size: 70% 70%;\r\n    &:hover {\r\n      background-size: 80% 80%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default FavButton;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport img404 from \"../img/img404.jpg\";\r\nimport variables from \"../utilities/variables\";\r\nimport InfoMessage from \"../UI/InfoMessage\";\r\nimport SimilarFilms from \"./SimilarFilms\";\r\nimport Rating from \"./Rating\";\r\nimport Tagline from \"./Tagline\";\r\nimport FavButton from \"./FavButton\";\r\nimport StateContext from \"../StateContext\";\r\n\r\n// const ref = React.createRef();\r\n\r\nclass FilmPageStructure extends React.Component {\r\n  static contextType = StateContext;\r\n\r\n  ref = React.createRef();\r\n\r\n  componentDidMount() {\r\n    window.scrollTo(0, 0);\r\n    this.context.methods.loadFilmData(\r\n      Number(this.props.location.pathname.slice(10))\r\n    );\r\n    this.context.methods.getSimilarFilms(\r\n      Number(this.props.location.pathname.slice(10)),\r\n      this.context.filmData.id\r\n    );\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.location.pathname !== prevProps.location.pathname) {\r\n      window.scrollTo(0, 0);\r\n      // console.log(this.ref);\r\n      this.ref.current.scrollTop = 0;\r\n      this.context.methods.loadFilmData(\r\n        Number(this.props.location.pathname.slice(10))\r\n      );\r\n      this.context.methods.getSimilarFilms(\r\n        Number(this.props.location.pathname.slice(10))\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { className } = this.props;\r\n    let {\r\n      filmData,\r\n      nightModeIsOn,\r\n      favorites,\r\n      similarFilms,\r\n      genres,\r\n      methods\r\n    } = this.context;\r\n\r\n    let convertRuntime = runtime => {\r\n      if (runtime < 60) {\r\n        let str = runtime + \" minutes.\";\r\n        return str;\r\n      } else {\r\n        let hours = Math.floor(runtime / 60);\r\n        let minutes = runtime % 60;\r\n        let str = `${hours} ${\r\n          hours > 1 ? \"hours\" : \"hour\"\r\n        } ${minutes} minutes.`;\r\n        return str;\r\n      }\r\n    };\r\n\r\n    let convertDate = date => {\r\n      let day = date.getDay();\r\n      let months = [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\"\r\n      ];\r\n      let month = months[date.getMonth()];\r\n      let year = date.getFullYear();\r\n      let str = `${month} ${day}, ${year}`;\r\n      return str;\r\n    };\r\n\r\n    let convertMoney = amount => {\r\n      let symbols = String(amount)\r\n        .split(\"\")\r\n        .reverse();\r\n      symbols = symbols.map((s, i, arr) => {\r\n        if (!((i + 1) % 3) && i + 1 !== arr.length) {\r\n          return \" \" + s;\r\n        } else return s;\r\n      });\r\n      let str = symbols.reverse().join(\"\");\r\n      return str;\r\n    };\r\n\r\n    let genresList =\r\n      filmData.genres && filmData.genres.map(genre => genre.name).join(\", \");\r\n    let releaseDate =\r\n      filmData.release_date && convertDate(new Date(filmData.release_date));\r\n    let countries =\r\n      filmData.production_countries &&\r\n      filmData.production_countries.map(country => country.name).join(\", \");\r\n    let companies =\r\n      filmData.production_companies &&\r\n      filmData.production_companies.map(comp => comp.name).join(\", \");\r\n    let budget = filmData.budget && convertMoney(filmData.budget);\r\n    let revenue = filmData.revenue && convertMoney(filmData.revenue);\r\n    let homepage = filmData.homepage;\r\n    let runtime = filmData.runtime && convertRuntime(filmData.runtime);\r\n    let tagline = filmData.tagline;\r\n    let voteAverage, voteCount;\r\n    if (filmData.vote_average) {\r\n      voteAverage =\r\n        String(filmData.vote_average).length === 1\r\n          ? [...String(filmData.vote_average).split(\"\"), \".\", \"0\"].join(\"\")\r\n          : filmData.vote_average;\r\n      voteCount = filmData.vote_count;\r\n    }\r\n\r\n    return filmData ? (\r\n      <main className={className}>\r\n        <h2 className=\"title\">{filmData.title || \"No title.\"}</h2>\r\n        {tagline && <Tagline nightmode={nightModeIsOn}>{tagline}</Tagline>}\r\n        <div className=\"poster-block\">\r\n          <img\r\n            className=\"image\"\r\n            src={\r\n              filmData.poster_path\r\n                ? `https://image.tmdb.org/t/p/w400/${filmData.poster_path}`\r\n                : img404\r\n            }\r\n            alt={filmData.title || \"No title.\"}\r\n          />\r\n          {voteAverage && (\r\n            <Rating\r\n              voteAverage={voteAverage}\r\n              voteCount={voteCount}\r\n              nightmode={nightModeIsOn}\r\n            />\r\n          )}\r\n          <div className=\"widgets\">\r\n            <FavButton\r\n              onClick={() => {\r\n                methods.toggleFilmToFav({\r\n                  id: filmData.id,\r\n                  poster_path: filmData.poster_path,\r\n                  title: filmData.title,\r\n                  release_date: filmData.release_date,\r\n                  vote_average: filmData.vote_average,\r\n                  vote_count: filmData.vote_count,\r\n                  genresOfFilm: genresList\r\n                });\r\n              }}\r\n              favorites={favorites}\r\n              filmData={filmData}\r\n              nightmode={nightModeIsOn}\r\n            />\r\n            <InfoMessage color=\"orangered\" width=\"75%\">\r\n              Estimating is unavailable at the moment.\r\n            </InfoMessage>\r\n          </div>\r\n        </div>\r\n        <div className=\"additional-info\">\r\n          {filmData.overview && <p className=\"overview\">{filmData.overview}</p>}\r\n          {genresList && (\r\n            <p className=\"genres\">\r\n              <span className=\"option-name\">Genres:</span> {genresList}.\r\n            </p>\r\n          )}\r\n          {runtime && (\r\n            <p className=\"runtime\">\r\n              <span className=\"option-name\">Runtime:</span> {runtime}\r\n            </p>\r\n          )}\r\n          {releaseDate && (\r\n            <time className=\"date\" dateTime={filmData.release_date}>\r\n              <span className=\"option-name\">Release date:</span> {releaseDate}.\r\n            </time>\r\n          )}\r\n          {countries && (\r\n            <p className=\"counries\">\r\n              <span className=\"option-name\">Counries:</span> {countries}.\r\n            </p>\r\n          )}\r\n          {companies && (\r\n            <p className=\"companies\">\r\n              <span className=\"option-name\">Companies:</span> {companies}.\r\n            </p>\r\n          )}\r\n          {Boolean(budget) && (\r\n            <p className=\"budget\">\r\n              <span className=\"option-name\">Budget:</span> ${budget}.\r\n            </p>\r\n          )}\r\n          {Boolean(revenue) && (\r\n            <p className=\"revenue\">\r\n              <span className=\"option-name\">Revenue:</span> ${revenue}.\r\n            </p>\r\n          )}\r\n          {homepage && (\r\n            <p className=\"homepage\">\r\n              <span className=\"option-name\">Homepage:</span>{\" \"}\r\n              <a href={`${homepage}`}>Link</a>\r\n            </p>\r\n          )}\r\n        </div>\r\n        {similarFilms.length > 0 && (\r\n          <SimilarFilms\r\n            ref={this.ref}\r\n            id={Number(this.props.location.pathname.slice(10))}\r\n            prevId={filmData.id}\r\n            similarFilms={similarFilms}\r\n            toggleFilmToFav={methods.toggleFilmToFav}\r\n            nightmode={nightModeIsOn}\r\n            genres={genres}\r\n            favorites={favorites}\r\n            getSimilarFilms={methods.getSimilarFilms}\r\n            autoLoading={methods.autoLoading}\r\n          />\r\n        )}\r\n      </main>\r\n    ) : null;\r\n  }\r\n}\r\n\r\nconst FilmPage = styled(FilmPageStructure)`\r\n  & .image {\r\n    display: block;\r\n    width: 100%;\r\n    height: auto;\r\n  }\r\n\r\n  & .poster-block {\r\n    position: relative;\r\n  }\r\n\r\n  & .option-name {\r\n    font-weight: bold;\r\n  }\r\n\r\n  & .overview {\r\n    &::first-letter {\r\n      font-size: 1.4em;\r\n    }\r\n  }\r\n\r\n  & .homepage {\r\n    & a {\r\n      color: inherit;\r\n      &:hover {\r\n        text-decoration: none;\r\n      }\r\n    }\r\n  }\r\n\r\n  & .widgets {\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n  }\r\n\r\n  @media (min-width: ${variables.widthM}) {\r\n    display: flex;\r\n    flex-flow: row wrap;\r\n    justify-content: space-between;\r\n\r\n    & .title {\r\n      width: 100%;\r\n    }\r\n\r\n    & .poster-block {\r\n      width: 45%;\r\n    }\r\n\r\n    & .overview {\r\n      margin-top: 0;\r\n    }\r\n\r\n    & .additional-info {\r\n      width: 50%;\r\n    }\r\n\r\n    & .widgets {\r\n      & p {\r\n        font-size: 0.8em;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default FilmPage;\r\n","import React from \"react\";\r\nimport MainHeader from \"./Header/MainHeader\";\r\nimport SideHeader from \"./Header/SideHeader\";\r\nimport Main from \"./Main/Main\";\r\nimport FilmPage from \"./FilmPage/FilmPage\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport StateContext from \"./StateContext\";\r\n\r\nconst RoutingComponent = () => (\r\n  <StateContext.Consumer>\r\n    {({ filteredMovies }) => (\r\n      <>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={MainHeader} />\r\n          <Route path=\"/filmpage/\" component={SideHeader} />\r\n        </Switch>\r\n        <Switch>\r\n          <Route\r\n            path=\"/\"\r\n            exact\r\n            render={props => <Main filteredMovies={filteredMovies} />}\r\n          />\r\n          <Route path=\"/filmpage/\" render={props => <FilmPage {...props} />} />\r\n        </Switch>\r\n      </>\r\n    )}\r\n  </StateContext.Consumer>\r\n);\r\n\r\nexport default RoutingComponent;\r\n","import React, { Component } from \"react\";\r\nimport Loading from \"./UI/Loading\";\r\nimport Footer from \"./Footer/Footer\";\r\nimport Body from \"./UI/Body\";\r\nimport WidthContainer from \"./UI/WidthContainer\";\r\nimport { sortByRelevance } from \"./utilities/sorting\";\r\nimport defaultAvatar from \"./img/default-avatar.jpg\";\r\nimport { debounce } from \"lodash\";\r\nimport Helmet from \"react-helmet\";\r\nimport apiQueries from \"./utilities/apiQueries\";\r\nimport RoutingComponent from \"./RoutingComponent\";\r\nimport StateContext from \"./StateContext\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    loading: true,\r\n\r\n    userAuthorized: false,\r\n    userAvatar: null,\r\n    defaultAvatar: defaultAvatar,\r\n    userName: null,\r\n    defaultName: \"The Guest\",\r\n\r\n    genres: null,\r\n    sortingOptions: [\"popularity\", \"votes\", \"rating\", \"date\"],\r\n    sortBy: \"popularity\",\r\n    direction: \"descending\",\r\n    filteredMovies: [],\r\n    filteredMoviesPage: 1,\r\n\r\n    bestMovies: [],\r\n    bestMoviesPage: 1,\r\n\r\n    searchValue: \"\",\r\n    searching: false,\r\n    matchFilms: null,\r\n\r\n    favorites: [],\r\n\r\n    openedMenuName: \"\",\r\n    menuIsOpen: false,\r\n\r\n    nightModeIsOn: false,\r\n\r\n    filmData: {},\r\n    similarFilms: [],\r\n    similarFilmsPage: 1,\r\n\r\n    methods: {\r\n      autoLoading: (target, func) => {\r\n        this.autoLoading(target, func);\r\n      },\r\n      getSortingOption: () => {\r\n        this.getSortingOption();\r\n      },\r\n      toggleGenre: event => {\r\n        this.toggleGenre(event);\r\n      },\r\n      toggleSorting: event => {\r\n        this.toggleSorting(event);\r\n      },\r\n      toggleDirection: event => {\r\n        this.toggleDirection(event);\r\n      },\r\n      getBestMovies: () => {\r\n        this.getBestMovies();\r\n      },\r\n      getFilteredMovies: () => {\r\n        this.getFilteredMovies();\r\n      },\r\n      getMoreFilteredMovies: () => {\r\n        this.getMoreFilteredMovies();\r\n      },\r\n      searchFilms: () => {\r\n        this.searchFilms();\r\n      },\r\n      toggleFilmToFav: filmData => {\r\n        this.toggleFilmToFav(filmData);\r\n      },\r\n      loadFilmData: filmId => {\r\n        this.loadFilmData(filmId);\r\n      },\r\n      getSimilarFilms: (filmId, prevFilmId) => {\r\n        this.getSimilarFilms(filmId, prevFilmId);\r\n      },\r\n      changeSearchValue: event => {\r\n        this.changeSearchValue(event);\r\n      },\r\n      clearSearchValue: input => {\r\n        this.clearSearchValue(input);\r\n      },\r\n      enableSearching: () => {\r\n        this.enableSearching();\r\n      },\r\n      disableSearching: () => {\r\n        this.disableSearching();\r\n      },\r\n      toggleMenu: event => {\r\n        this.toggleMenu(event);\r\n      },\r\n      toggleNightMode: event => {\r\n        this.toggleNightMode(event);\r\n      }\r\n    }\r\n  };\r\n\r\n  getSortingOption = () => {\r\n    let sortBy;\r\n    if (this.state.sortBy === \"popularity\") {\r\n      sortBy =\r\n        this.state.direction === \"descending\"\r\n          ? \"popularity.desc\"\r\n          : \"popularity.asc\";\r\n    }\r\n    if (this.state.sortBy === \"date\") {\r\n      sortBy =\r\n        this.state.direction === \"descending\"\r\n          ? \"release_date.desc\"\r\n          : \"release_date.asc\";\r\n    }\r\n    if (this.state.sortBy === \"rating\") {\r\n      sortBy =\r\n        this.state.direction === \"descending\"\r\n          ? \"vote_average.desc\"\r\n          : \"vote_average.asc\";\r\n    }\r\n    if (this.state.sortBy === \"votes\") {\r\n      sortBy =\r\n        this.state.direction === \"descending\"\r\n          ? \"vote_count.desc\"\r\n          : \"vote_count.asc\";\r\n    }\r\n    return sortBy;\r\n  };\r\n\r\n  getGenres = () => {\r\n    fetch(apiQueries.getGenresQuery())\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(({ genres }) => {\r\n        let reducedGenres = genres.reduce((value, item) => {\r\n          value[item.name] = { id: item.id, enabled: false };\r\n          return value;\r\n        }, {});\r\n        this.setState({ genres: reducedGenres });\r\n      })\r\n      .catch(error => {\r\n        alert(`Error on fetching genres: ${error}`);\r\n      });\r\n  };\r\n\r\n  toggleGenre = event => {\r\n    let toggledGenre = event.target.name;\r\n    this.setState({\r\n      genres: {\r\n        ...this.state.genres,\r\n        [toggledGenre]: {\r\n          ...this.state.genres[toggledGenre],\r\n          enabled: !this.state.genres[toggledGenre].enabled\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  toggleSorting = event => {\r\n    this.setState({ sortBy: event.target.value });\r\n  };\r\n\r\n  toggleDirection = event => {\r\n    this.setState({ direction: event.target.value });\r\n  };\r\n\r\n  getBestMovies = () => {\r\n    this.setState({ loading: true });\r\n    fetch(apiQueries.getBestFilmsQuery(this.state.bestMoviesPage))\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(({ results }) => {\r\n        this.setState(prevState => ({\r\n          bestMovies: [...prevState.bestMovies].concat(results),\r\n          bestMoviesPage: ++prevState.bestMoviesPage,\r\n          loading: false\r\n        }));\r\n      })\r\n      .catch(error => {\r\n        alert(`Error on fetching best films: ${error}`);\r\n      });\r\n  };\r\n\r\n  getFilteredMovies = () => {\r\n    this.setState({ loading: true });\r\n    let enabledGenres = [];\r\n    for (let key in this.state.genres) {\r\n      if (this.state.genres[key].enabled === true) {\r\n        enabledGenres = [...enabledGenres, this.state.genres[key].id];\r\n      }\r\n    }\r\n    if (enabledGenres.length > 0) {\r\n      let page = 1;\r\n      let genresIds = encodeURIComponent(enabledGenres.join(\",\"));\r\n      let sortBy = this.getSortingOption();\r\n      fetch(apiQueries.getFilteredFilmsQuery(sortBy, page, genresIds))\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(obj => {\r\n          let filteredMovies = obj.results;\r\n          this.setState({\r\n            filteredMovies: filteredMovies,\r\n            filteredMoviesPage: page,\r\n            loading: false\r\n          });\r\n        })\r\n        .catch(error => {\r\n          alert(`Error on getting films by filters: ${error}`);\r\n        });\r\n    } else if (enabledGenres.length < 1) {\r\n      this.setState({\r\n        filteredMovies: [],\r\n        filteredMoviesPage: 1,\r\n        loading: false\r\n      });\r\n    }\r\n  };\r\n\r\n  getMoreFilteredMovies = () => {\r\n    this.setState({ loading: true });\r\n    let enabledGenres = [];\r\n    for (let key in this.state.genres) {\r\n      if (this.state.genres[key].enabled === true) {\r\n        enabledGenres = [...enabledGenres, this.state.genres[key].id];\r\n      }\r\n    }\r\n    let genresIds = encodeURIComponent(enabledGenres.join(\",\")),\r\n      page = this.state.filteredMoviesPage,\r\n      sortBy = this.getSortingOption();\r\n    fetch(apiQueries.getFilteredFilmsQuery(sortBy, ++page, genresIds))\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(({ results }) => {\r\n        this.setState(prevState => ({\r\n          filteredMovies: [...prevState.filteredMovies].concat(results),\r\n          filteredMoviesPage: ++prevState.filteredMoviesPage,\r\n          loading: false\r\n        }));\r\n      })\r\n      .catch(error => {\r\n        alert(`Error on getting additional films by filters: ${error}`);\r\n      });\r\n  };\r\n\r\n  searchFilms = debounce(() => {\r\n    if (this.state.searchValue) {\r\n      this.setState({ loading: true });\r\n      let string = encodeURIComponent(this.state.searchValue);\r\n      let lang = \"en-US\";\r\n      fetch(apiQueries.getSearchByStringQuery(lang, string))\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(obj => {\r\n          let films = sortByRelevance(obj);\r\n          this.setState({\r\n            matchFilms: films,\r\n            loading: false\r\n          });\r\n        })\r\n        .catch(error => {\r\n          alert(`Error on searching films: ${error}`);\r\n        });\r\n    }\r\n    if (!this.state.searchValue) {\r\n      this.setState({\r\n        matchFilms: [],\r\n        loading: false\r\n      });\r\n    }\r\n  }, 1500);\r\n\r\n  getFavFilms = () => {\r\n    if (localStorage[\"favorites\"]) {\r\n      this.setState({ favorites: [...JSON.parse(localStorage[\"favorites\"])] });\r\n    }\r\n  };\r\n\r\n  toggleFilmToFav = filmData => {\r\n    let filmId = filmData.id,\r\n      fav = this.state.favorites;\r\n    if (!fav.some(film => film.id === filmId)) {\r\n      let newFav = [{ ...filmData }, ...this.state.favorites];\r\n      this.setState({ favorites: newFav });\r\n      localStorage[\"favorites\"] = JSON.stringify(newFav);\r\n    } else {\r\n      let newFav = fav.filter(film => film.id !== filmId);\r\n      this.setState({ favorites: newFav });\r\n      localStorage[\"favorites\"] = JSON.stringify(newFav);\r\n    }\r\n  };\r\n\r\n  loadFilmData = filmId => {\r\n    let stateFilmId = this.state.filmData.id;\r\n    if (filmId !== stateFilmId) {\r\n      this.setState({ loading: true, searching: false });\r\n      fetch(apiQueries.getFilmDataQuery(filmId))\r\n        .then(response => {\r\n          return response.json();\r\n        })\r\n        .then(obj => {\r\n          this.setState({ filmData: obj, loading: false });\r\n        })\r\n        .catch(error => {\r\n          alert(`Error on loading film data: ${error}`);\r\n        });\r\n    }\r\n  };\r\n\r\n  getSimilarFilms = (filmId, prevFilmId) => {\r\n    this.setState({ loading: true });\r\n    let page = filmId === prevFilmId ? this.state.similarFilmsPage + 1 : 1;\r\n    fetch(apiQueries.getSimilarFilmsQuery(filmId, page))\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(({ results }) => {\r\n        if (filmId === prevFilmId) {\r\n          this.setState(prevState => ({\r\n            similarFilms: [...prevState.similarFilms].concat(results),\r\n            similarFilmsPage: ++prevState.similarFilmsPage,\r\n            loading: false\r\n          }));\r\n        } else {\r\n          this.setState({\r\n            similarFilms: results,\r\n            similarFilmsPage: 1,\r\n            loading: false\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        alert(`Error on fetching similar films: ${error}`);\r\n      });\r\n  };\r\n\r\n  changeSearchValue = event => {\r\n    event.preventDefault();\r\n    const value = event.target.value;\r\n    this.setState({ searchValue: value });\r\n  };\r\n\r\n  clearSearchValue = input => {\r\n    input.focus();\r\n    this.setState({ searchValue: \"\", matchFilms: null });\r\n  };\r\n\r\n  enableSearching = () => {\r\n    this.setState({ searching: true });\r\n  };\r\n\r\n  disableSearching = () => {\r\n    this.setState({ searching: false });\r\n  };\r\n\r\n  toggleMenu = event => {\r\n    event.preventDefault();\r\n    event.target.name === this.state.openedMenuName\r\n      ? this.setState({\r\n          menuIsOpen: !this.state.menuIsOpen\r\n        })\r\n      : this.setState({\r\n          openedMenuName: event.target.name,\r\n          menuIsOpen: true\r\n        });\r\n  };\r\n\r\n  toggleNightMode = event => {\r\n    event.preventDefault();\r\n    this.setState({\r\n      nightModeIsOn: !this.state.nightModeIsOn\r\n    });\r\n  };\r\n\r\n  autoLoading = (target, func) => {\r\n    if (target.scrollHeight - (target.scrollTop + target.offsetHeight) < 240)\r\n      func();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getGenres();\r\n    this.getFavFilms();\r\n    this.getBestMovies();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Helmet\r\n          title={\r\n            ~window.location.pathname.indexOf(\"filmpage\")\r\n              ? this.state.filmData.title\r\n              : this.state.openedMenuName === \"Profile\" && this.state.menuIsOpen\r\n              ? \"Profile\"\r\n              : \"Moviesearcher\"\r\n          }\r\n        />\r\n        <StateContext.Provider value={this.state}>\r\n          <Body nightmode={this.state.nightModeIsOn}>\r\n            <WidthContainer>\r\n              {this.state.loading && (\r\n                <Loading nightmode={this.state.nightModeIsOn}>\r\n                  Loading...\r\n                </Loading>\r\n              )}\r\n              <RoutingComponent />\r\n              <Footer nightmode={this.state.nightModeIsOn} />\r\n            </WidthContainer>\r\n          </Body>\r\n        </StateContext.Provider>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Router basename={process.env.PUBLIC_URL}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}